<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用 PHP Slim 4 建立一個 RESTful 框架 (基本配置篇)</title>
    <url>/2022-07-28/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>上學期學校的實作課之中，介紹了 Nodejs 的事件驅動、異步I/O特點，同時也練習使用 Express 和 React 充當前後端的框架。</p>
<p>於是乎我在想，PHP 當紅的框架是 Laravel，當初使用 Laravel 5.6 的時候，只知道它是一個完善的 PHP MVC 框架，可是如果單純使用 RESTful Api 的形式去使用，又顯得過於肥大，再加上 Laravel 學習曲線偏高，導致我對於這個框架避而不談。</p>
<p>就在我查找其他替代框架時(Symphony、CakePHP、CodeIgniter 4、Slim)發現了 Slim，Slim 這個框架非常特別，它不像主流框架一開始就跟你說它有什麼什麼功能，而是你需要什麼功能，可以按需擴充成自己想要的狀態。 </p>
<p>更何況它符合<span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL3Bzci9wc3ItNy1odHRwLW1lc3NhZ2UvMTYxNg==">PSR-7(Request、Response)<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL3Bzci9wc3ItMTEtY29udGFpbmVyLW1ldGEvMTYyMg==">PSR-11(Denpendency Injection)<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL3Bzci9wc3ItMTUtcmVxdWVzdC1oYW5kbGVycy8xNjI2">PSR-15(Middleware)<i class="fa fa-external-link-alt"></i></span>的規範，要找適用的函式庫都有一定的形式規範，不用擔心遇到寫法雜亂的 library。</p>
</blockquote>
<a id="more"></a> 

<ul>
<li>以下我構想這個框架要符合什麼條件:<ol>
<li>基於 ADR 模式</li>
<li>要有一個基礎的 ORM(可以不用 Migration)</li>
<li>要有 Jwt 功能</li>
<li>能夠輕鬆寫單元測試、E2E 測試</li>
<li>要使用 Docker 一鍵啟動</li>
<li>使用 Github Actions CI / CD</li>
</ol>
</li>
</ul>
<ul>
<li>本篇主要是參考 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbQ==">Fogless<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltNC1idWlsZC1yZXN0ZnVsLWFwaS8jY3JlYXRlLXNsaW0tYXBwbGljYXRpb24=">Slim 4 搭建 RESTful API<i class="fa fa-external-link-alt"></i></span> 以及 <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9kb3BpdHo=">Daniel Opitz<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly9vZGFuLmdpdGh1Yi5pby8yMDE5LzExLzA1L3NsaW00LXR1dG9yaWFsLmh0bWw=">Slim 4 - Tutorial<i class="fa fa-external-link-alt"></i></span>，並且結合自身所學，再根據個人習慣建構。基礎篇的建構方向是能夠有基本的環境、 Slim 雛形、基本的返回JSON資訊、以及 Middleware 和 php-di 的相關配置。</li>
</ul>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="本機最低需求"><a href="#本機最低需求" class="headerlink" title="本機最低需求"></a>本機最低需求</h3><ul>
<li>PHP 8.0 (目前沒有使用 php-7.4 實測過，所以希望至少可以 8.0 以上)</li>
<li>Composer</li>
<li>Docker、Docker-Compose<ul>
<li>Nginx </li>
<li>PHP 8.1</li>
<li>MariaDB</li>
</ul>
</li>
</ul>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><ul>
<li><p>使用 Docker 的原因很簡單，因為可以將自己想要的服務配置寫在一個yml檔，並用一個指令達成開啟 / 關閉的功能，再者，我的系統是 Windows，對於開發者而言其實安裝環境不是特別友善。</p>
</li>
<li><p>我們可以在專案目錄下建立一個 <code>docker-compose.yml</code>，並建立一個 docker 資料夾創建鏡像所需配置以利於打包。</p>
</li>
</ul>
<p><code>docker-compose.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># PHP 的容器配置，將會由 ./docker/php/Dockerfile 來進行打包生成</span></span><br><span class="line">  <span class="comment"># port 則是容器與機器端口的映射，可以自行調整</span></span><br><span class="line">  <span class="comment"># volumes 用於掛載本機與容器之間的文件，因為容器一旦關閉，所產生的文件就會被 Reset，所以掛載我們的專案才可以持續使用</span></span><br><span class="line">  <span class="comment"># depends_on 是表示容器之間的依賴關係，可以用來決定啟動順序。原本容器間都是隔離不相通的，為了讓他們可以互相溝通所以使用</span></span><br><span class="line">  <span class="comment"># image 是已經被打包好發布在 Docker Hub 的鏡像</span></span><br><span class="line">  <span class="comment"># restart 可以設定容器掛了是否要不要重啟</span></span><br><span class="line">  <span class="comment"># environment 是基本的配置，像是Mysql的部分直接配置好User、DB，不用手動慢慢建立</span></span><br><span class="line">  <span class="comment"># command 是開啟容器後，可以自動讓他下指令，我這邊的指令是用於把我的DB schema自動導入</span></span><br><span class="line">  <span class="attr">php:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">slim_php</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./docker/php</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'9000:9000'</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/var/www/slim_app</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">slim_nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:stable-alpine</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'8080:80'</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/var/www/slim_app</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">php</span></span><br><span class="line">    <span class="comment"># AS YOU NEED</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">slim_mysql</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10.4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=Example</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=root</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--init-file</span> <span class="string">/data/application/init.sql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3306:3306"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./docker/data/db/mysql:/var/lib/mysql"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./init.sql:/data/application/init.sql</span></span><br></pre></td></tr></table></figure>

<ul>
<li>配置需要的 PHP 環境</li>
</ul>
<p><code>docker/php/Dockerfile</code></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> php:<span class="number">8.1</span>-fpm</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt update \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apt install -y zlib1g-dev g++ git libicu-dev zip libzip-dev zip libpq-dev \</span></span><br><span class="line"><span class="bash">    &amp;&amp; docker-php-ext-configure pgsql -with-pgsql=/usr/<span class="built_in">local</span>/pgsql \</span></span><br><span class="line"><span class="bash">    &amp;&amp; docker-php-ext-install intl opcache pdo pdo_mysql pdo_pgsql \</span></span><br><span class="line"><span class="bash">    &amp;&amp; pecl install apcu \</span></span><br><span class="line"><span class="bash">    &amp;&amp; docker-php-ext-enable apcu \</span></span><br><span class="line"><span class="bash">    &amp;&amp; docker-php-ext-configure zip \</span></span><br><span class="line"><span class="bash">    &amp;&amp; docker-php-ext-install zip</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /var/www/slim_app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/<span class="built_in">local</span>/bin --filename=composer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git config --global user.email <span class="string">"&#123;your-email&#125;"</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; git config --global user.name <span class="string">"&#123;your-name&#125;"</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>配置 Nginx，主要是藉由 Http Server 向 php-fpm 傳遞服務請求，並將入口文件定義在 index.php，以及 log 存放位置(不過這邊我沒有掛載log，需要可以去yml配置掛載路徑)， fastcgi 的設定。</li>
</ul>
<p><code>docker/nginx/default.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    # 監聽端口</span><br><span class="line">    listen 80;</span><br><span class="line">    # 當訪問&quot;&#x2F;&quot;路徑，自動查找index.php</span><br><span class="line">    index index.php;</span><br><span class="line">    # 域名</span><br><span class="line">    server_name localhost;</span><br><span class="line">    # 入口文件</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;slim_app&#x2F;public;</span><br><span class="line">    # log 位置</span><br><span class="line">    error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;project_error.log;</span><br><span class="line">    access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;project_access.log;</span><br><span class="line"></span><br><span class="line">    # 訪問 uri(&quot;&#x2F;&quot;) 時的相關操作，</span><br><span class="line">    # try_files 按順序檢查文件是否存在，這邊使用index.php作為入口文件</span><br><span class="line">    # $uri 就是不帶任何參數的路徑</span><br><span class="line">    # $is_args是否帶有參數，如果有就會顯示&quot;?&quot;，沒有則為空</span><br><span class="line">    # $args就是參數</span><br><span class="line">    # Example:http:&#x2F;&#x2F;localhost&#x2F;abc?user_id&#x3D;1</span><br><span class="line">    # $uri &#x3D; &quot;&#x2F;abc&quot;</span><br><span class="line">    # $is_args &#x3D; &quot;?&quot;&quot;</span><br><span class="line">    # $args &#x3D; &quot;user_id&#x3D;1&quot;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        try_files $uri &#x2F;index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 當上一段訪問到index.php之後，則會跳來這裡</span><br><span class="line">    # 這邊主要是使用 cgi 的形式去訪問php的服務</span><br><span class="line">    # 因為我們使用php-fpm(預設服務端口9000)</span><br><span class="line">    # 再來，php是我們容器的名稱，容器會自動轉換成內網，我記得以 172.0.0.X 的形式顯示</span><br><span class="line">    # 剩下的就是官方基本配置了</span><br><span class="line">    location ~ ^&#x2F;index\\.php(&#x2F;|$) &#123;</span><br><span class="line">        fastcgi_pass php:9000;</span><br><span class="line">        fastcgi_split_path_info ^(.+\\.php)(&#x2F;.*)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line"></span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param DOCUMENT_ROOT $realpath_root;</span><br><span class="line"></span><br><span class="line">        fastcgi_buffer_size 128k;</span><br><span class="line">        fastcgi_buffers 4 256k;</span><br><span class="line">        fastcgi_busy_buffers_size 256k;</span><br><span class="line"></span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 如果很可惜配對不到php檔案，那麼就返回404</span><br><span class="line">    location ~ \\.php$ &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>配置DB Schema，目前主要建立一個 Example 作為本次實作資料庫，並且有一個 Users 表處理基本需求</li>
</ul>
<p><code>init.sql</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> Example;</span><br><span class="line"><span class="keyword">USE</span> Example;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`Example`</span>.<span class="string">`Users`</span> ( <span class="string">`id`</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT , <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>以上這些步驟處理完，使用 Docker 建立服務的步驟就算完成了。</li>
</ul>
<h3 id="安裝相關依賴"><a href="#安裝相關依賴" class="headerlink" title="安裝相關依賴"></a>安裝相關依賴</h3><ul>
<li>Compose 是 php 的套件管理器，它的功能就跟 Nodejs 的 Npm 是一樣的。請先在本機安裝 PHP、Compose 之後在 terminal 輸入以下安裝指令。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Medoo 是一個輕量化的 PHP ORM 函式庫，並且支援多種不同類型的 DB(sqlite、MSSQL、Oracle、PostgreSQL、Sybase)，也是我最常使用的 ORM</span></span><br><span class="line">composer require catfan/medoo: ^2.1</span><br><span class="line"><span class="comment"># php-di 幫助我們在 Slim 4 使用依賴注入和自動配裝功能</span></span><br><span class="line">composer require php-di/php-di: ^6.4</span><br><span class="line"><span class="comment"># 方便定位 Basepase 的好工具</span></span><br><span class="line">composer require selective/basepath: ^2.1</span><br><span class="line"><span class="comment"># 基於 slim/psr7 的裝飾器，主要是原生返回資訊的方法不夠簡潔，所以才採用</span></span><br><span class="line">composer require slim/http: ^1.0</span><br><span class="line"><span class="comment"># PSR-7 函式庫</span></span><br><span class="line">composer require slim/psr7: ^1.0</span><br><span class="line"><span class="comment"># Slim 4 的核心組件</span></span><br><span class="line">composer require slim/slim: ^4.10</span><br><span class="line"><span class="comment"># 引入 .env 檔案作為系統的環境變數</span></span><br><span class="line">composer require symfony/dotenv: ^6.0</span><br></pre></td></tr></table></figure>

<p>新增.gitignore，避免我們的 vendor、資料庫資料、敏感資訊上傳到 Github 上</p>
<p><code>.gitignore</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker&#x2F;data&#x2F;</span><br><span class="line">.env</span><br><span class="line">vendor&#x2F;</span><br><span class="line">.idea&#x2F;</span><br><span class="line">*.db</span><br></pre></td></tr></table></figure>

<h2 id="建構-Slim-4"><a href="#建構-Slim-4" class="headerlink" title="建構 Slim 4"></a>建構 Slim 4</h2><h3 id="環境配置-Settings"><a href="#環境配置-Settings" class="headerlink" title="環境配置(Settings)"></a>環境配置(Settings)</h3><ul>
<li><p>本專案將所有配置文件都放到 <code>config</code> 資料夾內。</p>
</li>
<li><p>首先可以建立 <code>config/settings.php</code> 當作我們的系統設定。這邊可以定義系統的基本設定(時區、除錯相關的配置)，在 return array 之中可以設定你想要給系統的一些變數。</p>
</li>
</ul>
<p><code>config/settings</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">1</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Timezone</span></span><br><span class="line">date_default_timezone_set(<span class="string">"Asia/Taipei"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本設定</span></span><br><span class="line"><span class="keyword">return</span> [];</span><br></pre></td></tr></table></figure>
<ul>
<li>在 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltNC1idWlsZC1yZXN0ZnVsLWFwaS8jY3JlYXRlLXNsaW0tYXBwbGljYXRpb24=">Fogless<i class="fa fa-external-link-alt"></i></span> 這篇文章有<strong>配置 DB 資訊</strong>、<strong>ERROR 顯示相關敏感訊息</strong>，但我認為如果提交到 Github 上可能會有安全性的風險，於是我才使用 <code>symfony/dotenv</code> 來讀取我們 <code>.env</code> 的資訊，如果認為麻煩也可以直接略過。</li>
</ul>
<p><code>.env</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># dev&#x2F;prod&#x2F;stage&#x2F;test</span><br><span class="line">MODE&#x3D;dev</span><br><span class="line"># MYSQL CONFIG</span><br><span class="line">DB_DRIVER&#x3D;mysql</span><br><span class="line">DB_NAME&#x3D;Example</span><br><span class="line">DB_HOST&#x3D;mysql</span><br><span class="line">DB_USER&#x3D;root</span><br><span class="line">DB_PASS&#x3D;root</span><br><span class="line">DB_CHARSET&#x3D;utf8mb4</span><br><span class="line"></span><br><span class="line"># SQLITE CONFIG</span><br><span class="line"># DB_DRIVER&#x3D;sqlite</span><br><span class="line"># DB_NAME&#x3D;.&#x2F;path&#x2F;Example.db</span><br><span class="line"></span><br><span class="line"># SETTINGS</span><br><span class="line">DISPLAY_ERROR_DETAILS&#x3D;1</span><br><span class="line">LOG_ERROR_DETAILS&#x3D;1</span><br><span class="line">LOG_ERRORS&#x3D;1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># JWT SETTINGS</span><br><span class="line">JWT_ISSUER&#x3D;SLIM_4</span><br><span class="line">JWT_LIFETIME&#x3D;86400</span><br><span class="line">JWT_PRIVATE_KEY&#x3D;</span><br><span class="line">JWT_PUBLIC_KEY&#x3D;</span><br></pre></td></tr></table></figure>

<h3 id="依賴注入容器-Container"><a href="#依賴注入容器-Container" class="headerlink" title="依賴注入容器(Container)"></a>依賴注入容器(Container)</h3><ul>
<li>其實這個專有名詞有涉及三種相關的概念，分別是：<ol>
<li>依賴注入(<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNCVCRSU5RCVFOCVCNSU5NiVFNiVCMyVBOCVFNSU4NSVBNSM6fjp0ZXh0PSVFNSU5QyVBOCVFOCVCQiU5RiVFOSVBQiU5NCVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCVBRCVFRiVCQyU4QyVFNCVCRSU5RCVFOCVCMyVCNCwlRTclQjUlQTYlRTYlOEUlQTUlRTYlOTQlQjYlRTYlOTYlQjklRTclOUElODQlRTklODElOEUlRTclQTglOEIlRTMlODAlODI=">Denpendency Injection<i class="fa fa-external-link-alt"></i></span>)</li>
<li>依賴注入容器(<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2xpbWZyYW1ld29yay5jb20vZG9jcy92NC9jb25jZXB0cy9kaS5odG1s">DIC，Dependency Injection Container<i class="fa fa-external-link-alt"></i></span>)</li>
<li>自動配裝(<span class="exturl" data-url="aHR0cHM6Ly9waHAtZGkub3JnL2RvYy9hdXRvd2lyaW5nLmh0bWw=">Autowiring<i class="fa fa-external-link-alt"></i></span>)</li>
</ol>
</li>
</ul>
<h4 id="依賴注入"><a href="#依賴注入" class="headerlink" title="依賴注入"></a>依賴注入</h4><ul>
<li><p>簡單來說，當我們在 OOP 設計的時候，常常需要使用到其他類的相關功能，但是在類中直接實例化會導致兩個類之間存在著<strong>強耦合(Strong Coupling)</strong>的關係，然而這樣維護程式碼的時候一個修改可能導致其他依賴類受到嚴重的影響，造成程式碼不易維護的情況。</p>
</li>
<li><p>這邊我們以<strong>手槍類</strong>和<strong>子彈類</strong>作為我們的例子。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bullet_2_34</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"填彈"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gun</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $bullet = <span class="keyword">new</span> Bullet_2_34();</span><br><span class="line">    $bullet-&gt;load();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"射擊"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$gun = <span class="keyword">new</span> Gun();</span><br><span class="line">$gun-&gt;shoot();</span><br><span class="line"><span class="comment">// 填彈</span></span><br><span class="line"><span class="comment">// 射擊</span></span><br></pre></td></tr></table></figure>

<ul>
<li>沒有依賴注入流程：<ol>
<li>Class Gun 實例化</li>
<li>Class Gun 調用 shoot 方法</li>
<li>發現需要必須要有 Class Bullet_2_34</li>
<li>Class Bullet_2_34 實例化</li>
<li>Class Bullet_2_34 調用 load 方法</li>
<li>Class Bullet_2_34 echo “填彈”</li>
<li>Class Gun echo “射擊”</li>
</ol>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bullet_2_34</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"填彈"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gun</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Bullet_2_34 $bullet;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Bullet_2_34 $bullet)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;bullet = $bullet;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;bullet-&gt;load();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"射擊"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$bullet = <span class="keyword">new</span> Bullet_2_34();</span><br><span class="line">$gun = <span class="keyword">new</span> Gun($bullet);</span><br><span class="line">$gun-&gt;shoot();</span><br><span class="line"><span class="comment">// 填彈</span></span><br><span class="line"><span class="comment">// 射擊</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用依賴注入流程：<ol>
<li>Class Gun 發現需要必須要有 Class Bullet_2_34</li>
<li>Class Bullet_2_34 實例化</li>
<li>Class Gun 實例化並且將 Class Bullet_2_34 注入</li>
<li>Class Gun 調用 shoot 方法</li>
<li>Class Bullet_2_34 調用 load 方法</li>
<li>Class Bullet_2_34 echo “填彈”</li>
<li>Class Gun echo “射擊”</li>
</ol>
</li>
</ul>
<ul>
<li>上述流程可以發現，我們在<strong>實例化類的順序明顯遭到調換</strong>，從原本 Gun -&gt; Bullet_2_34 相反變成 Bullet_2_34 -&gt; Gun，這種模式我們又稱為控制反轉(<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLXR3LyVFNiU4RSVBNyVFNSU4OCVCNiVFNSU4RiU4RCVFOCVCRCVBQw==">Inversion of Control<i class="fa fa-external-link-alt"></i></span>)，這樣們如果我們的 Gun 想要換不同彈徑的 Bullet，可以直接<strong>新增一個新的 Bullet_5_56(5.56mm) 類</strong>注入 Gun 類之中，<strong>不用去修改原本 Bullet_2_34 類的程式碼</strong>(可能有其他不同的 Gun 類需要)。</li>
</ul>
<h4 id="依賴注入容器"><a href="#依賴注入容器" class="headerlink" title="依賴注入容器"></a>依賴注入容器</h4><ul>
<li>從依賴注入的例子我們可以發現，每次對它類有依賴的時候我們需要<strong>提前實例化該類並注入</strong>，那麼是不是就<strong>需要有一個容器來存放當作一個管理工具</strong>呢?依賴注入容器就為此而生了。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bullet_2_34</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"填彈"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gun</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Bullet_2_34 $bullet;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Bullet_2_34 $bullet)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;bullet = $bullet;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;bullet-&gt;load();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"射擊"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Container</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="comment">// 存放所綁定的類</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">array</span> $register = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 綁定函數</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bind</span><span class="params">($name, Closure $closure)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">self</span>::$register[$name] = $closure;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 創建實例化</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">make</span><span class="params">($name)</span> </span>&#123;</span><br><span class="line">    $closure = <span class="keyword">self</span>::$register[$name];</span><br><span class="line">    <span class="keyword">return</span> $closure();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Container::bind(Bullet_2_34::class, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Bullet_2_34();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Container::bind(Gun::class, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Gun(Container::make(Bullet_2_34::class));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$gun = Container::make(Gun::class);</span><br><span class="line">$gun-&gt;shoot();</span><br><span class="line"><span class="comment">// 填彈</span></span><br><span class="line"><span class="comment">// 射擊</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我們只需要在容器內註冊所有類之後，就可以更好的為我們實現依賴注入了。</li>
</ul>
<h4 id="自動配裝"><a href="#自動配裝" class="headerlink" title="自動配裝"></a>自動配裝</h4><ul>
<li>自動配裝這個機制的產生是因為，我們在使用依賴注入的時候直接將容器給注入到我們的類中，以下是 Slim 3 的範例程式碼。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(ContainerInterface $container)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $container[<span class="string">"userRepository"</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAllUsers</span><span class="params">($request, $response)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $response-&gt;withJson(<span class="keyword">$this</span>-&gt;repository-&gt;getAllUsers());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>一般我們稱這種情況叫做反面模式(<span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tLyVFNSVCRSU4QyVFNyVBQiVBRiVFNiU5NiVCMCVFNiU4OSU4QiVFNiU5RCU5MS9yZXZpZXctc29mdHdhcmUtdGVzdGluZy1hbnRpLXBhdHRlcm5zLTM1YzliNDIyZGM0ZQ==">Anti-pattern<i class="fa fa-external-link-alt"></i></span>)，其中違反了<span class="exturl" data-url="aHR0cHM6Ly9za3l5ZW45OTkuZ2l0Ym9va3MuaW8vLXN0dWR5LWRlc2lnbi1wYXR0ZXJuLWluLWphdmEvY29udGVudC9vb2RQcmluY2lwbGUuaHRtbA=="> SOLID 原則中的依賴反轉<i class="fa fa-external-link-alt"></i></span>。</li>
</ul>
<ul>
<li>慶幸的是，Slim 4 解決的這個尷尬的局面，引用符合 PSR-11 標準的 PHP-DI，它會讓容器可以自動創建和注入依賴類的的能力。所以我們只要在建構子(__construct)中顯示聲明依賴類，那麼依賴注入容器就會自動幫你創建和注入好了。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UserRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UserRepository $repository)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="容器配置"><a href="#容器配置" class="headerlink" title="容器配置"></a>容器配置</h4><ul>
<li>講了那麼多容器肯定看到頭都暈了，接下來我們建立 <code>config/container.php</code> 把我們需要的依賴都寫進去<ul>
<li><code>settings</code>： 一開始的設定，有其他需求的人可以再自行定義</li>
<li><code>Dotenv::class</code>： 這是我們讀取 <code>.env</code> 的一個函式庫</li>
<li><code>App::class</code>： 將我們 SLIM 應用注入容器(<span class="exturl" data-url="aHR0cHM6Ly9ha3JhYmF0LmNvbS9kZXBlbmRlbmN5LWluamVjdGlvbi1pbi1zbGltLTQv">參考 Dependency Injection in Slim 4<i class="fa fa-external-link-alt"></i></span>)</li>
<li><code>BasePathMiddleware::class</code>： Basepath 這個中間件幫我們自動註冊好路徑，不用再額外設定(不使用的話就要自行依據資料夾路徑來定義)</li>
<li><code>Medoo::class</code>： 這是一個輕量的 PHP ORM 函式庫，$_ENV是我們 <code>.env</code> 裡面定義的變數</li>
</ul>
</li>
</ul>
<p><code>config/container.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Container</span>\<span class="title">ContainerInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Selective</span>\<span class="title">BasePath</span>\<span class="title">BasePathMiddleware</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Factory</span>\<span class="title">AppFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Medoo</span>\<span class="title">Medoo</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line"></span><br><span class="line">  <span class="string">"settings"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">"/settings.php"</span>;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  Dotenv::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Dotenv();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 註冊SLIM APP</span></span><br><span class="line">  App::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">(ContainerInterface $container)</span> </span>&#123;</span><br><span class="line">    AppFactory::setContainer($container);</span><br><span class="line">    <span class="keyword">return</span> AppFactory::create();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 找BasePath</span></span><br><span class="line">  BasePathMiddleware::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">(ContainerInterface $container)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BasePathMiddleware($container-&gt;get(App::class));</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  Medoo::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($_ENV[<span class="string">'DB_DRIVER'</span>] == <span class="string">"sqlite"</span>) &#123;</span><br><span class="line">        $database = [</span><br><span class="line">            <span class="string">'type'</span> =&gt; $_ENV[<span class="string">'DB_DRIVER'</span>],</span><br><span class="line">          <span class="string">'database'</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">"/../"</span> . $_ENV[<span class="string">'DB_NAME'</span>]</span><br><span class="line">        ];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $database = [</span><br><span class="line">            <span class="string">'type'</span> =&gt; $_ENV[<span class="string">'DB_DRIVER'</span>],</span><br><span class="line">            <span class="string">'database'</span> =&gt; $_ENV[<span class="string">'DB_NAME'</span>],</span><br><span class="line">            <span class="string">'host'</span> =&gt; $_ENV[<span class="string">'DB_HOST'</span>],</span><br><span class="line">            <span class="string">'username'</span> =&gt; $_ENV[<span class="string">'DB_USER'</span>],</span><br><span class="line">            <span class="string">'password'</span> =&gt; $_ENV[<span class="string">'DB_PASS'</span>],</span><br><span class="line">            <span class="string">'charset'</span> =&gt; $_ENV[<span class="string">'DB_CHARSET'</span>],</span><br><span class="line">            <span class="string">'option'</span> =&gt; [</span><br><span class="line">                \PDO::ATTR_ERRMODE =&gt; \PDO::ERRMODE_EXCEPTION</span><br><span class="line">                <span class="comment">//千萬不能開啟，會造成ACID失敗</span></span><br><span class="line">                <span class="comment">// PDO::MYSQL_ATTR_USE_BUFFERED_QUERY =&gt; false</span></span><br><span class="line">            ]</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Medoo($database);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h3 id="中間件-Middleware"><a href="#中間件-Middleware" class="headerlink" title="中間件(Middleware)"></a>中間件(Middleware)</h3><ul>
<li><p>我們可以把向 SERVER 的 <strong>HTTP 請求</strong>想像成一個<strong>正要出國的人</strong>，<strong>SERVER</strong> 就是我們要<strong>入境的國家</strong>，那麼每當我們出入海關的時候是不是就要示出我們的<strong>護照(COOKIE、TOKEN…)</strong>，來證明自己的來自哪個國家，可以避免任何危險人物入境。</p>
</li>
<li><p>中間件也是扮演著類似的角色，無論我們要向 SERVER 做什麼請求，在處理請求之前可以同步預先<strong>額外處理</strong>或<strong>驗證</strong>，以便我們路由後續的業務能夠更加順利。像是有的中間件就是用於權限的限制，我們則必須攜帶 SERVER 分發的 COOKIE 或 TOKEN 證明自己的身分。</p>
</li>
<li><p>以下是 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc2xpbWZyYW1ld29yay5jb20vZG9jcy92NC9jb25jZXB0cy9taWRkbGV3YXJlLmh0bWw=">SLIM 4 官方的範例程式碼<i class="fa fa-external-link-alt"></i></span>，可以看到使用 <code>$app-&gt;add()</code> 的方式去替返回的 Body 增加前綴和後綴。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Server</span>\<span class="title">RequestHandlerInterface</span> <span class="title">as</span> <span class="title">RequestHandler</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Factory</span>\<span class="title">AppFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Psr7</span>\<span class="title">Response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">$app = AppFactory::create();</span><br><span class="line"></span><br><span class="line">$app-&gt;add(<span class="function"><span class="keyword">function</span> <span class="params">(Request $request, RequestHandler $handler)</span> </span>&#123;</span><br><span class="line">    $response = $handler-&gt;handle($request);</span><br><span class="line">    $existingContent = (string) $response-&gt;getBody();</span><br><span class="line"></span><br><span class="line">    $response = <span class="keyword">new</span> Response();</span><br><span class="line">    $response-&gt;getBody()-&gt;write(<span class="string">'BEFORE '</span> . $existingContent);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;add(<span class="function"><span class="keyword">function</span> <span class="params">(Request $request, RequestHandler $handler)</span> </span>&#123;</span><br><span class="line">    $response = $handler-&gt;handle($request);</span><br><span class="line">    $response-&gt;getBody()-&gt;write(<span class="string">' AFTER'</span>);</span><br><span class="line">    <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request, Response $response, $args)</span> </span>&#123;</span><br><span class="line">    $response-&gt;getBody()-&gt;write(<span class="string">'Hello World'</span>);</span><br><span class="line">    <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;run();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// GET /</span></span><br><span class="line"><span class="comment">// BEFORE Hello World AFTER</span></span><br></pre></td></tr></table></figure>

<ul>
<li>這是把我們把路由前綴做 Group 劃分，並針對該 Group 去做額外處理的範例。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ResponseInterface</span> <span class="title">as</span> <span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Server</span>\<span class="title">RequestHandlerInterface</span> <span class="title">as</span> <span class="title">RequestHandler</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Factory</span>\<span class="title">AppFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Routing</span>\<span class="title">RouteCollectorProxy</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">$app = AppFactory::create();</span><br><span class="line"></span><br><span class="line">$app-&gt;get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request, Response $response)</span> </span>&#123;</span><br><span class="line">    $response-&gt;getBody()-&gt;write(<span class="string">'Hello World'</span>);</span><br><span class="line">    <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;group(<span class="string">'/utils'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $group)</span> </span>&#123;</span><br><span class="line">    $group-&gt;get(<span class="string">'/date'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request, Response $response)</span> </span>&#123;</span><br><span class="line">        $response-&gt;getBody()-&gt;write(date(<span class="string">'Y-m-d H:i:s'</span>));</span><br><span class="line">        <span class="keyword">return</span> $response;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $group-&gt;get(<span class="string">'/time'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request, Response $response)</span> </span>&#123;</span><br><span class="line">        $response-&gt;getBody()-&gt;write((string)time());</span><br><span class="line">        <span class="keyword">return</span> $response;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)-&gt;add(<span class="function"><span class="keyword">function</span> <span class="params">(Request $request, RequestHandler $handler)</span> <span class="title">use</span> <span class="params">($app)</span> </span>&#123;</span><br><span class="line">    $response = $handler-&gt;handle($request);</span><br><span class="line">    $dateOrTime = (string) $response-&gt;getBody();</span><br><span class="line"></span><br><span class="line">    $response = $app-&gt;getResponseFactory()-&gt;createResponse();</span><br><span class="line">    $response-&gt;getBody()-&gt;write(<span class="string">'It is now '</span> . $dateOrTime . <span class="string">'. Enjoy!'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;run();</span><br><span class="line"></span><br><span class="line"><span class="comment">// GET /utils/date</span></span><br><span class="line"><span class="comment">// It is now 2015-07-06 03:11:01. Enjoy!</span></span><br><span class="line"><span class="comment">// GET /utils/time</span></span><br><span class="line"><span class="comment">// It is now 1436148762. Enjoy!</span></span><br></pre></td></tr></table></figure>

<ul>
<li>雖然目前只是初步構建我們的專案，不太需要複雜的處理，所以我們就在 <code>config/middleware.php</code> 新增基本的設定就好，主要是配置好我們解析 Body 的功能、將中間件插入我們的路由、配置 BASEPATH、錯誤處理。</li>
</ul>
<p><code>config/middleware.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Selective</span>\<span class="title">BasePath</span>\<span class="title">BasePathMiddleware</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 解析JSON</span></span><br><span class="line">  $app-&gt;addBodyParsingMiddleware();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// SLIM內建路由中間件</span></span><br><span class="line">  $app-&gt;addRoutingMiddleware();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// BASEPATH</span></span><br><span class="line">  $app-&gt;add(BasePathMiddleware::class);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// DEBUG</span></span><br><span class="line">  $app-&gt;addErrorMiddleware(</span><br><span class="line">    (bool)$_ENV[<span class="string">"DISPLAY_ERROR_DETAILS"</span>], </span><br><span class="line">    (bool)$_ENV[<span class="string">"LOG_ERROR_DETAILS"</span>], </span><br><span class="line">    (bool)$_ENV[<span class="string">"LOG_ERRORS"</span>]</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


<h3 id="路由-Routes"><a href="#路由-Routes" class="headerlink" title="路由(Routes)"></a>路由(Routes)</h3><ul>
<li><p>我們可以把 HTTP 請求方法分成五種，分別是 <code>GET(獲取資源)</code>、<code>POST(新增資源)</code>、<code>PATCH(更新，修改資源的部分內容)</code>、<code>PUT(更新，通常做替換一個資源功能)</code>、<code>DELETE(刪除資源)</code>，我們通常會根據我們需要的操作去提交對應的方法，而如果要讓 SERVER 知道我們要操作什麼資源，就必須提供URI(Uniform Resource Identifier，範例：”/api/user”)才可以讓 SERVER 知道我們想要什麼服務。</p>
</li>
<li><p>舉個例子，假設我們今天要去郵局存錢，可是郵局就有儲匯、郵務、保險這幾種服務(URI)，那麼我就應該選擇儲匯業務(“/api/money”)並跟櫃台服務人員說我要存(POST)多少({“money”: 2000})，但是進入郵局一開始要先跟櫃台領取號碼牌(中間件，rate limiter)跟著其他人排隊，最後櫃台服務人員就會根據你的資料(TOKEN)來判斷你的存錢服務是否成功。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Server</span>\<span class="title">RequestHandlerInterface</span> <span class="title">as</span> <span class="title">RequestHandler</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Factory</span>\<span class="title">AppFactory</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">$app = AppFactory::create();</span><br><span class="line"></span><br><span class="line">$app-&gt;post(<span class="string">'/api/money'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request, Response $response, $args)</span> </span>&#123;</span><br><span class="line">  $data = (<span class="keyword">array</span>)$req-&gt;getParsedBody();</span><br><span class="line">  $return = saveMoney($data);</span><br><span class="line">  <span class="keyword">return</span> $response-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">&#125;)-&gt;add(<span class="function"><span class="keyword">function</span> <span class="params">(Request $request, RequestHandler $handler)</span> </span>&#123;</span><br><span class="line">  AUTH();</span><br><span class="line">  RATE_LIMITER();</span><br><span class="line">  <span class="keyword">return</span> $response;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$app-&gt;run();</span><br></pre></td></tr></table></figure>

<ul>
<li>看完解釋我們可以清楚地了解到路由就是 RESTful API 提供服務的最基本要素，所以我們必須建立 <code>config/routes.php</code>，來新增最基礎的路由。</li>
</ul>
<p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="comment">// 發現使用Slim\Http\Request常常會報錯，所以使用官方的Request當作請求</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Routing</span>\<span class="title">RouteCollectorProxy</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span> </span>&#123;</span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line">    $app-&gt;get(<span class="string">"/home[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson(<span class="string">"GET HOME"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="啟動-Bootstrap"><a href="#啟動-Bootstrap" class="headerlink" title="啟動(Bootstrap)"></a>啟動(Bootstrap)</h3><ul>
<li>剛剛我們把 SLIM 4 最基本的要素都建立好了，那我們來將那些整合到我們的啟動 <code>config/bootstrap</code> 之中。</li>
</ul>
<blockquote>
<p>這個啟動可以直接在測試中直接引入，進行整合或單元測試。</p>
</blockquote>
<p><code>config/bootstrap.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">DI</span>\<span class="title">ContainerBuilder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Dotenv</span>\<span class="title">Dotenv</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 註冊我們設定好的CLASS</span></span><br><span class="line">$containerBuilder = <span class="keyword">new</span> ContainerBuilder();</span><br><span class="line">$containerBuilder-&gt;addDefinitions(<span class="keyword">__DIR__</span> . <span class="string">'/container.php'</span>);</span><br><span class="line">$container = $containerBuilder-&gt;build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// LOAD .ENV</span></span><br><span class="line">$dotenv = $container-&gt;get(Dotenv::class);</span><br><span class="line">$dotenv-&gt;load(<span class="keyword">__DIR__</span>.<span class="string">'/../.env'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立App INSTANCE</span></span><br><span class="line">$app = $container-&gt;get(App::class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中間件</span></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/middleware.php'</span>)($app);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/routes.php'</span>)($app);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $app;</span><br></pre></td></tr></table></figure>

<h3 id="入口文件-Index"><a href="#入口文件-Index" class="headerlink" title="入口文件(Index)"></a>入口文件(Index)</h3><ul>
<li>寫好啟動後，就可以在我們的入口文件 <code>public/index.php</code> 直接引入並且執行。</li>
</ul>
<p><code>public/index.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">"/../config/bootstrap.php"</span>)-&gt;run();</span><br></pre></td></tr></table></figure>

<h3 id="開啟服務"><a href="#開啟服務" class="headerlink" title="開啟服務"></a>開啟服務</h3><ul>
<li>當我們的 SLIM 應用都配置好的時候，可以直接在專案路徑下的命令行執行 docker，然後可以使用 <span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdG1hbi5jb20=">postman<i class="fa fa-external-link-alt"></i></span> 查看是否有沒有返回請求。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/a.jpg" alt="HOME"></p>
<h2 id="基本應用"><a href="#基本應用" class="headerlink" title="基本應用"></a>基本應用</h2><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><ul>
<li>除了固定地返回方式之外，URI 中可以<code>配置參數($args)</code>，來動態獲取我們需要的資源。</li>
</ul>
<blockquote>
<p>其他路由更多的用法可以參考<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2xpbWZyYW1ld29yay5jb20vZG9jcy92NC9vYmplY3RzL3JvdXRpbmcuaHRtbA==">官方文檔<i class="fa fa-external-link-alt"></i></span>。</p>
</blockquote>
<p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span> </span>&#123;</span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $app-&gt;get(<span class="string">"/home/&#123;name&#125;[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson(<span class="string">"GET Hello &#123;$args['name']&#125;!"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h4><p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/b.jpg" alt="HOME NAME"></p>
<h3 id="SQL-CRUD"><a href="#SQL-CRUD" class="headerlink" title="SQL CRUD"></a>SQL CRUD</h3><ul>
<li>首先我們先在 <code>config/bootstrap.php</code> 獲取我們設定好的 <code>Medoo</code>，將它傳遞到 routes 的函數中，以利我們使用資料庫操作。</li>
</ul>
<p><code>config/bootstrap.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Medoo</span>\<span class="title">Medoo</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">$db = $container-&gt;get(Medoo::class);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/routes.php'</span>)($app, $db);</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>簡單撰寫一下資料庫請求的 API。</p>
</li>
<li><p>請注意當我們要將 <code>$db</code> 傳遞進去我們的閉包函數時，我們必須使用到 <code>use ($db)</code> 才能使用。</p>
</li>
</ul>
<blockquote>
<p>Medoo 使用方法相對 PDO 簡便，如果有更進階的需求可以參考<span class="exturl" data-url="aHR0cHM6Ly9tZWRvby5pbi9kb2M=">官方文檔<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Medoo</span>/<span class="title">Medoo</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app, Medoo $db)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span> . $prefix, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> <span class="title">use</span> <span class="params">($db)</span> </span>&#123;</span><br><span class="line">    $app-&gt;get(<span class="string">"/user[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> <span class="title">use</span><span class="params">($db)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="comment">// 獲取全部User</span></span><br><span class="line">      $data = $db-&gt;select(<span class="string">"Users"</span>, [<span class="string">"id"</span>, <span class="string">"name"</span>], <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson($data, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $app-&gt;post(<span class="string">"/user[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> <span class="title">use</span><span class="params">($db)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = (<span class="keyword">array</span>)$req-&gt;getParsedBody();</span><br><span class="line">        $db-&gt;insert(<span class="string">"Users"</span>, $data);</span><br><span class="line">        $id = $db-&gt;id();</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson($id, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson($e-&gt;getMessage(), <span class="number">500</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $app-&gt;patch(<span class="string">"/user[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> <span class="title">use</span><span class="params">($db)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = (<span class="keyword">array</span>)$req-&gt;getParsedBody();</span><br><span class="line">        $db-&gt;update(<span class="string">"Users"</span>, [<span class="string">"name"</span> =&gt; $data[<span class="string">"name"</span>]], [<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]);</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson(<span class="string">"Success"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson($e-&gt;getMessage(), <span class="number">500</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $app-&gt;delete(<span class="string">"/user[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> <span class="title">use</span><span class="params">($db)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = (<span class="keyword">array</span>)$req-&gt;getParsedBody();</span><br><span class="line">        $db-&gt;delete(<span class="string">"Users"</span>, [<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]);</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson(<span class="string">"Success"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">        <span class="keyword">return</span> $response-&gt;withJson($e-&gt;getMessage(), <span class="number">500</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="成果展示-1"><a href="#成果展示-1" class="headerlink" title="成果展示"></a>成果展示</h4><ul>
<li>順序：新增 -&gt; 更新 -&gt; 獲取 -&gt; 刪除 -&gt; 獲取。</li>
</ul>
<p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/d.jpg" alt="HOME NAME"><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/e.jpg" alt="HOME NAME"><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/f.jpg" alt="HOME NAME"><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/g.jpg" alt="HOME NAME"><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/c.jpg" alt="HOME NAME"></p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><h3 id="當前目錄"><a href="#當前目錄" class="headerlink" title="當前目錄"></a>當前目錄</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── config&#x2F;               應用配置目錄</span><br><span class="line">|   ├── bootstrap.php     啟動文件</span><br><span class="line">|   ├── container.php     依賴注入容器文件</span><br><span class="line">|   ├── middleware.php    中間件文件</span><br><span class="line">|   ├── routes.php        路由文件</span><br><span class="line">|   └── settings.php      配置設定文件</span><br><span class="line">├── docker&#x2F;               Docker 相關目錄</span><br><span class="line">|   ├── nginx&#x2F;            Nginx 目錄</span><br><span class="line">│   |   └── default.conf  Nginx 配置文件</span><br><span class="line">|   └── php&#x2F;              PHP 目錄</span><br><span class="line">│       └── Dockerfile    PHP 容器配置文件</span><br><span class="line">├── public&#x2F;               網站根目錄</span><br><span class="line">│   └── index.php         入口文件</span><br><span class="line">├── src&#x2F;                  PHP 原始碼目錄（App Namespace）</span><br><span class="line">├── vendor&#x2F;               Composer 目錄</span><br><span class="line">├── .env                  系統變數</span><br><span class="line">├── .gitignore            Git 忽略文件</span><br><span class="line">├── composer.json         Composer 配置文件</span><br><span class="line">├── composer.lock         Composer 鎖定文件</span><br><span class="line">├── docker-compose.yml    Docker 容器配置文件</span><br><span class="line">└── init.sql              DB Schema</span><br></pre></td></tr></table></figure>

<h3 id="未來工作"><a href="#未來工作" class="headerlink" title="未來工作"></a>未來工作</h3><ul>
<li><p>由於目前我們學會配置基本的設定操作，如果是一般精簡的微服務，可以照接下來的模式進行開發，但是我希望能夠藉由物件導向的概念，將它設計成一個 ADR模式的框架。</p>
</li>
<li><p>下一篇(進階篇)，我將會新增<code>表單驗證 Class</code>、<code>使用者登入 Api</code>、<code>Jwt Class 封裝/加入中間件</code>、<code>Response 統一格式 Class</code> 等相關功能。</p>
</li>
</ul>
<blockquote>
<p>非常感謝 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbQ==">Fogless<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltNC1idWlsZC1yZXN0ZnVsLWFwaS8jY3JlYXRlLXNsaW0tYXBwbGljYXRpb24=">Slim 4 搭建 RESTful API<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9kb3BpdHo=">Daniel Opitz<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly9vZGFuLmdpdGh1Yi5pby8yMDE5LzExLzA1L3NsaW00LXR1dG9yaWFsLmh0bWw=">Slim 4 - Tutorial<i class="fa fa-external-link-alt"></i></span>，讓我能夠站在巨人的肩膀上開發 SLIM 4 的應用，本文範例程式碼在 GitHub 上的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9TbGltLVNpbXBsZQ==">POABOB/Slim-Simple<i class="fa fa-external-link-alt"></i></span>。</p>
</blockquote>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Swagger-ui</tag>
        <tag>PHP</tag>
        <tag>Slim 4</tag>
        <tag>RESTful</tag>
        <tag>Jwt</tag>
        <tag>Docker</tag>
        <tag>PSR-7</tag>
        <tag>PSR-11</tag>
        <tag>PSR-15</tag>
      </tags>
  </entry>
  <entry>
    <title>2022 Dcard後端實習生面試作業 - URL Shortener</title>
    <url>/2022-03-25/2022-dcard-backend-intern-project/</url>
    <content><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><blockquote>
<p>碩一下這學期相對課業沒那麼重，剛剛好<span class="exturl" data-url="aHR0cHM6Ly9rZW5jaGVuODc5LmdpdGh1Yi5pbw==">友人陳同學<i class="fa fa-external-link-alt"></i></span>告訴我有一個<span class="exturl" data-url="aHR0cHM6Ly9ib2FyZHMuZ3JlZW5ob3VzZS5pby9kY2FyZC9qb2JzLzM4NzQ4NDE=">Dcard後端實習面試<i class="fa fa-external-link-alt"></i></span>，完整詳讀之後發現其實題目不難且待遇豐厚，引起我對於實習面試的熱誠。</p>
<p>學習了後端也有一段時間了，時常因為沒有做筆記，需要翻找己以前的程式碼片段(還好都沒有刪掉)，許多相關知識也因此停留在記憶的角落而堆積灰塵，若我不去主動複習，也許他就真的被我遺忘了吧?</p>
<p>因此讓我知道建立學習紀錄的重要性，所以我才倉促架設這個部落格，一部分想記錄我實作這項作業的方式，另外一部分是想分享自己的知識讓需要的人可以了解。</p>
<p>由於篇幅關係，後續還會有兩篇文章，主要是關於這篇基礎功能的優化和加強，那就請大家來閱讀敝人對於作業的解題。</p>
</blockquote>
<ul>
<li>Repo：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9EY2FyZC1pbnRlcm4tcHJvamVjdA==">https://github.com/POABOB/Dcard-intern-project<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<a id="more"></a> 

<h2 id="二、題目"><a href="#二、題目" class="headerlink" title="二、題目"></a>二、題目</h2><p><img src="/images/2022-dcard-backend-intern-project/a.jpg" alt="Dcard 題目"></p>
<h2 id="三、解題思路"><a href="#三、解題思路" class="headerlink" title="三、解題思路"></a>三、解題思路</h2><h3 id="1-題目解釋"><a href="#1-題目解釋" class="headerlink" title="1. 題目解釋"></a>1. 題目解釋</h3><ul>
<li><p>使用 Golang 或 Nodejs 其中一個語言建立兩個Restful API(包含<strong>Unit Test</strong>)</p>
<ol>
<li><p><strong>可以上傳一個URL網址和過期時間，並且返回一個被縮短好的URL</strong></p>
</li>
<li><p><strong>判斷系統生成的短網址是否存在且有無到期，如果到期和不存在，則返回404；反之，為原本URL進行轉址</strong></p>
</li>
</ol>
</li>
<li><p>可以使用任意三方函式庫和資料庫或Cache資料庫</p>
</li>
<li><p>替兩個API進行錯誤處理</p>
</li>
<li><p>不用Auth</p>
</li>
<li><p><strong>要考慮到客戶端同時大量請求短網址(包括不存在的短網址)的問題，將性能納入考量</strong></p>
</li>
</ul>
<h3 id="2-程式邏輯"><a href="#2-程式邏輯" class="headerlink" title="2. 程式邏輯"></a>2. 程式邏輯</h3><blockquote>
<p>這項作業有三大重點：</p>
<ol>
<li><p>製作兩個Restful API，分別是<strong>產生短網址(POST)</strong>和<strong>轉址短網址(GET)</strong>。</p>
</li>
<li><p>要考慮到<strong>Client端大量同時請求</strong>的性能表現，並且做出解決方案。</p>
</li>
<li><p>使用測試(Unit、Integration、E2E)來避免開發後難以找出程式碼的錯誤。</p>
</li>
</ol>
</blockquote>
<h4 id="a-產生短網址：POST-api-v1-urls"><a href="#a-產生短網址：POST-api-v1-urls" class="headerlink" title="a. 產生短網址：POST /api/v1/urls"></a>a. 產生短網址：POST /api/v1/urls</h4><ul>
<li><p>方法</p>
<ol>
<li><p><del>短網址的 url_id 必須是一個唯一值，如果說使用md5取前幾位數的話，那麼很容易產生碰撞，所以不適合。</del></p>
</li>
<li><p><del>使用三方函式庫<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2Uvc2hvcnRpZA==">shortid<i class="fa fa-external-link-alt"></i></span>，自動生成短網址(我覺得都是解題，對於程式的流程解釋相對來說是一個必要的功課，不採用)</del>。</p>
</li>
<li><p>手寫兩個function可以使用<strong>64進位</strong>的方式，將 <code>url</code> 和 <code>expireAt</code> 資料插入mysql中返回的<strong>自增id(唯一且以主鍵搜尋很快)</strong>作轉換</p>
<ul>
<li><p>並且將自增id和資料插入Redis(查詢較Mysql快)</p>
</li>
<li><p>最後返回要求格式</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>程式流程</p>
</li>
</ul>
<p><img src="/images/2022-dcard-backend-intern-project/b.jpg" alt="API 1"></p>
<ul>
<li><p><code>src/controller/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="keyword">get</span>, <span class="keyword">set</span> &#125; = require('../db/redis');</span><br><span class="line">const &#123; ErrorModel, BaseModel &#125; = <span class="built_in">require</span>(<span class="string">'../utils/response'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; HOST_CONF &#125; = <span class="built_in">require</span>(<span class="string">'../config/url'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; getURL, insertURL&#125; = <span class="built_in">require</span>(<span class="string">'../model/index'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; validateUrl, validateExpire, convertIdToShortId, convertShortIdToId &#125; = <span class="built_in">require</span>(<span class="string">"../utils/url"</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; datetimeRegex &#125; = <span class="built_in">require</span>(<span class="string">"../utils/const"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> insertOriginUrl = <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = req.body.url;</span><br><span class="line">        <span class="keyword">let</span> expireAt = req.body.expireAt;</span><br><span class="line">        <span class="keyword">if</span>(url === <span class="string">""</span> || !validateUrl(url)) &#123;</span><br><span class="line">            res.writeHead(<span class="number">400</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ErrorModel(<span class="string">`The post data url = <span class="subst">$&#123;url&#125;</span> is invalid!!!`</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(expireAt.match(datetimeRegex) === <span class="literal">null</span> || <span class="built_in">Date</span>.parse(expireAt) &lt; <span class="built_in">Date</span>.now() / <span class="number">1000</span>) &#123;</span><br><span class="line">            res.writeHead(<span class="number">400</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ErrorModel(<span class="string">`The post data expireAt = <span class="subst">$&#123;expireAt&#125;</span> is invalid!!!`</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        expireAt = <span class="built_in">Math</span>.floor(<span class="keyword">new</span> <span class="built_in">Date</span>(expireAt).getTime() / <span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> insertURL(url, expireAt)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 插入redis</span></span><br><span class="line">        <span class="keyword">set</span>(data['id'], &#123; url: url, <span class="attr">expireAt</span>: expireAt &#125;)</span><br><span class="line">        <span class="comment">// 得到新增的id後</span></span><br><span class="line">        <span class="keyword">const</span> ShortId = convertIdToShortId(data[<span class="string">'id'</span>])</span><br><span class="line">        <span class="comment">// 返回BaseModel</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseModel(ShortId, HOST_CONF + ShortId);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        res.writeHead(<span class="number">500</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ErrorModel(<span class="string">`<span class="subst">$&#123;e.stack&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>轉換url_id位數</p>
<ul>
<li><p>目前使用5位數字串(64 ^ 5 = 1,073,741,824)，原因是我使用unsigned int (4,294,967,295)，為了避免int不夠用</p>
</li>
<li><p>如果之後想要改更長，可以使用unsigned bigint(2 ^ 64 - 1)，就可以讓字串數增加至多到10位數字串(64 ^ 10)</p>
</li>
</ul>
</li>
</ul>
<p><code>src/utils/url.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; _64Bit, urlMaxLength &#125; = <span class="built_in">require</span>(<span class="string">'./const'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//目前使用5位字串(64 ^ 5 = 1,073,741,824)，原因是我使用unsigned int (4,294,967,295)</span></span><br><span class="line"><span class="comment">//如果之後想要改更長，可以使用unsigned bigint(2 ^ 64 - 1)，就可以讓字串數增加至多到10位字串(64 ^ 10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//將id轉換成64進位的5位字串</span></span><br><span class="line"><span class="keyword">const</span> convertIdToShortId = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> ShortId = <span class="string">""</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//將id值轉換成64位元的字符</span></span><br><span class="line">    <span class="keyword">while</span>(id !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> tmp = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        tmp = ShortId;</span><br><span class="line">        ShortId = _64Bit[id%<span class="number">64</span>] + tmp;</span><br><span class="line">        id = <span class="built_in">Math</span>.floor(id/<span class="number">64</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//小於5位，就補滿5位</span></span><br><span class="line">    <span class="keyword">while</span>(ShortId.length !== urlMaxLength) &#123;</span><br><span class="line">        ShortId = _64Bit[<span class="number">0</span>] + ShortId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ShortId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//將64進位的5位字串轉換成id</span></span><br><span class="line"><span class="keyword">const</span> convertShortIdToId = <span class="function">(<span class="params">ShortId</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> id = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//將字串分割成array</span></span><br><span class="line">    <span class="keyword">const</span> ShortIdArray = ShortId.split(<span class="string">""</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//轉換成原本id</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; urlMaxLength) &#123;</span><br><span class="line">        id += (_64Bit.findIndex(<span class="function"><span class="params">char</span> =&gt;</span> char === ShortIdArray[urlMaxLength - (i + <span class="number">1</span>)])) * <span class="built_in">Math</span>.pow(<span class="number">64</span>, i);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>64進位<ul>
<li>我將 A-Z, a-z, 0-9, -, ~ 這些字元打亂順序之後，放入一個陣列當作進位表</li>
</ul>
</li>
</ul>
<p><code>src/utils/const.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> urlMaxLength = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> datetimeRegex = <span class="regexp">/((19|2\d)\d\d)-((0[1-9])|(1[0-2]))-((0[1-9])|([1-2]\d)|(3[01]))([ T]&#123;1&#125;)(([0-1]\d)|(2[0-3])):(([0-5]\d)):(([0-5]\d))([Z]?)/</span>;</span><br><span class="line"><span class="keyword">const</span> _64Bit = <span class="keyword">new</span> <span class="built_in">Array</span>( <span class="string">"N"</span>, <span class="string">"O"</span>, <span class="string">"P"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"m"</span>, <span class="string">"Q"</span>, <span class="string">"R"</span>, <span class="string">"S"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>, <span class="string">"W"</span>, <span class="string">"F"</span>, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"r"</span>, <span class="string">"s"</span>, <span class="string">"t"</span>, <span class="string">"u"</span>, <span class="string">"v"</span>, <span class="string">"w"</span>, <span class="string">"G"</span>, <span class="string">"H"</span>, <span class="string">"I"</span>, <span class="string">"J"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"-"</span>, <span class="string">"~"</span>, <span class="string">"Z"</span>, <span class="string">"g"</span>, <span class="string">"h"</span>, <span class="string">"i"</span>, <span class="string">"j"</span>, <span class="string">"k"</span>, <span class="string">"l"</span>, <span class="string">"n"</span>, <span class="string">"o"</span>, <span class="string">"p"</span>, <span class="string">"q"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>, <span class="string">"z"</span>, <span class="string">"0"</span>,);</span><br></pre></td></tr></table></figure>

<h4 id="b-轉址短網址：GET-ShortId-a-zA-Z0-9-5"><a href="#b-轉址短網址：GET-ShortId-a-zA-Z0-9-5" class="headerlink" title="b. 轉址短網址：GET /:ShortId([a-zA-Z0-9-~]{5})"></a>b. 轉址短網址：GET /:ShortId([a-zA-Z0-9-~]{5})</h4><ul>
<li><p>方法</p>
<ul>
<li><p>由於後端性能的問題主要出在 網路頻寬速度 和 Disk I/O，在程式碼中就必須為資料庫方面減少負荷，多多採用記憶體作為一個快速的解決方案</p>
</li>
<li><p>所以我會先讓Nodejs先去從Redis中查找id是否存在</p>
</li>
<li><p>有則，判斷資料是否有效且有無過期，然後返回404或302</p>
<ul>
<li>使用302(暫時轉址)原因是因為短網址是有期限的，所以每次轉址都必須讓server判斷資料是否有效，雖然301(永久轉址)性能較好，但是他會被cache在瀏覽器，導致無法到server判斷資料</li>
</ul>
</li>
<li><p>無則，向Mysql查找id是否存在</p>
<ul>
<li><p>若有該筆id，使用異步的方式儲存到Redis並判斷資料是否有效且有無過期，然後返回404或302</p>
</li>
<li><p>若無該筆id，異步新增一個{ url: null, expireAt: Date.now() / 1000 }資料到Redis，返回404</p>
<ul>
<li>因為題目中有提到如果該筆資料不存在那一直查找不存在的資料也是浪費性能，不如就儲存一個無效值在Redis，直接返回404</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>程式流程</li>
</ul>
<p><img src="/images/2022-dcard-backend-intern-project/c.jpg" alt="API 2"></p>
<p><code>src/controller/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="keyword">get</span>, <span class="keyword">set</span> &#125; = require('../db/redis');</span><br><span class="line">const &#123; ErrorModel, BaseModel &#125; = <span class="built_in">require</span>(<span class="string">'../utils/response'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; HOST_CONF &#125; = <span class="built_in">require</span>(<span class="string">'../config/url'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; getURL, insertURL&#125; = <span class="built_in">require</span>(<span class="string">'../model/index'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; validateUrl, validateExpire, convertIdToShortId, convertShortIdToId &#125; = <span class="built_in">require</span>(<span class="string">"../utils/url"</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; datetimeRegx &#125; = <span class="built_in">require</span>(<span class="string">"../utils/const"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getOriginUrlById = <span class="keyword">async</span> (req, res, ShortId) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//先將64進位的id轉化10進位id</span></span><br><span class="line">        <span class="keyword">const</span> id = convertShortIdToId(ShortId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//搜尋Redis</span></span><br><span class="line">        <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="keyword">get</span>(id);</span><br><span class="line">        </span><br><span class="line">        if(result === null) &#123;</span><br><span class="line">            <span class="comment">// redis沒有，往mysql找</span></span><br><span class="line">            result = <span class="keyword">await</span> getURL(id)</span><br><span class="line">            <span class="comment">// 有沒有找到都要存入redis，目的是避免同時大量查找不存在的url</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(result.length !== <span class="number">0</span>) &#123;</span><br><span class="line">                result = result[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">set</span>(id, &#123; url: result[<span class="string">'url'</span>], <span class="attr">expireAt</span>: result[<span class="string">'expireAt'</span>] &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">set</span>(id, &#123; url: <span class="literal">null</span>, <span class="attr">expireAt</span>: <span class="built_in">Date</span>.now() / <span class="number">1000</span> &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//redis有，直接從redis返回</span></span><br><span class="line">        <span class="keyword">if</span>(result[<span class="string">'url'</span>] !== <span class="literal">undefined</span> &amp;&amp; validateExpire(result[<span class="string">'expireAt'</span>])) &#123;</span><br><span class="line">            <span class="comment">//如果這筆短網址存在，使用302避免301 expire了照樣會有cache</span></span><br><span class="line">            res.writeHead(<span class="number">302</span>, &#123; <span class="string">'Location'</span>: result[<span class="string">'url'</span>] &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.writeHead(<span class="number">404</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">            res.write(<span class="string">`<span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;req.path&#125;</span> 404 Not Found\n`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.end();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        res.writeHead(<span class="number">500</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ErrorModel(<span class="string">`<span class="subst">$&#123;e.stack&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="三、性能比較-使用ab"><a href="#三、性能比較-使用ab" class="headerlink" title="三、性能比較(使用ab)"></a>三、性能比較(使用ab)</h2><h3 id="1-對比有使用redis和沒使用redis的性能"><a href="#1-對比有使用redis和沒使用redis的性能" class="headerlink" title="1. 對比有使用redis和沒使用redis的性能"></a>1. 對比有使用redis和沒使用redis的性能</h3><h4 id="a-同時一百個請求，總共訪問一萬次有效短網址"><a href="#a-同時一百個請求，總共訪問一萬次有效短網址" class="headerlink" title="a. 同時一百個請求，總共訪問一萬次有效短網址"></a>a. 同時一百個請求，總共訪問一萬次有效短網址</h4><p><code>有redis</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 10000 -c 100 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      100</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   5.225 seconds</span><br><span class="line">Complete requests:      10000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      10000</span><br><span class="line">Total transferred:      2000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1913.98 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       52.247 [ms] (mean)</span><br><span class="line">Time per request:       0.522 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          373.83 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>

<p><code>無redis，只有mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 10000 -c 100 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      100</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   8.549 seconds</span><br><span class="line">Complete requests:      10000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      10000</span><br><span class="line">Total transferred:      2000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1169.68 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       85.493 [ms] (mean)</span><br><span class="line">Time per request:       0.855 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          228.45 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>

<h4 id="b-同時一千個請求，總共訪問十萬次有效短網址"><a href="#b-同時一千個請求，總共訪問十萬次有效短網址" class="headerlink" title="b. 同時一千個請求，總共訪問十萬次有效短網址"></a>b. 同時一千個請求，總共訪問十萬次有效短網址</h4><p><code>有redis</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 100000 -c 1000 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      1000</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   67.488 seconds</span><br><span class="line">Complete requests:      100000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      100000</span><br><span class="line">Total transferred:      20000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1481.74 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       674.883 [ms] (mean)</span><br><span class="line">Time per request:       0.675 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          289.40 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>

<p><code>無redis，只有mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 100000 -c 1000 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      1000</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   88.510 seconds</span><br><span class="line">Complete requests:      100000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      100000</span><br><span class="line">Total transferred:      20000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1129.81 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       885.103 [ms] (mean)</span><br><span class="line">Time per request:       0.885 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          220.67 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>

<h3 id="2-還可不可以優化性能"><a href="#2-還可不可以優化性能" class="headerlink" title="2. 還可不可以優化性能?"></a>2. 還可不可以優化性能?</h3><h4 id="a-使用Pm2"><a href="#a-使用Pm2" class="headerlink" title="a. 使用Pm2"></a>a. 使用Pm2</h4><ul>
<li><p>因為Nodejs是單線程的設計，我們可以使用pm2來實現多個Nodejs Cluster提高效率</p>
</li>
<li><p>安裝</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i pm2 --save-dev</span><br></pre></td></tr></table></figure>

<ul>
<li>新增一些pm2的常用指令， -i 是要啟用的process數量</li>
</ul>
<p><code>package.json</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",</span><br><span class="line">    "dev": "cross-env NODE_ENV=dev nodemon ./bin/www.js",</span><br><span class="line">    "prd": "cross-env NODE_ENV=dev pm2 start ./bin/www.js -i 4",</span><br><span class="line">    "restart": "cross-env NODE_ENV=dev pm2 restart www",</span><br><span class="line">    "list": "cross-env NODE_ENV=dev pm2 list",</span><br><span class="line">    "stop": "cross-env NODE_ENV=dev pm2 stop www",</span><br><span class="line">    "delete": "cross-env NODE_ENV=dev pm2 delete www"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<ul>
<li>開啟服務</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop\Dcard&gt; npm run prd     </span><br><span class="line"></span><br><span class="line">&gt; Dcard@1.0.0 prd C:\Users\poabob\Desktop\Dcard</span><br><span class="line">&gt; cross-env NODE_ENV=dev pm2 start ./bin/www.js -i 4</span><br><span class="line"></span><br><span class="line">[PM2] Applying action restartProcessId on app [www](ids: [ 0, 1, 2, 3 ])</span><br><span class="line">[PM2] [www](0) ✓</span><br><span class="line">[PM2] [www](1) ✓</span><br><span class="line">[PM2] [www](3) ✓</span><br><span class="line">[PM2] [www](2) ✓</span><br><span class="line">[PM2] Process successfully started</span><br><span class="line">┌─────┬────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐</span><br><span class="line">│ id  │ name   │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │</span><br><span class="line">├─────┼────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤</span><br><span class="line">│ 0   │ www    │ default     │ 1.0.0   │ cluster │ 23348    │ 1s     │ 0    │ online    │ 0%       │ 50.1mb   │ poabob   │ disabled │</span><br><span class="line">│ 1   │ www    │ default     │ 1.0.0   │ cluster │ 17940    │ 1s     │ 0    │ online    │ 0%       │ 49.9mb   │ poabob   │ disabled │</span><br><span class="line">│ 2   │ www    │ default     │ 1.0.0   │ cluster │ 15552    │ 1s     │ 0    │ online    │ 0%       │ 49.7mb   │ poabob   │ disabled │</span><br><span class="line">│ 3   │ www    │ default     │ 1.0.0   │ cluster │ 16468    │ 1s     │ 0    │ online    │ 0%       │ 49.9mb   │ poabob   │ disabled │</span><br><span class="line">└─────┴────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘</span><br></pre></td></tr></table></figure>

<h4 id="b-同時一百個請求，總共訪問一萬次有效短網址"><a href="#b-同時一百個請求，總共訪問一萬次有效短網址" class="headerlink" title="b. 同時一百個請求，總共訪問一萬次有效短網址"></a>b. 同時一百個請求，總共訪問一萬次有效短網址</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 10000 -c 100 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      100</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   5.272 seconds</span><br><span class="line">Complete requests:      10000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      10000</span><br><span class="line">Total transferred:      2000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1896.64 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       52.725 [ms] (mean)</span><br><span class="line">Time per request:       0.527 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          370.44 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>


<h4 id="c-同時一千個請求，總共訪問十萬次有效短網址"><a href="#c-同時一千個請求，總共訪問十萬次有效短網址" class="headerlink" title="c. 同時一千個請求，總共訪問十萬次有效短網址"></a>c. 同時一千個請求，總共訪問十萬次有效短網址</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop&gt; .\ab.exe -n 100000 -c 1000 http://localhost/NNNNB</span><br><span class="line"></span><br><span class="line">Concurrency Level:      1000</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   56.264 seconds</span><br><span class="line">Complete requests:      100000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Non-2xx responses:      100000</span><br><span class="line">Total transferred:      20000000 bytes</span><br><span class="line">HTML transferred:       0 bytes</span><br><span class="line">Requests per second:    1777.33 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       562.642 [ms] (mean)</span><br><span class="line">Time per request:       0.563 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          347.13 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>

<h3 id="3-其他擴充提案"><a href="#3-其他擴充提案" class="headerlink" title="3. 其他擴充提案"></a>3. 其他擴充提案</h3><ul>
<li><p>Proposal A. 新增Nginx用反向代理、實現限流機制再分析access.log。</p>
  <!-- * 利用nginx限制流量，避免大量請求導致系統崩潰

  * 利用nginx限制個別ip連線數，預防流量攻擊導致正常用戶無法使用

  * 使用nginx白名單機制，讓自己的ip可以進行壓力測試

  * 藉由分析access.log，將資料新增至資料庫，可供後續資料統計(分析哪個時段流量最高) -->
</li>
<li><p><a href="https://poabob.github.io/2022-03-26/implementation-of-ShortId-with-id-in-order/">Proposal B. 將本專案自增id順序新增機制改成隨機新增方法。</a></p>
<!-- 
  * 預先產生離線所有id

  * 先Redis獲取url_nums(key)查看有沒有數量

  * 沒有，SELECT COUNT(id) FROM WHERE id in (1, 2, ..., 1000) url is NULL;

  * 有，

  * 每一千筆(1 - 1000, 1001 - 2000, ...)資料隨機抽取url為空值

      1. SELECT COUNT(id) FROM WHERE url is NULL LIMIT 1000;

      2. 如果返回為一千，插入Redis -> url_nums = 1000

      3. 

  * 將POST的資料更新至資料庫 -->


</li>
</ul>
<h3 id="4-結論"><a href="#4-結論" class="headerlink" title="4. 結論"></a>4. 結論</h3><ul>
<li><p>Redis確實可以替Mysql作到提速的作用</p>
</li>
<li><p>使用pm2來管理Nodejs Cluster，增加性能是可行的</p>
</li>
</ul>
<h2 id="四、測試-Unit-Test、Integration-Test"><a href="#四、測試-Unit-Test、Integration-Test" class="headerlink" title="四、測試(Unit Test、Integration Test)"></a>四、測試(Unit Test、Integration Test)</h2><h3 id="1-Unit-Test"><a href="#1-Unit-Test" class="headerlink" title="1. Unit Test"></a>1. Unit Test</h3><ul>
<li><p>測試ShortId和id雙向轉換</p>
</li>
<li><p>驗證日期是否過期</p>
</li>
<li><p>驗證url是否合法</p>
</li>
</ul>
<p><code>src/utils/url.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; validateUrl, validateExpire, convertIdToShortId, convertShortIdToId &#125; = <span class="built_in">require</span>(<span class="string">'../../src/utils/url'</span>);</span><br><span class="line"></span><br><span class="line">test(<span class="string">'id =&gt; ShortId'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> ShortId = convertIdToShortId(<span class="number">1</span>);</span><br><span class="line">    expect(ShortId).toBe(<span class="string">'NNNNO'</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//convertIdToShortId</span></span><br><span class="line">test(<span class="string">'ShortId =&gt; id to'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> id = convertShortIdToId(<span class="string">'NNNNO'</span>);</span><br><span class="line">    expect(id).toBe(<span class="number">1</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//validateExpire</span></span><br><span class="line">test(<span class="string">'驗證過期'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = validateExpire(<span class="number">1000000000</span>);</span><br><span class="line">    expect(res).toBe(<span class="literal">false</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">test(<span class="string">'驗證未過期'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = validateExpire(<span class="number">5000000000</span>);</span><br><span class="line">    expect(res).toBe(<span class="literal">true</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//validateUrl</span></span><br><span class="line">test(<span class="string">'驗證中文域名'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = validateUrl(<span class="string">'http://中文.tw'</span>);</span><br><span class="line">    expect(res).toBe(<span class="literal">true</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">test(<span class="string">'驗證錯誤值'</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = validateUrl(<span class="string">'http://       中文.tw'</span>);</span><br><span class="line">    expect(res).toBe(<span class="literal">false</span>);</span><br><span class="line">    done();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>測試response返回格式</li>
</ul>
<p><code>src/utils/response.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ErrorModel, BaseModel &#125; = <span class="built_in">require</span>(<span class="string">'../../src/utils/response'</span>);</span><br><span class="line"></span><br><span class="line">test(<span class="string">"測試一般response"</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">new</span> BaseModel(<span class="string">`NNNNP`</span>, <span class="string">`http://localhost/NNNNP`</span>);</span><br><span class="line">    expect(res).toEqual(&#123;<span class="string">"id"</span>: <span class="string">"NNNNP"</span>, <span class="string">"shortUrl"</span>: <span class="string">"http://localhost/NNNNP"</span>&#125;);</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">test(<span class="string">"測試錯誤response"</span>, (done) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">new</span> ErrorModel(<span class="string">`The post data expireAt =  is invalid!!!`</span>);</span><br><span class="line">    expect(res).toEqual(&#123;<span class="string">"error"</span>: <span class="string">"The post data expireAt =  is invalid!!!"</span>&#125;);</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h3 id="2-Integration-Test"><a href="#2-Integration-Test" class="headerlink" title="2. Integration Test"></a>2. Integration Test</h3><ul>
<li><p>整合測試前，先新增url_test的測試表</p>
</li>
<li><p>測試POST API</p>
</li>
<li><p>測試GET API</p>
</li>
<li><p>整合測試後，刪除url_test的測試表</p>
</li>
</ul>
<p><code>src/route.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">'supertest'</span>);</span><br><span class="line"><span class="keyword">const</span> server = <span class="built_in">require</span>(<span class="string">'../../bin/www'</span>);</span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">'../../src/db/mysql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ShortId;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//測試前新增測試表</span></span><br><span class="line">beforeAll(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> mysql.exec(</span><br><span class="line">        <span class="string">`CREATE TABLE IF NOT EXISTS shortURL.url_test ( id INT UNSIGNED NOT NULL AUTO_INCREMENT , url TEXT NOT NULL , expireAt INT NOT NULL , PRIMARY KEY (id)) ENGINE = InnoDB;`</span></span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//新增後刪除測試表</span></span><br><span class="line">afterAll(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> mysql.exec(<span class="string">`DROP TABLE url_test`</span>)</span><br><span class="line">&#125;);</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">describe(<span class="string">"POST /api/v1/urls"</span>, () =&gt; &#123;</span><br><span class="line">    it(<span class="string">'使用正確格式測試 POST /api/v1/urls'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server)</span><br><span class="line">            .post(<span class="string">'/api/v1/urls'</span>)</span><br><span class="line">            .send(&#123;</span><br><span class="line">                url: <span class="string">"http://www.google.com"</span>,</span><br><span class="line">                expireAt: <span class="string">"2025-02-02T20:20:20Z"</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">let</span> response = <span class="built_in">JSON</span>.parse(res.res.text)</span><br><span class="line">            ShortId = response.id;</span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'id'</span>);</span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'shortUrl'</span>);</span><br><span class="line">            expect(<span class="built_in">Object</span>.keys(response).length).toBe(<span class="number">2</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">200</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用錯誤日期測試 POST /api/v1/urls'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server)</span><br><span class="line">            .post(<span class="string">'/api/v1/urls'</span>)</span><br><span class="line">            .send(&#123;</span><br><span class="line">                url: <span class="string">"http://www.google.com"</span>,</span><br><span class="line">                expireAt: <span class="string">"2025-02-0220:20:20Z"</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">let</span> response = <span class="built_in">JSON</span>.parse(res.res.text)</span><br><span class="line"></span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'error'</span>);</span><br><span class="line">            expect(<span class="built_in">Object</span>.keys(response).length).toBe(<span class="number">1</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">400</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用錯誤url測試 POST /api/v1/urls'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server)</span><br><span class="line">            .post(<span class="string">'/api/v1/urls'</span>)</span><br><span class="line">            .send(&#123;</span><br><span class="line">                url: <span class="string">"htt://www.google.com"</span>,</span><br><span class="line">                expireAt: <span class="string">"2025-02-02T20:20:20Z"</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">let</span> response = <span class="built_in">JSON</span>.parse(res.res.text)</span><br><span class="line"></span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'error'</span>);</span><br><span class="line">            expect(<span class="built_in">Object</span>.keys(response).length).toBe(<span class="number">1</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">400</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用錯誤url變數測試 POST /api/v1/urls'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server)</span><br><span class="line">            .post(<span class="string">'/api/v1/urls'</span>)</span><br><span class="line">            .send(&#123;</span><br><span class="line">                uri: <span class="string">"htt://www.google.com"</span>,</span><br><span class="line">                expireAt: <span class="string">"2025-02-02T20:20:20Z"</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">let</span> response = <span class="built_in">JSON</span>.parse(res.res.text)</span><br><span class="line"></span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'error'</span>);</span><br><span class="line">            expect(<span class="built_in">Object</span>.keys(response).length).toBe(<span class="number">1</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">400</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用錯誤expireAt變數測試 POST /api/v1/urls'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server)</span><br><span class="line">            .post(<span class="string">'/api/v1/urls'</span>)</span><br><span class="line">            .send(&#123;</span><br><span class="line">                uri: <span class="string">"htt://www.google.com"</span>,</span><br><span class="line">                expireat: <span class="string">"2025-02-02T20:20:20Z"</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">let</span> response = <span class="built_in">JSON</span>.parse(res.res.text)</span><br><span class="line"></span><br><span class="line">            expect(response).toHaveProperty(<span class="string">'error'</span>);</span><br><span class="line">            expect(<span class="built_in">Object</span>.keys(response).length).toBe(<span class="number">1</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">400</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">describe(<span class="string">"GET /:ShortId"</span>, () =&gt; &#123;</span><br><span class="line">    it(<span class="string">'使用正確ShortId測試 GET /:ShortId'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server).get(<span class="string">`/<span class="subst">$&#123;ShortId&#125;</span>`</span>);</span><br><span class="line">        expect(res.statusCode).toBe(<span class="number">302</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用過短ShortId測試 GET /:ShortId'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server).get(<span class="string">`/a`</span>);</span><br><span class="line">            expect(res.text).toBe(<span class="string">'GET /a 404 Not Found\n'</span>);</span><br><span class="line">            expect(res.statusCode).toBe(<span class="number">404</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'使用過長ShortId測試 GET /:ShortId'</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> request(server).get(<span class="string">`/sidufhsiufbwuibsusdi`</span>);</span><br><span class="line">        expect(res.text).toBe(<span class="string">'GET /sidufhsiufbwuibsusdi 404 Not Found\n'</span>);</span><br><span class="line">        expect(res.statusCode).toBe(<span class="number">404</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3-測試結果"><a href="#3-測試結果" class="headerlink" title="3. 測試結果"></a>3. 測試結果</h3><table>
<thead>
<tr>
<th>File</th>
<th>% Stmts</th>
<th>% Branch</th>
<th>% Funcs</th>
<th>% Lines</th>
<th>Uncovered Line #s</th>
</tr>
</thead>
<tbody><tr>
<td>All files</td>
<td>83.91</td>
<td>70.42</td>
<td>96.77</td>
<td>83.93</td>
<td></td>
</tr>
<tr>
<td>Dcard</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>app.js</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>Dcard/bin</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5qcw==">www.js<i class="fa fa-external-link-alt"></i></span></td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>Dcard/src/config</td>
<td>78.57</td>
<td>66.66</td>
<td>100</td>
<td>78.57</td>
<td></td>
</tr>
<tr>
<td>db.js</td>
<td>75</td>
<td>66.66</td>
<td>100</td>
<td>75</td>
<td>28-39</td>
</tr>
<tr>
<td>url.js</td>
<td>83.33</td>
<td>66.66</td>
<td>100</td>
<td>83.33</td>
<td>9</td>
</tr>
<tr>
<td>Dcard/src/controller</td>
<td>73.8</td>
<td>75</td>
<td>100</td>
<td>73.8</td>
<td></td>
</tr>
<tr>
<td>index.js</td>
<td>73.8</td>
<td>75</td>
<td>100</td>
<td>73.8</td>
<td>16-23,31-32,37-38,64-65</td>
</tr>
<tr>
<td>Dcard/src/db</td>
<td>74.41</td>
<td>50</td>
<td>100</td>
<td>74.41</td>
<td></td>
</tr>
<tr>
<td>mysql.js</td>
<td>73.68</td>
<td>50</td>
<td>100</td>
<td>73.68</td>
<td>19,24-25,35-36</td>
</tr>
<tr>
<td>redis.js</td>
<td>75</td>
<td>50</td>
<td>100</td>
<td>75</td>
<td>20-21,38,41-42,47</td>
</tr>
<tr>
<td>Dcard/src/model</td>
<td>80</td>
<td>100</td>
<td>66.66</td>
<td>80</td>
<td></td>
</tr>
<tr>
<td>index.js</td>
<td>80</td>
<td>100</td>
<td>66.66</td>
<td>80</td>
<td>6-8</td>
</tr>
<tr>
<td>Dcard/src/router</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>index.js</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>Dcard/src/utils</td>
<td>91.22</td>
<td>68.42</td>
<td>100</td>
<td>92.3</td>
<td></td>
</tr>
<tr>
<td>const.js</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
<tr>
<td>post.js</td>
<td>75</td>
<td>75</td>
<td>100</td>
<td>75</td>
<td>12-13,24-25</td>
</tr>
<tr>
<td>response.js</td>
<td>88.88</td>
<td>50</td>
<td>100</td>
<td>100</td>
<td>3-11</td>
</tr>
<tr>
<td>url.js</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td>100</td>
<td></td>
</tr>
</tbody></table>
<h2 id="五、程式架構"><a href="#五、程式架構" class="headerlink" title="五、程式架構"></a>五、程式架構</h2><h3 id="1-目錄結構"><a href="#1-目錄結構" class="headerlink" title="1. 目錄結構"></a>1. 目錄結構</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> C:\Users\poabob\Desktop&gt; tree -I <span class="string">'node_modules|img'</span></span><br><span class="line">.</span><br><span class="line">├── app.js</span><br><span class="line">├── bin</span><br><span class="line">│   └── www.js</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── init.sql</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── README.md</span><br><span class="line">├── src</span><br><span class="line">│   ├── config</span><br><span class="line">│   │   ├── db.js</span><br><span class="line">│   │   └── url.js</span><br><span class="line">│   ├── controller</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── db</span><br><span class="line">│   │   ├── mysql.js</span><br><span class="line">│   │   └── redis.js</span><br><span class="line">│   ├── model</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── router</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   └── utils</span><br><span class="line">│       ├── const.js</span><br><span class="line">│       ├── post.js</span><br><span class="line">│       ├── response.js</span><br><span class="line">│       ├── session.js</span><br><span class="line">│       └── url.js</span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">    ├── router</span><br><span class="line">    │   └── index.test.js</span><br><span class="line">    └── utils</span><br><span class="line">        ├── response.test.js</span><br><span class="line">        └── url.test.js</span><br></pre></td></tr></table></figure>

<h3 id="2-引用的三方lib"><a href="#2-引用的三方lib" class="headerlink" title="2. 引用的三方lib"></a>2. 引用的三方lib</h3><ul>
<li><p>主要引用mysql、redis、xss這三種作為本次作業的lib</p>
<ul>
<li><p>mysql、redis主要是讓nodejs連接兩個資料庫</p>
</li>
<li><p>xss用來避免mysql被插入惡意程式片段</p>
</li>
</ul>
</li>
<li><p>cross-env：方便在npm run指令的時候，建立環境變數，ex. mode=dev</p>
</li>
<li><p>jest、supertest：jest用來跑測試的lib，supertest可以測試api是否符合預期</p>
</li>
<li><p>nodemon、pm2：nodejs的開發(nodemon)和部屬(pm2)工具</p>
</li>
</ul>
<p><code>package.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Dcard"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"bin/www.js"</span>,</span><br><span class="line">  <span class="attr">"directories"</span>: &#123;</span><br><span class="line">    <span class="attr">"example"</span>: <span class="string">"example"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"cross-env NODE_ENV=test jest --forceExit --coverage --verbose"</span>,</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"cross-env NODE_ENV=dev nodemon ./bin/www.js"</span>,</span><br><span class="line">    <span class="attr">"prd-d"</span>: <span class="string">"cross-env NODE_ENV=production pm2-runtime start ./bin/www.js -i 4"</span>,</span><br><span class="line">    <span class="attr">"prd"</span>: <span class="string">"cross-env NODE_ENV=production pm2 start ./bin/www.js -i 4"</span>,</span><br><span class="line">    <span class="attr">"restart"</span>: <span class="string">"cross-env NODE_ENV=production pm2 restart www"</span>,</span><br><span class="line">    <span class="attr">"list"</span>: <span class="string">"cross-env NODE_ENV=production pm2 list"</span>,</span><br><span class="line">    <span class="attr">"stop"</span>: <span class="string">"cross-env NODE_ENV=production pm2 stop www"</span>,</span><br><span class="line">    <span class="attr">"delete"</span>: <span class="string">"cross-env NODE_ENV=production pm2 delete www"</span>,</span><br><span class="line">    <span class="attr">"logs"</span>: <span class="string">"cross-env NODE_ENV=production pm2 logs www"</span>,</span><br><span class="line">    <span class="attr">"flush"</span>: <span class="string">"pm2 flush"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"POABOB"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"cross-env"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"jest"</span>: <span class="string">"^27.5.1"</span>,</span><br><span class="line">    <span class="attr">"nodemon"</span>: <span class="string">"^2.0.15"</span>,</span><br><span class="line">    <span class="attr">"pm2"</span>: <span class="string">"^5.2.0"</span>,</span><br><span class="line">    <span class="attr">"supertest"</span>: <span class="string">"^6.2.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"mysql"</span>: <span class="string">"^2.17.1"</span>,</span><br><span class="line">    <span class="attr">"redis"</span>: <span class="string">"^3.1.2"</span>,</span><br><span class="line">    <span class="attr">"xss"</span>: <span class="string">"^1.0.6"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-程式解析"><a href="#3-程式解析" class="headerlink" title="3. 程式解析"></a>3. 程式解析</h3><ul>
<li>執行檔案，主要是創建http服務</li>
</ul>
<p><code>bin/www.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> PORT = <span class="number">9000</span>;</span><br><span class="line"><span class="keyword">const</span> serverHandler = <span class="built_in">require</span>(<span class="string">'../app'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(serverHandler);</span><br><span class="line"></span><br><span class="line">server.listen(PORT);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`Listening on port <span class="subst">$&#123;PORT&#125;</span>...Press CTRL-C to stop.`</span>);</span><br></pre></td></tr></table></figure>

<ol>
<li><p>獲取url path</p>
</li>
<li><p>獲取postData</p>
</li>
<li><p>Router判斷</p>
</li>
</ol>
<p><code>app.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; getPostData &#125; = <span class="built_in">require</span>(<span class="string">'./src/utils/post'</span>);</span><br><span class="line"><span class="keyword">const</span> handleIndexRouter = <span class="built_in">require</span>(<span class="string">'./src/router/index'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> serverHandler = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="comment">//設定返回格式為JSON</span></span><br><span class="line">	res.setHeader(<span class="string">'Content-type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//獲取path</span></span><br><span class="line">	<span class="keyword">const</span> url = req.url;</span><br><span class="line">	req.path = url.split(<span class="string">'?'</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    getPostData(req, res).then(<span class="function"><span class="params">postData</span> =&gt;</span> &#123;</span><br><span class="line">		req.body = postData;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//Router註冊</span></span><br><span class="line">		<span class="comment">//處理index路由</span></span><br><span class="line">		<span class="keyword">const</span> index =  handleIndexRouter(req, res);</span><br><span class="line">		<span class="keyword">if</span>(index) &#123;</span><br><span class="line">			index.then(<span class="function"><span class="params">data</span> =&gt;</span> res.end(<span class="built_in">JSON</span>.stringify(data)))</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//404</span></span><br><span class="line">		res.writeHead(<span class="number">404</span>, &#123;<span class="string">"Content-type"</span>: <span class="string">"text/plain"</span>&#125;);</span><br><span class="line">		res.write(<span class="string">`<span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;req.path&#125;</span> 404 Not Found\n`</span>);</span><br><span class="line">		res.end();</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用stream的方式去擷取data，並判斷method和header是否正確</li>
</ul>
<p><code>src/utils/post.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 獲取post過來的data</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	getPostData: <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">			<span class="comment">//如果方法不是POST，返回空</span></span><br><span class="line">			<span class="keyword">if</span>(req.method === <span class="string">'GET'</span> || req.method === <span class="string">'DELETE'</span>) &#123;</span><br><span class="line">				resolve(&#123;&#125;);</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//如果header不是json，返回空</span></span><br><span class="line">			<span class="keyword">if</span>(req.headers[<span class="string">'content-type'</span>] !== <span class="string">'application/json'</span>) &#123;</span><br><span class="line">				resolve(&#123;&#125;);</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">let</span> postData = <span class="string">''</span>;</span><br><span class="line">			req.on(<span class="string">'data'</span>, chunk =&gt;&#123;</span><br><span class="line">				postData += chunk.toString();</span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">			<span class="comment">//如果沒有POST資料，返回空</span></span><br><span class="line">			req.on(<span class="string">'end'</span>, () =&gt; &#123;</span><br><span class="line">				<span class="keyword">if</span>(!postData) &#123;</span><br><span class="line">					resolve(&#123;&#125;);</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				resolve(<span class="built_in">JSON</span>.parse(postData));</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>判斷method和用正則來判斷url path是否正確，如果沒有就不return，直接404</p>
</li>
<li><p>原本想要使用path-to-regexp來判斷url path，但其實也只有一個路由需要判斷，所以決定手寫</p>
</li>
</ul>
<p><code>src/router/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; getOriginUrlById, insertOriginUrl &#125; = <span class="built_in">require</span>(<span class="string">"../controller/index"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleIndexRouter = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 獲取方法和動態url_id的key</span></span><br><span class="line">	<span class="keyword">const</span> method = req.method;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GET，獲取短url</span></span><br><span class="line">    <span class="comment">//只能ShortId匹配 大小寫字母 數字 - ~</span></span><br><span class="line">    <span class="comment">// ex. /ABCE~ or /AB-DE/</span></span><br><span class="line">    <span class="keyword">const</span> ShortId = req.path.match(<span class="regexp">/^\/([A-Za-z0-9\-~]&#123;5&#125;)\/?$/</span>)</span><br><span class="line">	<span class="keyword">if</span>(method === <span class="string">'GET'</span> &amp;&amp; ShortId !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> getOriginUrlById(ShortId[<span class="number">1</span>], req, res)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//POST，新增短URL</span></span><br><span class="line">	<span class="keyword">if</span>(method === <span class="string">'POST'</span> &amp;&amp; req.path === <span class="string">'/api/v1/urls'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> insertOriginUrl(req.body.url, req.body.expireAt);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>Mysql功能模組化</li>
</ul>
<p><code>src/db/mysql.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; MYSQL_CONF &#125; = <span class="built_in">require</span>(<span class="string">'../config/db'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不使用箭頭函數原因是因為不能使用this</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	config: MYSQL_CONF,</span><br><span class="line">	pool: <span class="literal">null</span>,</span><br><span class="line">	create: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="keyword">this</span>.pool) &#123;</span><br><span class="line">			<span class="keyword">this</span>.pool = mysql.createPool(<span class="keyword">this</span>.config)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line">	exec: <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">sql, values</span>)  </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params"> resolve, reject </span>) =&gt;</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="keyword">this</span>.create();</span><br><span class="line">				<span class="keyword">this</span>.pool.getConnection(<span class="function"><span class="keyword">function</span>(<span class="params">err, connection</span>) </span>&#123;</span><br><span class="line">					<span class="keyword">if</span> (err) &#123;</span><br><span class="line">						reject(err);</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						connection.query(sql, values, (err, result) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">							<span class="keyword">if</span> (err) &#123;</span><br><span class="line">								reject(err);</span><br><span class="line">									<span class="built_in">console</span>.error(err);</span><br><span class="line">							&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">								resolve(result);</span><br><span class="line">								</span><br><span class="line">							&#125;</span><br><span class="line">							connection.release();</span><br><span class="line">						&#125;);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">				reject(e);</span><br><span class="line">				<span class="built_in">console</span>.error(e);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="built_in">escape</span>: mysql.escape</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Redis功能模組化</li>
</ul>
<p><code>src/db/redis.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> redis = <span class="built_in">require</span>(<span class="string">'redis'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; REDIS_CONF &#125; = <span class="built_in">require</span>(<span class="string">'../config/db'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成redis的client</span></span><br><span class="line"><span class="keyword">const</span> client = redis.createClient(REDIS_CONF.port, REDIS_CONF.host);</span><br><span class="line"><span class="comment">// client.connect();</span></span><br><span class="line"><span class="comment">// client.on('error', err =&gt; &#123;</span></span><br><span class="line"><span class="comment">// 	console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	<span class="comment">// 存储值</span></span><br><span class="line">	<span class="keyword">set</span>: async (key, val) =&gt; &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">typeof</span> val === <span class="string">'object'</span>) &#123;</span><br><span class="line">				val = <span class="built_in">JSON</span>.stringify(val);</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">			client.set(key, val, (err, res) =&gt; &#123;</span><br><span class="line">				<span class="keyword">if</span>(err) &#123;</span><br><span class="line">					reject(err);</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">	</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					resolve(<span class="built_in">JSON</span>.parse(res));</span><br><span class="line">				&#125; <span class="keyword">catch</span>(ex) &#123;</span><br><span class="line">					resolve(res);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;,</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 获取string</span></span><br><span class="line">	<span class="keyword">get</span>: async (key) =&gt; &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">			client.get(key, (err, val) =&gt; &#123;</span><br><span class="line">				<span class="keyword">if</span> (err) &#123;</span><br><span class="line">					reject(err);</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">if</span>(val === <span class="literal">null</span>) &#123;</span><br><span class="line">							resolve(<span class="literal">null</span>);</span><br><span class="line">							<span class="keyword">return</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						resolve(<span class="built_in">JSON</span>.parse(val));</span><br><span class="line">					&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">						reject(err);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>執行sql語法，並返回結果</li>
</ul>
<p><code>src/model/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">'../db/mysql'</span>);</span><br><span class="line"><span class="keyword">const</span> xss = <span class="built_in">require</span>(<span class="string">'xss'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> env = process.env.NODE_ENV;</span><br><span class="line"><span class="keyword">const</span> tableName = <span class="string">`url<span class="subst">$&#123;(env === <span class="string">'test'</span>) ? <span class="string">'_test'</span> : <span class="string">''</span>&#125;</span>`</span></span><br><span class="line"><span class="comment">//查</span></span><br><span class="line"><span class="keyword">const</span> getURL = <span class="keyword">async</span> (id) =&gt; &#123;</span><br><span class="line">	<span class="keyword">let</span> sql = <span class="string">`select url, expireAt from <span class="subst">$&#123;tableName&#125;</span> where id = <span class="subst">$&#123;xss(mysql.<span class="built_in">escape</span>(id))&#125;</span> limit 1;`</span>;</span><br><span class="line">	<span class="comment">//返回promise</span></span><br><span class="line">	<span class="keyword">return</span> mysql.exec(sql);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//增</span></span><br><span class="line"><span class="keyword">const</span> insertURL = <span class="keyword">async</span> (url, expireAt) =&gt; &#123;</span><br><span class="line">	<span class="keyword">let</span> sql = <span class="string">`INSERT INTO <span class="subst">$&#123;tableName&#125;</span> (url, expireAt) VALUES (<span class="subst">$&#123;xss(mysql.<span class="built_in">escape</span>(url))&#125;</span>,<span class="subst">$&#123;xss(mysql.<span class="built_in">escape</span>(expireAt))&#125;</span>);`</span>;</span><br><span class="line">	<span class="keyword">return</span> mysql.exec(sql).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> &#123; <span class="attr">id</span>: data.insertId &#125;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	getURL,</span><br><span class="line">	insertURL,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>作業心得</li>
</ol>
<p>其實原本一開始想說用express直接來簡單寫完就好，不過後來想想不用auth session，也只有兩個路由。不如就直接來動手寫http server，相對較有挑戰之外，也開始讓我更熟悉nodejs的Emit機制。我有好幾次都被異步給搞到頭很痛(習慣php寫法)，經過這次練習，我不但更熟悉了Promise，也複習以前曾經學習過的知識，還順便找回寫程式的熱情。</p>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Dcard實習面試</tag>
        <tag>URL短網址</tag>
        <tag>Nodejs</tag>
        <tag>Mysql</tag>
        <tag>Redis</tag>
        <tag>PM2</tag>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 GCP 建置一個具有 SSL 和 DNS 的靜態網站(完全免費!!!)</title>
    <url>/2022-09-29/Deploy-a-static-project-using-SSL-DNS-with-a-free-way/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>最近因為 <code>CakeResume</code> 作品集不能給非會員觀看，這時就想說來自己架一個站好了，那麼我主要是利用 <code>GCP</code> 建立<code>免費的 VM</code>，<code>No-IP</code> 使用<code>免費的 DNS</code>，<code>Certbot</code> 自動<code>申請免費的 SSL 憑證</code>，在 OS 之中，主要都是以 <code>Docker</code> 作為主力容器服務。</p>
</blockquote>
<a id="more"></a> 
<h2 id="建立免費-GCP-VM"><a href="#建立免費-GCP-VM" class="headerlink" title="建立免費 GCP VM"></a>建立免費 GCP VM</h2><h3 id="官方免費-VM-服務條件"><a href="#官方免費-VM-服務條件" class="headerlink" title="官方免費 VM 服務條件"></a>官方免費 VM 服務條件</h3><ul>
<li>其實一般人除了<strong>初次90天內300美元的額度</strong>可以使用以外，GCP 還有提供一個條件可以讓你<code>免費使用他的 VM 服務</code>。<ul>
<li><code>使用 e2-micro (2 個 vCPU，1 GB 記憶體)</code> 的硬體</li>
<li>VM 位置在<code>奧勒岡州：us-west1</code>、<code>愛荷華州：us-central1</code>、<code>南卡羅來納州：us-east1</code> </li>
<li>硬碟空間最多使用<code>30GB</code>。(<code>個人使用10GB</code>而已，以前有用過30GB被收費過QQ)</li>
<li>快照(Snapshot)空間就是 <code>GCP 可以備份你的 VM</code>，而限制就是 <code>5GB</code>(超容易達成，<code>建議不要用</code>)</li>
</ul>
</li>
</ul>
<p><img src="https://i.imgur.com/bhhEhQK.jpg" alt=""></p>
<blockquote>
<p>P.S. </p>
<ol>
<li>流量費用另外計算，但我的作法是 VM 只展示靜態檔案，這樣就可以避免如果架設後端 API 被亂 call。</li>
<li>每幾年基本上都會有些免費條件的調整，要請大家注意自己的帳單是否開始成長。</li>
</ol>
</blockquote>
<h3 id="選擇-建立-Porject"><a href="#選擇-建立-Porject" class="headerlink" title="選擇/建立 Porject"></a>選擇/建立 Porject</h3><ul>
<li>一開始進入後台的時候，GCP 會先要求你<code>建立或是選擇一個 Project</code> 來當作專案分類。</li>
<li>我們可以點擊側邊欄的左上角的Dropdown <code>選擇或建立我們的Project</code>。</li>
</ul>
<p><img src="https://i.imgur.com/EiNFr2T.jpg" alt=""><br><img src="https://i.imgur.com/t2dBn6f.jpg" alt=""></p>
<ul>
<li>如果沒有 Project 那麼直接輸入一個即可。</li>
</ul>
<p><img src="https://i.imgur.com/bSQbwEa.jpg" alt=""></p>
<ul>
<li>選擇好 Project 後，請將 Compute Engine API 的服務順便啟用。</li>
</ul>
<p><img src="https://i.imgur.com/ir5ppwh.jpg" alt=""></p>
<h3 id="建立-VM"><a href="#建立-VM" class="headerlink" title="建立 VM"></a>建立 VM</h3><ul>
<li>進入 <code>Compute Engine &gt; VM執行個體</code>的頁面之後，請點擊<code>建立執行個體</code></li>
</ul>
<p><img src="https://i.imgur.com/a1RekCw.jpg" alt=""></p>
<ul>
<li>將你的 <code>VM 名稱</code>、<code>區域</code>、<code>硬體條件(vCpu、Memory)</code>、<code>硬碟(大小、OS)</code>、<code>防火牆(HTTP、HTTPS)</code>設定好，<code>點擊建立</code>。</li>
</ul>
<p><img src="https://i.imgur.com/rOY9b1B.jpg" alt=""><br><img src="https://i.imgur.com/vbKx1pN.jpg" alt=""></p>
<h3 id="安裝-Docker"><a href="#安裝-Docker" class="headerlink" title="安裝 Docker"></a>安裝 Docker</h3><ul>
<li>使用瀏覽器的 SSH 進入 VM</li>
</ul>
<p><img src="https://i.imgur.com/6eSAWE6.jpg" alt=""></p>
<ul>
<li>安裝指令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先清空 VM 內的舊版本 Docker</span></span><br><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系統上更新並安裝基本的依賴</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 添加 Dokcer 官方的 GPG 密鑰</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Docker 到我們的 APT 倉庫之中</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string">  <span class="variable">$(lsb_release -cs)</span> stable"</span> | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝Docker</span></span><br><span class="line">sudo apt-get install docker-ce \</span><br><span class="line">                    docker-ce-cli \</span><br><span class="line">                    containerd.io \</span><br><span class="line">                    docker-compose \</span><br><span class="line">                    docker-compose-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 測試是否安裝成功，如果找得到指令就沒問題了</span></span><br><span class="line">sudo docker --<span class="built_in">help</span></span><br><span class="line">sudo docker-compose -h</span><br></pre></td></tr></table></figure>

<blockquote>
<p>刪除步驟：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 刪除安裝包</span></span><br><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose docker-compose-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刪除鏡像、容器、配置相關文件</span></span><br><span class="line">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>

</blockquote>
<h3 id="撰寫-docker-compose-yml"><a href="#撰寫-docker-compose-yml" class="headerlink" title="撰寫 docker-compose.yml"></a>撰寫 docker-compose.yml</h3><ul>
<li>撰寫 <code>/home/{user}/docker-compose.yml</code> 是為了可以讓我們之後一鍵開啟容器服務，並且將 <code>nginx</code> 的相關配置也寫好</li>
</ul>
<p><code>/home/{user}/docker-compose.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">webserver:</span></span><br><span class="line">    <span class="comment"># 獲取最新鏡像</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="comment"># 端口映射 VM:CONTAINER</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">    <span class="comment"># 自動重啟</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># 文件映射</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment"># :ro代表在container之中的文件是read-only</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./nginx/conf/:/etc/nginx/conf.d/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./html:/etc/nginx/html/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certbot/www:/var/www/certbot/:ro</span></span><br></pre></td></tr></table></figure>

<p><code>/home/{user}/nginx/conf/default.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    # 開啟gzip 節省流量</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    # DNS配置</span><br><span class="line">    server_name example.org;</span><br><span class="line">    server_tokens off;</span><br><span class="line"></span><br><span class="line">    # 以下等我們下面段落會使用</span><br><span class="line">    # certbot 驗證所需路徑</span><br><span class="line">    # location &#x2F;.well-known&#x2F;acme-challenge&#x2F; &#123;</span><br><span class="line">    #     root &#x2F;var&#x2F;www&#x2F;certbot;</span><br><span class="line">    # &#125;</span><br><span class="line"></span><br><span class="line">    # http 301 redirect https</span><br><span class="line">    # location &#x2F; &#123;</span><br><span class="line">    #     return 301 https:&#x2F;&#x2F;example.org$request_uri;</span><br><span class="line">    # &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>建立 <code>/home/{user}/html/index.html</code>，等等可以直接查看 Server 是否正常運行</li>
</ul>
<p><code>/home/{user}/html/index.html</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">  &lt;title&gt;Hello World&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;Hello I am NGINX SERVER!!!&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="Nginx-DEMO"><a href="#Nginx-DEMO" class="headerlink" title="Nginx DEMO"></a>Nginx DEMO</h4><ul>
<li>配置好我們的文件之後，我們只要<code>切換的家目錄</code>，<code>下 docker-compose 指令</code>，就可以開啟 http 服務</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切換到USER 家目錄</span></span><br><span class="line"><span class="built_in">cd</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># docker-compose 開啟 nginx</span></span><br><span class="line">sudo docker-compose up -d webserver</span><br></pre></td></tr></table></figure>

<ul>
<li>然後開啟瀏覽器，輸入 IP 就可以看到我們的 HTML。</li>
</ul>
<p><img src="https://i.imgur.com/nxIKvRi.jpg" alt=""></p>
<h4 id="測試-GZIP-是否開啟成功"><a href="#測試-GZIP-是否開啟成功" class="headerlink" title="測試 GZIP 是否開啟成功"></a>測試 GZIP 是否開啟成功</h4><ul>
<li>進入測試網站<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2lmdG9mc3BlZWQuY29tL2d6aXAtdGVzdC8=">https://www.giftofspeed.com/gzip-test/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>輸入自己的IP，只要顯示<code>Enabled</code>即可</li>
</ul>
<p><img src="https://i.imgur.com/hEU5JJW.jpg" alt=""></p>
<h2 id="使用-No-IP-免費DNS服務"><a href="#使用-No-IP-免費DNS服務" class="headerlink" title="使用 No-IP 免費DNS服務"></a>使用 No-IP 免費DNS服務</h2><h3 id="註冊會員"><a href="#註冊會員" class="headerlink" title="註冊會員"></a>註冊會員</h3><ul>
<li><p>點擊No-IP的註冊連結</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cubm9pcC5jb20vc2lnbi11cA==">https://www.noip.com/sign-up<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li><p>簡單註冊並輸入想使用的 DNS，記得點擊<code>Free Sign Up</code>，其他服務要收費</p>
</li>
</ul>
<p><img src="https://i.imgur.com/5WoSffZ.jpg" alt=""><br><img src="https://i.imgur.com/wTbc3mG.jpg" alt=""></p>
<h3 id="指定-VM-的-IP"><a href="#指定-VM-的-IP" class="headerlink" title="指定 VM 的 IP"></a>指定 VM 的 IP</h3><ul>
<li>收取驗證信後，去到後台的<code>My Services&gt; Managed DNS</code>，編輯自己 DNS 所指向的 IP</li>
</ul>
<p><img src="https://i.imgur.com/jxUvmcj.jpg" alt=""></p>
<ul>
<li>編輯時，<code>點選DNS Hostname(A)</code>，並<code>輸入自己在 GCP 上的 IP</code> 就可以了</li>
</ul>
<p><img src="https://i.imgur.com/3b4jmac.jpg" alt=""></p>
<h3 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h3><ul>
<li>瀏覽器輸入自己的 DNS</li>
</ul>
<p><img src="https://i.imgur.com/TBZWjME.jpg" alt=""></p>
<h2 id="GCP-SSL-配置"><a href="#GCP-SSL-配置" class="headerlink" title="GCP SSL 配置"></a>GCP SSL 配置</h2><h3 id="撰寫配置文件"><a href="#撰寫配置文件" class="headerlink" title="撰寫配置文件"></a>撰寫配置文件</h3><ul>
<li>SSL 加密之中，有一個免費的服務叫 <code>Let&#39;s Encrypt</code>，由於它派發的憑證<code>每90天就要更新一次</code>，所以我們必須使用自動化的方式來自動更新憑證，那麼 <code>Certbot</code> 就是我們所需要的。</li>
</ul>
<p><code>/home/{user}/docker-compose.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">webserver:</span></span><br><span class="line">    <span class="comment"># 獲取最新鏡像</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="comment"># 端口映射 VM:CONTAINER</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">    <span class="comment"># 自動重啟</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># 文件映射</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment"># :ro代表在container之中的文件是read-only</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./nginx/conf/:/etc/nginx/conf.d/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./html:/etc/nginx/html/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certbot/www:/var/www/certbot/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certbot/conf/:/etc/nginx/ssl/:ro</span></span><br><span class="line">  <span class="comment"># SSL 驗證機器人</span></span><br><span class="line">  <span class="attr">certbot:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">certbot/certbot:latest</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certbot/www/:/var/www/certbot/:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certbot/conf/:/etc/letsencrypt/:rw</span></span><br></pre></td></tr></table></figure>

<ul>
<li>把 Certbot 的註解還原</li>
</ul>
<p><code>/home/{user}/nginx/conf/default.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line"></span><br><span class="line">    # 以下等我們下面段落會使用</span><br><span class="line">    # certbot 驗證所需路徑</span><br><span class="line">     location &#x2F;.well-known&#x2F;acme-challenge&#x2F; &#123;</span><br><span class="line">         root &#x2F;var&#x2F;www&#x2F;certbot;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    # http 301 redirect https</span><br><span class="line">    #location &#x2F; &#123;</span><br><span class="line">    #     return 301 https:&#x2F;&#x2F;example.org$request_uri;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Cerbot-服務"><a href="#Cerbot-服務" class="headerlink" title="Cerbot 服務"></a>Cerbot 服務</h3><ul>
<li>下指令去讓 Certbot 安裝憑證</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先開啟NGINX服務，讓Certbot驗證</span></span><br><span class="line">sudo docker-compose up -d  webserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次性將憑證安裝好，DNS請更改成自己的</span></span><br><span class="line">docker-compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d example.org</span><br></pre></td></tr></table></figure>

<p><img src="https://i.imgur.com/AdmKJf8.jpg" alt=""></p>
<h3 id="HTTP-301-跳轉-HTTPS"><a href="#HTTP-301-跳轉-HTTPS" class="headerlink" title="HTTP 301 跳轉 HTTPS"></a>HTTP 301 跳轉 HTTPS</h3><ul>
<li>由於我們已經申請好憑證了，但是如果我們訪問 <code>http://{DNS}</code> 仍然會可以看到頁面，這時我們就需要自動幫使用者做跳轉</li>
</ul>
<p><code>/home/{user}/nginx/conf/default.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line"></span><br><span class="line">    # http 301 redirect https</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">         return 301 https:&#x2F;&#x2F;example.org$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 default_server ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line"></span><br><span class="line">    server_name example.org;</span><br><span class="line"></span><br><span class="line">    # DNS 請自行修改</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;live&#x2F;example.org&#x2F;fullchain.pem;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;live&#x2F;example.org&#x2F;privkey.pem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="SSL-DEMO"><a href="#SSL-DEMO" class="headerlink" title="SSL DEMO"></a>SSL DEMO</h3><p><img src="https://i.imgur.com/r57py2N.jpg" alt=""></p>
<h3 id="Cronjob"><a href="#Cronjob" class="headerlink" title="Cronjob"></a>Cronjob</h3><ul>
<li>為了避免我們憑證過期，所以我們要在<code>使用 Scheduler</code> 來<code>定期更新憑證</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 編輯 Scheduler</span></span><br><span class="line">sudo crontab -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入以下指令，每周定期RENEW SSL 憑證</span></span><br><span class="line">0  0    * * 0   root    docker-compose run --rm certbot renew</span><br></pre></td></tr></table></figure>


<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li>GCP建置、免費額度<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9oYWNrbWQuaW8vQEpCLUxpbi9CMUpFUHNxSXc=">https://hackmd.io/@JB-Lin/B1JEPsqIw<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudGFza2luZ2hvdXNlLmNvbS9wb3N0cy9nb29nbGUtY2xvdWQtcGxhdGZvcm0tZnJlZS1wbGFuLWFmdGVyLXRyaWFsLw==">https://www.taskinghouse.com/posts/google-cloud-platform-free-plan-after-trial/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2ZyZWUvZG9jcy9mcmVlLWNsb3VkLWZlYXR1cmVzP2hsPXpoLXR3I2ZyZWUtdGllci11c2FnZS1saW1pdHM=">https://cloud.google.com/free/docs/free-cloud-features?hl=zh-tw#free-tier-usage-limits<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>Debian 上安裝 Docker<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kb2NrZXJkb2NzLmNuL2VuZ2luZS9pbnN0YWxsL2RlYmlhbi8=">https://dockerdocs.cn/engine/install/debian/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9kb2NrZXIvZGViaWFuLWRvY2tlci1pbnN0YWxsLmh0bWw=">https://www.runoob.com/docker/debian-docker-install.html<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>docker-compose.yml &amp;&amp; SSL<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9taW5kc2Vycy5ibG9nL3Bvc3QvaHR0cHMtdXNpbmctbmdpbngtY2VydGJvdC1kb2NrZXIv">https://mindsers.blog/post/https-using-nginx-certbot-docker/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly91YmlxLmNvL3RlY2gtYmxvZy9ob3ctdG8tZW5hYmxlLW5naW54LWd6aXAtY29tcHJlc3Npb24v">https://ubiq.co/tech-blog/how-to-enable-nginx-gzip-compression/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oYWNrbWQuaW8vQEpCLUxpbi9CMUpFUHNxSXc=">https://hackmd.io/@JB-Lin/B1JEPsqIw<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>GCP</tag>
        <tag>SSL</tag>
        <tag>DNS</tag>
        <tag>Free</tag>
        <tag>Nginx</tag>
        <tag>Certbot</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang map 如何順序讀取</title>
    <url>/2023-12-22/Golang-Order-Map/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>在資料結構中，我們很常使用 <code>Hash Map</code> 來儲存 <code>Key-Value</code> 的資料，但是當我們想使用 <code>for range</code> 將資料一一讀出的時候，就會發現每次執行所讀出來的順序皆不同。</p>
<p>那麼要如何確保讀出值的順序是依照自己的需求呢？本篇文章將會告訴您如何去順序讀取 <code>Hash Map</code> 裡頭的資料。</p>
</blockquote>
<a id="more"></a> 

<h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>當我們在 <span class="exturl" data-url="aHR0cHM6Ly9nby5kZXYvcGxheS8=">go-playground<i class="fa fa-external-link-alt"></i></span> 執行以下程式碼的時候，會發現每次執行順序皆不一。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line">		<span class="string">"Alice"</span>:  <span class="number">1</span>,</span><br><span class="line">		<span class="string">"Bob"</span>: <span class="number">2</span>,</span><br><span class="line">		<span class="string">"Cindy"</span>: <span class="number">3</span>,</span><br><span class="line">		<span class="string">"Duke"</span>:  <span class="number">4</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">     fmt.Printf(<span class="string">"key=%s, value=%d\n"</span>, k, v)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// key=Bob, value=2</span></span><br><span class="line"><span class="comment">// key=Cindy, value=3</span></span><br><span class="line"><span class="comment">// key=Duke, value=4</span></span><br><span class="line"><span class="comment">// key=Alice, value=1</span></span><br></pre></td></tr></table></figure>

<h2 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h2><p>因為 Golang 的 map 是使用 <code>Hash Table</code> 透過 <code>Bucket</code> 來實現的，每次我們在插入的時候，map 就會 <code>對 key 進行 Hash 運算</code>，導致遍歷的順序不會按照 Key 的順序。</p>
<p>然而，每次當我們的 map 進行 <code>擴充</code> 時，就有可能讓原本同一個 bucket 的 key <code>更換到其他 bucket</code>。</p>
<p>最後，為了避免 <code>Hash-Flooding Attack</code> 的問題發生，在設計 map 的時候就注定不會從第 0 號的 bucket 開始，而是使用 <code>seed</code> 參數讓順序更加隨機。</p>
<blockquote>
<p>Hash-Flooding Attack：如果惡意使用者連續插入 n 個 <code>相同 key 的 Hash 值</code> 到 map 之中，就會導致 <code>同一個 Bucket 中有 n 個 Value</code>，查找的時間複雜度也會變成 <code>O(n)</code>，導致查找性能下降。</p>
</blockquote>
<p><img src="/images/Golang-Order-Map/a.png" alt="a.png"></p>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><h3 id="普通解法"><a href="#普通解法" class="headerlink" title="普通解法"></a>普通解法</h3><p>建立一個 <code>Slice 來存放 map 的所有 key</code>，然後在 <code>對 Slice 中的 key 進行排序</code>，最後 <code>使用 Slice 來順序讀取出 map 的值</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">"fmt"</span></span><br><span class="line">  <span class="string">"sort"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line">    <span class="string">"Alice"</span>:  <span class="number">1</span>,</span><br><span class="line">    <span class="string">"Bob"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"Cindy"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">"Duke"</span>:  <span class="number">4</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// keys 存放順序的 key</span></span><br><span class="line">  keys := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(m))</span><br><span class="line">  <span class="keyword">for</span> k := <span class="keyword">range</span> m &#123;</span><br><span class="line">    keys = <span class="built_in">append</span>(keys, k)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 排序</span></span><br><span class="line">  sort.Strings(keys)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根據 keys 順序來輸出 map 的值</span></span><br><span class="line">  <span class="keyword">for</span> _, k := <span class="keyword">range</span> keys &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"key=%s, value=%d\n"</span>, k, m[k])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="封裝-map"><a href="#封裝-map" class="headerlink" title="封裝 map"></a>封裝 map</h3><p>首先，我們可以定義一個 OrderMap 的 Class，其中為了讓我們可以順序讀取，這便定義了 <code>keys</code> 來存放 key，並且使用泛型 <code>OrderMap[K constraints.Ordered, V any]</code> 方便各種型別可以直接使用。</p>
<blockquote>
<p>這邊使用 <code>constraints.Ordered</code> 的原因是我們在排序時，會使用到比較符號 <code>&gt;</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>&lt;</code>，如果只使用 <code>any</code> 或 <code>comparable</code> 會報錯，如下：<br>invalid operation: k[i] &lt; k[j] (type parameter K is not comparable with &lt;)</p>
</blockquote>
<p>再來，初始化時先為 keys <code>做排序</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">"sort"</span></span><br><span class="line"></span><br><span class="line">  <span class="string">"golang.org/x/exp/constraints"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> OrderMap[K constraints.Ordered, V any] <span class="keyword">struct</span> &#123;</span><br><span class="line">  <span class="comment">// 儲存升序的 key 值</span></span><br><span class="line">  keys []K</span><br><span class="line">  <span class="comment">// 原本的 map</span></span><br><span class="line">  originMap <span class="keyword">map</span>[K]V</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewOrderMap 實例 OrderMap</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewOrderMap</span>[<span class="title">K</span> <span class="title">constraints</span>.<span class="title">Ordered</span>, <span class="title">V</span> <span class="title">any</span>]<span class="params">(m <span class="keyword">map</span>[K]V)</span> *<span class="title">OrderMap</span>[<span class="title">K</span>, <span class="title">V</span>]</span> &#123;</span><br><span class="line">  <span class="comment">// 排序 keys 值</span></span><br><span class="line">  k := <span class="built_in">make</span>([]K, <span class="number">0</span>, <span class="built_in">len</span>(m))</span><br><span class="line">  <span class="keyword">for</span> key := <span class="keyword">range</span> m &#123;</span><br><span class="line">    k = <span class="built_in">append</span>(k, key)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  sort.Slice(k, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> k[i] &lt; k[j]</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &amp;OrderMap[K, V]&#123;</span><br><span class="line">    keys:      k,</span><br><span class="line">    originMap: m,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>建立 Get 函數，相當於 <code>map[key]</code>，還有可以返回 <code>升序</code>、<code>降序</code> keys 陣列的函數。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Get 獲取 Value，相當於 v, ok := o.originMap[key]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">Get</span><span class="params">(key K)</span> <span class="params">(V, <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">  v, ok := o.originMap[key]</span><br><span class="line">  <span class="keyword">return</span> v, ok</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetAscKeys 獲取升序的 Key 值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">GetAscKeys</span><span class="params">()</span> []<span class="title">K</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> o.keys</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetDescKeys 獲取降序的 Key 值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">GetDescKeys</span><span class="params">()</span> []<span class="title">K</span></span> &#123;</span><br><span class="line">  descKeys := <span class="built_in">make</span>([]K, <span class="number">0</span>, <span class="built_in">len</span>(o.keys))</span><br><span class="line">  <span class="keyword">for</span> i := <span class="built_in">len</span>(o.keys) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">    descKeys = <span class="built_in">append</span>(descKeys, o.keys[i])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> descKeys</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因為我們目的是要可以 <code>使用 for</code> 來遍歷，這邊分別建立了 <code>升序</code>、<code>降序</code> map 的遍歷函數。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IterateInAsc 升序遍歷</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">IterateInAsc</span><span class="params">(fn <span class="keyword">func</span>(k K, v V)</span>)</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> _, k := <span class="keyword">range</span> o.keys &#123;</span><br><span class="line">    fn(k, o.originMap[k])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IterateInDesc 降序遍歷</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">IterateInDesc</span><span class="params">(fn <span class="keyword">func</span>(k K, v V)</span>)</span> &#123;</span><br><span class="line">  descKeys := o.GetDescKeys()</span><br><span class="line">  <span class="keyword">for</span> _, k := <span class="keyword">range</span> descKeys &#123;</span><br><span class="line">    fn(k, o.originMap[k])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用方法非常簡單，只要傳入執行的 <code>func</code>，就自動會幫你遍歷。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">orderMap.IterateInDesc(<span class="function"><span class="keyword">func</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  fmt.Printf(<span class="string">"key=%v, value=%v\n"</span>, k, v)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>最後一步，我們 map 也是需要 <code>新增 Key-Value</code> 和 <code>刪除</code> 功能，因為這邊我使用陣列的關係，為了更快速找出插入的位置，使用了 <code>二元搜尋 O(logn)</code> 的方式提高效率，再使用 Slice 的範圍操作，把插入或刪除以後的值補回來。</p>
<p><img src="/images/Golang-Order-Map/b.png" alt="b.png"></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Append 新增 Map 值，如果 key 重複就蓋過去</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">Append</span><span class="params">(key K, value V)</span></span> &#123;</span><br><span class="line">  <span class="comment">// 重複的 key</span></span><br><span class="line">  <span class="keyword">if</span> _, ok := o.originMap[key]; ok &#123;</span><br><span class="line">    o.originMap[key] = value</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  o.originMap[key] = value</span><br><span class="line">  index := o.binarySearch(key) + <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> index == <span class="built_in">len</span>(o.keys)<span class="number">-1</span> &#123; <span class="comment">// 要插入的 key 位置在最後面</span></span><br><span class="line">    o.keys = <span class="built_in">append</span>(o.keys, key)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// 要插入的 key 位置在 [0, len(o.keys) - 1)</span></span><br><span class="line">    temp := <span class="built_in">make</span>([]K, <span class="built_in">len</span>(o.keys)-index)</span><br><span class="line">    <span class="built_in">copy</span>(temp, o.keys[index:])</span><br><span class="line">    o.keys = o.keys[:index]</span><br><span class="line">    o.keys = <span class="built_in">append</span>(o.keys, key)</span><br><span class="line">    o.keys = <span class="built_in">append</span>(o.keys, temp...)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delete 刪除 Map 值，有值就刪除，沒值就忽略</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">Delete</span><span class="params">(key K)</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> _, ok := o.originMap[key]; ok &#123;</span><br><span class="line">    <span class="built_in">delete</span>(o.originMap, key)</span><br><span class="line">    index := o.binarySearch(key)</span><br><span class="line">    temp := o.keys[index+<span class="number">1</span>:]</span><br><span class="line">    o.keys = o.keys[:index]</span><br><span class="line">    o.keys = <span class="built_in">append</span>(o.keys, temp...)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// binarySearch 搜尋 upper bound 的 index 位置</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(o *OrderMap[K, V])</span> <span class="title">binarySearch</span><span class="params">(key K)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">  left, right := <span class="number">0</span>, <span class="built_in">len</span>(o.keys)<span class="number">-1</span></span><br><span class="line">  <span class="keyword">for</span> right &gt; left &#123;</span><br><span class="line">    mid := left + (right-left)&gt;&gt;<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> key &lt; o.keys[mid] &#123;</span><br><span class="line">      right = mid</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      left = mid + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> right - <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完成之後，就可以直接引入來使用看看！</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">"fmt"</span></span><br><span class="line">  <span class="string">"github.com/POABOB/go-practice/order-map/v2/utils"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line">    <span class="string">"Alice"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"Bob"</span>:   <span class="number">2</span>,</span><br><span class="line">    <span class="string">"Cindy"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">"Duke"</span>:  <span class="number">4</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  orderMap := utils.NewOrderMap[<span class="keyword">string</span>, <span class="keyword">int</span>](m)</span><br><span class="line"></span><br><span class="line">  fmt.Println(orderMap.GetAscKeys())</span><br><span class="line">  fmt.Println(orderMap.GetDescKeys())</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"===================="</span>)</span><br><span class="line"></span><br><span class="line">  fmt.Println(orderMap.Get(<span class="string">"Bob"</span>))</span><br><span class="line">  fmt.Println(orderMap.Get(<span class="string">"Bob1"</span>))</span><br><span class="line"></span><br><span class="line">  orderMap.Delete(<span class="string">"Bob"</span>)</span><br><span class="line"></span><br><span class="line">  orderMap.Append(<span class="string">"Eric"</span>, <span class="number">5</span>)</span><br><span class="line">  orderMap.Append(<span class="string">"Bobo"</span>, <span class="number">6</span>)</span><br><span class="line">  orderMap.Append(<span class="string">"Zack"</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"===================="</span>)</span><br><span class="line"></span><br><span class="line">  fmt.Println(orderMap.GetAscKeys())</span><br><span class="line">  fmt.Println(orderMap.GetDescKeys())</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"===================="</span>)</span><br><span class="line"></span><br><span class="line">  orderMap.IterateInAsc(<span class="function"><span class="keyword">func</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"key=%v, value=%v\n"</span>, k, v)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"===================="</span>)</span><br><span class="line"></span><br><span class="line">  orderMap.IterateInDesc(<span class="function"><span class="keyword">func</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"key=%v, value=%v\n"</span>, k, v)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 結果</span></span><br><span class="line"><span class="comment">// [Alice Bob Cindy Duke]</span></span><br><span class="line"><span class="comment">// [Duke Cindy Bob Alice]</span></span><br><span class="line"><span class="comment">// ====================</span></span><br><span class="line"><span class="comment">// 2 true</span></span><br><span class="line"><span class="comment">// 0 false</span></span><br><span class="line"><span class="comment">// ====================</span></span><br><span class="line"><span class="comment">// [Alice Bobo Cindy Duke Eric Zack]</span></span><br><span class="line"><span class="comment">// [Zack Eric Duke Cindy Bobo Alice]</span></span><br><span class="line"><span class="comment">// ====================</span></span><br><span class="line"><span class="comment">// key=Alice, value=1</span></span><br><span class="line"><span class="comment">// key=Bobo, value=6</span></span><br><span class="line"><span class="comment">// key=Cindy, value=3</span></span><br><span class="line"><span class="comment">// key=Duke, value=4</span></span><br><span class="line"><span class="comment">// key=Eric, value=5</span></span><br><span class="line"><span class="comment">// key=Zack, value=7</span></span><br><span class="line"><span class="comment">// ====================</span></span><br><span class="line"><span class="comment">// key=Zack, value=7</span></span><br><span class="line"><span class="comment">// key=Eric, value=5</span></span><br><span class="line"><span class="comment">// key=Duke, value=4</span></span><br><span class="line"><span class="comment">// key=Cindy, value=3</span></span><br><span class="line"><span class="comment">// key=Bobo, value=6</span></span><br><span class="line"><span class="comment">// key=Alice, value=1</span></span><br></pre></td></tr></table></figure>

<p>本篇文章的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9nby1wcmFjdGljZS90cmVlL21haW4vb3JkZXItbWFw">程式碼範例<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9nb2xhbmcuZGVzaWduL2dvLXF1ZXN0aW9ucy9tYXAvdW5vcmRlcmVkLw==">https://golang.design/go-questions/map/unordered/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9saWFuZ3lhb3BlaS5naXRodWIuaW8vMjAyMC8wNy8xMy9nb2xhbmctbWFwLw==">https://liangyaopei.github.io/2020/07/13/golang-map/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuc29ieXRlLm5ldC9wb3N0LzIwMjItMDgvZ28tbWFwLw==">https://www.sobyte.net/post/2022-08/go-map/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>map</tag>
        <tag>slice</tag>
        <tag>golang</tag>
        <tag>go</tag>
        <tag>Backend</tag>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang Slice 介紹、使用方式和 growslice 擴容</title>
    <url>/2023-12-20/Golang-Introduction-to-Slice/</url>
    <content><![CDATA[<h2 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h2><p>Array 是 Golang 的原生型別，其<strong>長度固定</strong>。 </p>
<p>Slice 是 Golang 中<strong>長度可以變動</strong>的資料型別，也就是可以隨意修改長度的 Array。</p>
<p>其中，Slice 會包含 <code>Pointer</code>、<code>Capacity</code>、<code>Length</code>，Pointer 負責<strong>指向實際底層的 Array 位址</strong>；Capacity 則是<strong>目前 Slice 的容量</strong>；Length 則是目前 Slice 內<strong>有多少元素在裏頭的長度</strong>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> slice <span class="keyword">struct</span> &#123;</span><br><span class="line">  array unsafe.Pointer</span><br><span class="line">  <span class="built_in">len</span>   <span class="keyword">int</span></span><br><span class="line">  <span class="built_in">cap</span>   <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/Golang-Introduction-to-Slice/a.png" alt="a.png"></p>
<a id="more"></a> 

<h2 id="宣告方式"><a href="#宣告方式" class="headerlink" title="宣告方式"></a>宣告方式</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">[]T</span><br><span class="line"><span class="built_in">make</span>([]T, <span class="built_in">len</span>, <span class="built_in">cap</span>)</span><br></pre></td></tr></table></figure>

<ol>
<li>普遍使用 <code>make([]type, len, cap)</code>，<code>cap</code> 通常會在宣告的時候被忽略。</li>
<li>直接定義明確資料，<code>[]string{&quot;Alice&quot;, &quot;Bob&quot;}</code>。</li>
<li>宣告一個空 Slice，<code>var member []string</code>。</li>
</ol>
<blockquote>
<p>如果 <code>Capacity</code> 沒有被定義，那麼它會與 <code>Length</code> 一樣，並且會先給定初始值。<br>可以使用 <code>len()</code> 來查看 Slice 內的長度，<code>cap()</code> 則是查看 Slice 內的容量。</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 法一 make([]type, len, cap)</span></span><br><span class="line"><span class="comment">// 宣告一個存放 string 的 Slice，長度和容量都會是 4</span></span><br><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">4</span>) <span class="comment">// len=4, cap=4, value=["", "", "", ""]</span></span><br><span class="line">fmt.Printf(<span class="string">"slice s: len=%v, cap=%v, value=%v\n"</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 長度 0，容量是 8</span></span><br><span class="line">s1 := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="number">8</span>) <span class="comment">// len=0, cap=8, value=[]</span></span><br><span class="line">fmt.Printf(<span class="string">"slice s1: len=%v, cap=%v, value=%v\n"</span>, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1), s1)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 法二 定義明確資料</span></span><br><span class="line">s2 := []<span class="keyword">string</span>&#123;<span class="string">"Alice"</span>, <span class="string">"Bob"</span>&#125;  <span class="comment">// len=2, cap=2, value=["Alice" "Bob"]</span></span><br><span class="line">fmt.Printf(<span class="string">"slice s2: len=%v, cap=%v, value=%v\n"</span>, <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2), s2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 法三 宣告空 Slice</span></span><br><span class="line"><span class="keyword">var</span> s3 []<span class="keyword">string</span>  <span class="comment">// len=0, cap=0, value=[]</span></span><br><span class="line">fmt.Printf(<span class="string">"slice s3: len=%v, cap=%v, value=%v\n"</span>, <span class="built_in">len</span>(s3), <span class="built_in">cap</span>(s3), s3)</span><br></pre></td></tr></table></figure>

<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="長度調整"><a href="#長度調整" class="headerlink" title="長度調整"></a>長度調整</h3><p>使用 <code>slice[start:end:max]</code> 的方式來去對 Slice 長度進行修改，範圍將會是 <code>[start,end)</code>，<code>end</code>  則不會被納入範圍內，並且通常不會用到 <code>max</code> ，除非你想對 <code>Capacity</code> 進行調整。</p>
<blockquote>
<p>一旦 Slice 被修改，底層的 Array 元素也會一同被修改。</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">arr := [<span class="number">4</span>]<span class="keyword">string</span>&#123;<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>&#125; <span class="comment">// len=4, cap=4, value=[a b f d]</span></span><br><span class="line">s := arr[<span class="number">2</span>:<span class="number">3</span>] <span class="comment">// len=1, cap=2, value=[c]</span></span><br><span class="line">s[<span class="number">0</span>] = <span class="string">"f"</span> <span class="comment">// len=1, cap=2, value=[f]，此時底層 array 已經變成 [a b f d]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 忽略 start 或 end，代表從頭取 或是 取至尾端</span></span><br><span class="line">s2 := arr[:<span class="number">2</span>] <span class="comment">// len=2, cap=4, value=[a b]</span></span><br><span class="line">s3 := arr[<span class="number">2</span>:] <span class="comment">// len=2, cap=2, value=[f d]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果再使用 Slice 長度調整時，想要去調整容量，才會使用到 max</span></span><br><span class="line">s4 := arr[:<span class="number">2</span>:<span class="number">3</span>] <span class="comment">// len=2, cap=3, value=[a b]</span></span><br></pre></td></tr></table></figure>

<p>上述的 <code>s2</code>、<code>s3</code> 變數可以看到為什麼明明都是取一樣的長度，可是<strong>容量卻不一樣</strong>呢?</p>
<p>因為 Slice 是以 <code>start</code> 開始到 <code>原陣列長度</code> 作為其容量大小的預留記憶體，也就是說如果今天有一個 <code>[8]int</code> 要取 <code>array[4:6]</code> 那麼到最後，<code>len</code> 會是 <code>2</code>，則 <code>cap</code> 會是 <code>4</code>。</p>
<p><img src="/images/Golang-Introduction-to-Slice/b.png" alt="b.png"></p>
<h3 id="Append"><a href="#Append" class="headerlink" title="Append"></a>Append</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(s []T, x ...T)</span> []<span class="title">T</span></span></span><br></pre></td></tr></table></figure>

<p>對 Slice 進行元素的<strong>向後新增</strong>，一旦 <code>容量小於 append 後整體的長度</code>，Slice 就會自行擴容，<code>重新宣告一個原本 2 倍</code> 容量大小，將原本的空間 <code>copy</code> 至新的 Slice。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">1</span>) <span class="comment">// [] len=0 cap=1</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>) <span class="comment">// [1] len=1 cap=1</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>) <span class="comment">// [1 1] len=2 cap=2</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>) <span class="comment">// [1 1 1] len=3 cap=4</span></span><br></pre></td></tr></table></figure>


<h3 id="Copy"><a href="#Copy" class="headerlink" title="Copy"></a>Copy</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">copy</span><span class="params">(dst, src []T)</span> <span class="title">int</span></span></span><br></pre></td></tr></table></figure>

<p>將原本 Slice 的值，深拷貝到另外一個 Slice，return 為已被複製的數量。</p>
<blockquote>
<p>如果當 <code>cloneScores</code> 容量大於 <code>scores</code> 複製過來的元素長度，剩下多的空間則是會以 0 來補。<br>如果當 <code>cloneScores</code> 容量小於 <code>scores</code> 複製過來的元素長度，最多就是<code>當前容量</code> 而 <code>不會擴容</code>，多的元素會被忽略。</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  scores := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cloneScores 容量大於 scores 複製過來的元素長度</span></span><br><span class="line">  cloneScores := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">4</span>)</span><br><span class="line">  <span class="built_in">copy</span>(cloneScores, scores[:<span class="built_in">len</span>(scores)<span class="number">-2</span>])</span><br><span class="line">  fmt.Println(cloneScores) <span class="comment">// [1,2,3,0]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// cloneScores 容量小於 scores 複製過來的元素長度</span></span><br><span class="line">  cloneScores2 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">3</span>)</span><br><span class="line">  <span class="built_in">copy</span>(cloneScores2, scores)</span><br><span class="line">  fmt.Println(cloneScores2) <span class="comment">// [1,2,3]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h3><p>用來遍歷 Slice 所使用的關鍵字，提供 <code>key</code> 和 <code>value</code>，如果某一個值不需要使用到，可以使用 <code>_</code> 來代替。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  pow := []<span class="keyword">int</span> &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> key, value := <span class="keyword">range</span> pow &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"2**%d = %d\n"</span>, key , value)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for _, value := range pow &#123;...&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// for key, _:= range pow &#123;...&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 結果</span></span><br><span class="line"><span class="comment">// 2**0 = 1</span></span><br><span class="line"><span class="comment">// 2**1 = 2</span></span><br><span class="line"><span class="comment">// 2**2 = 4</span></span><br><span class="line"><span class="comment">// 2**3 = 8</span></span><br></pre></td></tr></table></figure>

<h2 id="growslice-擴容"><a href="#growslice-擴容" class="headerlink" title="growslice 擴容"></a>growslice 擴容</h2><p>為了更好地去了解 Slice 的擴容原理，我寫了一個 for 迴圈在 <span class="exturl" data-url="aHR0cHM6Ly9nby5kZXYvcGxheS8=">Go Playground
<i class="fa fa-external-link-alt"></i></span>，來看看到底是不是原始碼所寫的那樣，測試程式碼邏輯是每次只要 Slice 長度等於容量時，就會去打印當前的長度與容量。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  s := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">1</span>) <span class="comment">// [] len=0 cap=1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2048</span>; i++ &#123;</span><br><span class="line">    s = <span class="built_in">append</span>(s, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="built_in">cap</span>(s) &#123;</span><br><span class="line">      fmt.Printf(<span class="string">"slice s: len=%v, cap=%v\n"</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// len=1, cap=1</span></span><br><span class="line"><span class="comment">// len=2, cap=2</span></span><br><span class="line"><span class="comment">// len=4, cap=4</span></span><br><span class="line"><span class="comment">// len=8, cap=8</span></span><br><span class="line"><span class="comment">// len=16, cap=16</span></span><br><span class="line"><span class="comment">// len=32, cap=32</span></span><br><span class="line"><span class="comment">// len=64, cap=64</span></span><br><span class="line"><span class="comment">// len=128, cap=128</span></span><br><span class="line"><span class="comment">// len=256, cap=256</span></span><br><span class="line"><span class="comment">// len=512, cap=512</span></span><br><span class="line"><span class="comment">// len=848, cap=848</span></span><br><span class="line"><span class="comment">// len=1280, cap=1280</span></span><br><span class="line"><span class="comment">// len=1792, cap=1792</span></span><br></pre></td></tr></table></figure>

<p>結果非常出乎意料，竟然在容量 <code>512</code> 要進行擴容時，擴充成 <code>848</code>，於是我去翻找了原始碼中的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iLzIxODRhMzk0Nzc3Y2NjOWNlOTYyNTkzMmIyYWQ3NzNlNmU2MjZiZTAvc3JjL3J1bnRpbWUvc2xpY2UuZ28jTDE1NQ==">runtime.growslice<i class="fa fa-external-link-alt"></i></span> 函數做了什麼：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  oldPtr = array 的指標位址</span></span><br><span class="line"><span class="comment">//  newLen = 新的 Slice 長度 (= oldLen + num)</span></span><br><span class="line"><span class="comment">//  oldCap = 原始的 Slice 容量</span></span><br><span class="line"><span class="comment">//     num = 被 append 的數量</span></span><br><span class="line"><span class="comment">//      et = Slice 內的型別</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">growslice</span><span class="params">(oldPtr unsafe.Pointer, newLen, oldCap, num <span class="keyword">int</span>, et *_type)</span> <span class="title">slice</span></span> &#123; ... &#125;</span><br></pre></td></tr></table></figure>

<p>發現在進行擴容時會有三大步驟：</p>
<ol>
<li>初步確認擴容大小</li>
<li>記憶體對齊</li>
<li>重新分配新的記憶體，並將新舊 Slice 資料複製</li>
</ol>
<h3 id="初步確認擴容大小"><a href="#初步確認擴容大小" class="headerlink" title="初步確認擴容大小"></a>初步確認擴容大小</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">growslice</span><span class="params">(oldPtr unsafe.Pointer, newLen, oldCap, num <span class="keyword">int</span>, et *_type)</span> <span class="title">slice</span></span> &#123;</span><br><span class="line">  oldLen := newLen - num</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 略...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果資料型別的大小是 0，那就會進入此邏輯</span></span><br><span class="line">  <span class="comment">// 這邊會返回一個 Slice 指針會指向一個全域的 zerobase 位址</span></span><br><span class="line">  <span class="keyword">if</span> et.Size_ == <span class="number">0</span> &#123;</span><br><span class="line">    <span class="comment">// append should not create a slice with nil pointer but non-zero len.</span></span><br><span class="line">    <span class="comment">// We assume that append doesn't need to preserve oldPtr in this case.</span></span><br><span class="line">    <span class="keyword">return</span> slice&#123;unsafe.Pointer(&amp;zerobase), newLen, newLen&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 計算新的 Slice 長度</span></span><br><span class="line">  newcap := nextslicecap(newLen, oldCap)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這邊我舉出兩個資料型別大小為 0 範例，<code>空 Slice</code> 和 <code>struct 型別的 Slice</code>：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> empty <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  slice1 := []empty&#123;empty&#123;&#125;, empty&#123;&#125;&#125;</span><br><span class="line">  slice2 := []empty&#123;&#125;</span><br><span class="line">  slice3 := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">  slice4 := []<span class="keyword">int</span>&#123;<span class="number">10</span>&#125;</span><br><span class="line">  fmt.Println(slice1, <span class="built_in">len</span>(slice1), <span class="built_in">cap</span>(slice1))</span><br><span class="line">  fmt.Println(slice2, <span class="built_in">len</span>(slice2), <span class="built_in">cap</span>(slice2))</span><br><span class="line">  fmt.Println(slice3, <span class="built_in">len</span>(slice3), <span class="built_in">cap</span>(slice3))</span><br><span class="line">  fmt.Println(slice4, <span class="built_in">len</span>(slice4), <span class="built_in">cap</span>(slice4))</span><br><span class="line"></span><br><span class="line">  fmt.Printf(<span class="string">"%x\n"</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;slice1)).Data)</span><br><span class="line">  fmt.Printf(<span class="string">"%x\n"</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;slice2)).Data)</span><br><span class="line">  fmt.Printf(<span class="string">"%x\n"</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;slice3)).Data)</span><br><span class="line">  fmt.Printf(<span class="string">"%x\n"</span>, (*reflect.SliceHeader)(unsafe.Pointer(&amp;slice4)).Data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [&#123;&#125; &#123;&#125;] 2 2</span></span><br><span class="line"><span class="comment">// [] 0 0</span></span><br><span class="line"><span class="comment">// [] 0 0</span></span><br><span class="line"><span class="comment">// [10] 1 1</span></span><br><span class="line"><span class="comment">// 54e3a0</span></span><br><span class="line"><span class="comment">// 54e3a0</span></span><br><span class="line"><span class="comment">// 54e3a0</span></span><br><span class="line"><span class="comment">// c000012028</span></span><br></pre></td></tr></table></figure>

<p>根據 1.22 版本的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iLzIxODRhMzk0Nzc3Y2NjOWNlOTYyNTkzMmIyYWQ3NzNlNmU2MjZiZTAvc3JjL3J1bnRpbWUvc2xpY2UuZ28jTDI2Nw==">runtime.nextslicecap<i class="fa fa-external-link-alt"></i></span>：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// newLen = 新的 Slice 長度 (= oldLen + num)</span></span><br><span class="line"><span class="comment">// oldCap = 原始的 Slice 容量</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nextslicecap</span><span class="params">(newLen, oldCap <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">  <span class="comment">// 如果新的 Slice 長度 (newLen) &gt; 兩倍的容量 (2 * oldCap)，新的容量就會是 newLen</span></span><br><span class="line">  newcap := oldCap</span><br><span class="line">  doublecap := newcap + newcap</span><br><span class="line">  <span class="keyword">if</span> newLen &gt; doublecap &#123;</span><br><span class="line">    <span class="keyword">return</span> newLen</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 常數閥值</span></span><br><span class="line">  <span class="keyword">const</span> threshold = <span class="number">256</span></span><br><span class="line">  <span class="comment">// 在原始的 Slice 容量 &lt; 256 時，就會返回兩倍的容量</span></span><br><span class="line">  <span class="keyword">if</span> oldCap &lt; threshold &#123;</span><br><span class="line">    <span class="keyword">return</span> doublecap</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> &#123;</span><br><span class="line">    <span class="comment">// 每次增加 25% 的原始容量 + 額外的 192</span></span><br><span class="line">    newcap += (newcap + <span class="number">3</span>*threshold) &gt;&gt; <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 確保新的容量 &gt;= 新的長度，否則就會在累加一次</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">uint</span>(newcap) &gt;= <span class="keyword">uint</span>(newLen) &#123;</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 因為 newcap 會重複被累加，如果 newcap overflow 就直接返回與長度一樣的容量</span></span><br><span class="line">  <span class="keyword">if</span> newcap &lt;= <span class="number">0</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> newLen</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newcap</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而在 1.18 版本以前計算方式則不太一樣：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">newcap := old.<span class="built_in">cap</span></span><br><span class="line">doublecap := newcap + newcap</span><br><span class="line"><span class="comment">// 如果期望容量 (cap) &gt; 兩倍的容量 (2 * oldCap)，新的容量就會是 cap</span></span><br><span class="line"><span class="comment">// 這邊 cap 其實等於 1.22 版本的 newLen</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">cap</span> &gt; doublecap &#123;</span><br><span class="line">  newcap = <span class="built_in">cap</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果期望容量沒有超過 2 倍</span></span><br><span class="line">  <span class="keyword">if</span> old.<span class="built_in">len</span> &lt; <span class="number">1024</span> &#123; <span class="comment">// 如果原始容量 &lt; 1024，新容量就是 2 倍</span></span><br><span class="line">    newcap = doublecap</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果原始容量 &gt;= 1024，新容量就會累加 25%，直到 &gt;= 期望容量</span></span><br><span class="line">    <span class="keyword">for</span> newcap &lt; <span class="built_in">cap</span> &#123;</span><br><span class="line">      newcap += newcap / <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>1.18 版本以前</code> 的邏輯：</p>
<ol>
<li><code>新增元素後的長度 &gt; 2 倍原始容量</code>，那麼就會 <code>使用該長度</code>。</li>
<li>擴容在 <code>少量元素</code> 的情況下，會以 <code>2 倍大小</code> 作為新的容量，但是為了避免後續 <code>容量增加而未使用</code> 造成的空間浪費，所以只要是容量大小 &gt;= 1024 的情況，就只會 <code>每次增加原本容量的 25%</code>。</li>
</ol>
<p><code>1.18 版本以後</code> 的邏輯，則是 <code>修改閥值大小</code> 把 <code>1024</code> 降低到 <code>256</code>，並且每次新增除了 25% 的容量，還會新增 <code>192</code> 的空間，會這樣更動的原因可以查看當時的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9jb21taXQvMmRkYTkyZmY2ZjlmMDdlZWIxMTBlY2JmMGZjMmQ3YTBkZGQyN2Y5ZA==">Commit 紀錄<i class="fa fa-external-link-alt"></i></span>，其實就是想要讓 <code>擴容曲線更加圓滑</code>。</p>
<table>
<thead>
<tr>
<th>starting cap</th>
<th>growth factor</th>
</tr>
</thead>
<tbody><tr>
<td>256</td>
<td>2.0</td>
</tr>
<tr>
<td>512</td>
<td>1.63</td>
</tr>
<tr>
<td>1024</td>
<td>1.44</td>
</tr>
<tr>
<td>2048</td>
<td>1.35</td>
</tr>
<tr>
<td>4096</td>
<td>1.30</td>
</tr>
</tbody></table>
<p>那麼根據 1.22 版本的規則 for 迴圈的範例，從容量 512 擴容時，<code>newcap</code> 應該要是 512 * 1.25 + 192 = <code>832</code>，為什麼打印出來的容量是 <code>848</code> 呢？那是因為還要對 <code>記憶體空間</code> 進行 <code>對齊</code>。</p>
<h3 id="記憶體對齊"><a href="#記憶體對齊" class="headerlink" title="記憶體對齊"></a>記憶體對齊</h3><p>關於記憶體對齊，jserv 在 <code>你所不知道的 C 語言</code> 的講座有<span class="exturl" data-url="aHR0cHM6Ly9oYWNrbWQuaW8vQHN5c3Byb2cvYy1wcm9nLyUyRnMlMkZCa3VNRFE5SzcjZGF0YS1hbGlnbm1lbnQ=">講到<i class="fa fa-external-link-alt"></i></span>，大概意思就是每次 CPU 都會抓固定的大小 (32 位元就是 4 bytes、64 位元就是 8 bytes) 進行運算。</p>
<blockquote>
<p>假定我現在是 64 位元的系統，我每次以 8 bytes 為單位的方式抓資料，如果我現在要抓的資料位址在第 1~8 byte，那麼就要抓兩次分別是：</p>
<ol>
<li>取 0-7 byte，把第 0 byte 的資料清除，留下 1-7 byte</li>
<li>取 8-15 byte，把 9-15 byte 的資料清除，留下第 8 byte</li>
<li>再把抓出來的兩個記憶體位址進行拼接</li>
</ol>
<p>同樣是取資料，但是由於 <code>記憶體的資料不對齊</code>，所以操作更加複雜導致 <code>效率低落</code></p>
</blockquote>
<p>所以我們在擴容的時候，當然也要根據 <code>Slice 的型別佔用的空間</code> 去申請 <code>相對應大小的空間</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">growslice</span><span class="params">(oldPtr unsafe.Pointer, newLen, oldCap, num <span class="keyword">int</span>, et *_type)</span> <span class="title">slice</span></span> &#123;</span><br><span class="line">  <span class="comment">// 略...</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> overflow <span class="keyword">bool</span></span><br><span class="line">  <span class="keyword">var</span> lenmem, newlenmem, capmem <span class="keyword">uintptr</span></span><br><span class="line">  <span class="comment">// 對元素大小為 1、goarch.PtrSize、2^n 進行優化</span></span><br><span class="line">  noscan := et.PtrBytes == <span class="number">0</span></span><br><span class="line">  <span class="keyword">switch</span> &#123;</span><br><span class="line">  <span class="keyword">case</span> et.Size_ == <span class="number">1</span>:</span><br><span class="line">    ...</span><br><span class="line">  <span class="keyword">case</span> et.Size_ == goarch.PtrSize:</span><br><span class="line">    lenmem = <span class="keyword">uintptr</span>(oldLen) * goarch.PtrSize</span><br><span class="line">    newlenmem = <span class="keyword">uintptr</span>(newLen) * goarch.PtrSize</span><br><span class="line">    capmem = roundupsize(<span class="keyword">uintptr</span>(newcap)*goarch.PtrSize, noscan)</span><br><span class="line">    overflow = <span class="keyword">uintptr</span>(newcap) &gt; maxAlloc/goarch.PtrSize</span><br><span class="line">    newcap = <span class="keyword">int</span>(capmem / goarch.PtrSize)</span><br><span class="line">  <span class="keyword">case</span> isPowerOfTwo(et.Size_):</span><br><span class="line">    ...</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>因為範例中是使用 <code>int 型別</code>，在 64 位元下佔用 <code>8 bytes</code>，且 <code>goarch.PtrSize</code> 也是 <code>8 bytes</code>。如果將數字帶入的話：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">lenmem = <span class="keyword">uintptr</span>(<span class="number">512</span>) * <span class="number">8</span>                       <span class="comment">// = 4096</span></span><br><span class="line">newlenmem = <span class="keyword">uintptr</span>(<span class="number">513</span>) * <span class="number">8</span>                    <span class="comment">// = 4104</span></span><br><span class="line">capmem = roundupsize(<span class="keyword">uintptr</span>(<span class="number">832</span>)*<span class="number">8</span>, <span class="literal">false</span>)     <span class="comment">// = roundupsize(6656, false)</span></span><br><span class="line">overflow = <span class="keyword">uintptr</span>(<span class="number">832</span>) &gt; maxAlloc/<span class="number">8</span></span><br><span class="line">newcap = <span class="keyword">int</span>(capmem / <span class="number">8</span>)                        <span class="comment">// = int(roundupsize(6656, false)/8)</span></span><br></pre></td></tr></table></figure>

<p>後面計算到一半使用 <code>roundupsize()</code>，那麼我們再去看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iLzIxODRhMzk0Nzc3Y2NjOWNlOTYyNTkzMmIyYWQ3NzNlNmU2MjZiZTAvc3JjL3J1bnRpbWUvbXNpemVfbm9hbGxvY2hlYWRlcnMuZ28jTDE3">runtime.roundupsize<i class="fa fa-external-link-alt"></i></span>做了什麼運算：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _MaxSmallSize = 32 &lt;&lt; 10 = 32768</span></span><br><span class="line"><span class="comment">// smallSizeDiv  = 8</span></span><br><span class="line"><span class="comment">// largeSizeDiv  = 128</span></span><br><span class="line"><span class="comment">// smallSizeMax  = 1024</span></span><br><span class="line"><span class="comment">// _PageShift    = 13</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">roundupsize</span><span class="params">(size <span class="keyword">uintptr</span>, noscan <span class="keyword">bool</span>)</span> <span class="title">uintptr</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> size &lt; _MaxSmallSize &#123; <span class="comment">// 小於 32768</span></span><br><span class="line">    <span class="keyword">if</span> size &lt;= smallSizeMax<span class="number">-8</span> &#123; <span class="comment">// 小於等於 1024 - 8 = 1016</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">uintptr</span>(class_to_size[size_to_class8[divRoundUp(size, smallSizeDiv)]])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 大於 1016</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">uintptr</span>(class_to_size[size_to_class128[divRoundUp(size-smallSizeMax, largeSizeDiv)]]) <span class="comment">// class_to_size[size_to_class128[divRoundUp(6656 - 1024, 128)]]</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> size+_PageSize &lt; size &#123;</span><br><span class="line">    <span class="keyword">return</span> size</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> alignUp(size, _PageSize)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我們因為會使用到 <code>6656 bytes</code> 的空間，所以要被 <code>divRoundUp()</code> 運算，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iLzIxODRhMzk0Nzc3Y2NjOWNlOTYyNTkzMmIyYWQ3NzNlNmU2MjZiZTAvc3JjL3J1bnRpbWUvc3R1YnMuZ28jTDM1Ng==">runtime.divRoundUp<i class="fa fa-external-link-alt"></i></span>：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// divRoundUp returns ceil(n / a).</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">divRoundUp</span><span class="params">(n, a <span class="keyword">uintptr</span>)</span> <span class="title">uintptr</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> (n + a - <span class="number">1</span>) / a <span class="comment">// (5632 + 128 - 1) / 128 = 44</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>運算結果為 (5632 + 128 - 1) / 128 = <code>44</code>，就會變成 <code>class_to_size[size_to_class128[44]]</code>，找出<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby9ibG9iLzIxODRhMzk0Nzc3Y2NjOWNlOTYyNTkzMmIyYWQ3NzNlNmU2MjZiZTAvc3JjL3J1bnRpbWUvc2l6ZWNsYXNzZXMuZ28jTDk3">runtime.size_to_class8 和 runtime.size_to_class128<i class="fa fa-external-link-alt"></i></span>：</p>
<ul>
<li><code>size_to_class128</code>：代表要多少 128 bytes 來對齊記憶體</li>
<li><code>class_to_size</code>：代表對應記憶體對其的字節大小</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> class_to_size = [<span class="number">0</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">24</span>, <span class="number">32</span>, <span class="number">48</span>, <span class="number">64</span>, <span class="number">80</span>, <span class="number">96</span>, <span class="number">112</span>, <span class="number">128</span>, <span class="number">144</span>, <span class="number">160</span>, <span class="number">176</span>, <span class="number">192</span>, <span class="number">208</span>, <span class="number">224</span>, <span class="number">240</span>, <span class="number">256</span>, <span class="number">288</span>, <span class="number">320</span>, <span class="number">352</span>, <span class="number">384</span>, <span class="number">416</span>, <span class="number">448</span>, <span class="number">480</span>, <span class="number">512</span>, <span class="number">576</span>, <span class="number">640</span>, <span class="number">704</span>, <span class="number">768</span>, <span class="number">896</span>, <span class="number">1024</span>, <span class="number">1152</span>, <span class="number">1280</span>, <span class="number">1408</span>, <span class="number">1536</span>, <span class="number">1792</span>, <span class="number">2048</span>, <span class="number">2304</span>, <span class="number">2688</span>, <span class="number">3072</span>, <span class="number">3200</span>, <span class="number">3456</span>, <span class="number">4096</span>, <span class="number">4864</span>, <span class="number">5376</span>, <span class="number">6144</span>, <span class="number">6528</span>, <span class="number">6784</span>, <span class="number">6912</span>, <span class="number">8192</span>, <span class="number">9472</span>, <span class="number">9728</span>, <span class="number">10240</span>, <span class="number">10880</span>, <span class="number">12288</span>, <span class="number">13568</span>, <span class="number">14336</span>, <span class="number">16384</span>, <span class="number">18432</span>, <span class="number">19072</span>, <span class="number">20480</span>, <span class="number">21760</span>, <span class="number">24576</span>, <span class="number">27264</span>, <span class="number">28672</span>, <span class="number">32768</span>]</span><br><span class="line"><span class="keyword">var</span> size_to_class128 = [<span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">37</span>, <span class="number">37</span>, <span class="number">38</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">41</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">43</span>, <span class="number">44</span>, <span class="number">44</span>, <span class="number">44</span>, <span class="number">44</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">48</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">54</span>, <span class="number">54</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">58</span>, <span class="number">58</span>, <span class="number">58</span>, <span class="number">58</span>, <span class="number">58</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">61</span>, <span class="number">61</span>, <span class="number">61</span>, <span class="number">61</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>, <span class="number">67</span>]</span><br></pre></td></tr></table></figure>

<p>所以 <code>size_to_class128[44] = 49</code>，接續 <code>class_to_size[49] = 6784</code>。最後得知要申請的新記憶體空間大小就會是 <code>6784 bytes</code>，而容量就會是 6784 / 8 = <code>848</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">newcap = <span class="keyword">int</span>(capmem / <span class="number">8</span>) <span class="comment">// = int(6784/8) = 848</span></span><br></pre></td></tr></table></figure>

<h3 id="重新分配新的記憶體，並將新舊-Slice-資料複製"><a href="#重新分配新的記憶體，並將新舊-Slice-資料複製" class="headerlink" title="重新分配新的記憶體，並將新舊 Slice 資料複製"></a>重新分配新的記憶體，並將新舊 Slice 資料複製</h3><p>最後一步，也就是根據需要的空間大小去 <code>申請記憶體空間</code>，根據把舊資料 <code>移植</code> 到新的記憶體位址，<code>返回新的 Slice</code>。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">growslice</span><span class="params">(oldPtr unsafe.Pointer, newLen, oldCap, num <span class="keyword">int</span>, et *_type)</span> <span class="title">slice</span></span> &#123;</span><br><span class="line">  <span class="comment">// 略...</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> overflow || capmem &gt; maxAlloc &#123;</span><br><span class="line">    <span class="built_in">panic</span>(errorString(<span class="string">"growslice: len out of range"</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> p unsafe.Pointer <span class="comment">// 擴容後新的指針起始位址</span></span><br><span class="line">  <span class="keyword">if</span> et.PtrBytes == <span class="number">0</span> &#123;</span><br><span class="line">    p = mallocgc(capmem, <span class="literal">nil</span>, <span class="literal">false</span>)</span><br><span class="line">    memclrNoHeapPointers(add(p, newlenmem), capmem-newlenmem)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 重新分配新的記憶體</span></span><br><span class="line">    p = mallocgc(capmem, et, <span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">if</span> lenmem &gt; <span class="number">0</span> &amp;&amp; writeBarrier.enabled &#123;</span><br><span class="line">      bulkBarrierPreWriteSrcOnly(<span class="keyword">uintptr</span>(p), <span class="keyword">uintptr</span>(oldPtr), lenmem-et.Size_+et.PtrBytes, et)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 這個函數由組語寫成，目的是將舊 Slice data 轉移至新 Slice</span></span><br><span class="line">  memmove(p, oldPtr, lenmem)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 返回新的 Slice</span></span><br><span class="line">  <span class="keyword">return</span> slice&#123;p, newLen, newcap&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="小試身手"><a href="#小試身手" class="headerlink" title="小試身手"></a>小試身手</h2><blockquote>
<p>請都以 1.18 以後的版本邏輯，回答以下會輸出什麼！</p>
</blockquote>
<p><strong>問題一</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> array [<span class="number">20</span>]<span class="keyword">int</span></span><br><span class="line">  <span class="keyword">var</span> slice = array[<span class="number">10</span>:<span class="number">11</span>]</span><br><span class="line">  fmt.Println(<span class="string">"lenth: "</span>, <span class="built_in">len</span>(slice))</span><br><span class="line">  fmt.Println(<span class="string">"capacity: "</span>, <span class="built_in">cap</span>(slice))</span><br><span class="line">  fmt.Println(&amp;slice[<span class="number">0</span>] == &amp;array[<span class="number">10</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>答案一</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">lenth:  <span class="number">1</span></span><br><span class="line">capacity:  <span class="number">10</span></span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure>


<p><strong>問題二</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  orderLen := <span class="number">5</span></span><br><span class="line">  order := <span class="built_in">make</span>([]<span class="keyword">uint16</span>, <span class="number">2</span> * orderLen)</span><br><span class="line"></span><br><span class="line">  pollorder := order[:orderLen:orderLen]</span><br><span class="line">  lockorder := order[orderLen:][:orderLen:orderLen]</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"len(pollorder) = "</span>, <span class="built_in">len</span>(pollorder))</span><br><span class="line">  fmt.Println(<span class="string">"cap(pollorder) = "</span>, <span class="built_in">cap</span>(pollorder))</span><br><span class="line">  fmt.Println(<span class="string">"len(lockorder) = "</span>, <span class="built_in">len</span>(lockorder))</span><br><span class="line">  fmt.Println(<span class="string">"cap(lockorder) = "</span>, <span class="built_in">cap</span>(lockorder))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>答案二</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">len</span>(pollorder) =  <span class="number">5</span></span><br><span class="line"><span class="built_in">cap</span>(pollorder) =  <span class="number">5</span></span><br><span class="line"><span class="built_in">len</span>(lockorder) =  <span class="number">5</span></span><br><span class="line"><span class="built_in">cap</span>(lockorder) =  <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p><strong>問題三</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  s1 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">  s1 = <span class="built_in">append</span>(s1, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">  fmt.Printf(<span class="string">"cap of s1:%d\n"</span>, <span class="built_in">cap</span>(s1))</span><br><span class="line"></span><br><span class="line">  s2 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">  s2 = <span class="built_in">append</span>(s2, <span class="number">1</span>)</span><br><span class="line">  fmt.Printf(<span class="string">"cap of s2:%d\n"</span>, <span class="built_in">cap</span>(s2))</span><br><span class="line"></span><br><span class="line">  s3 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">257</span>, <span class="number">257</span>)</span><br><span class="line">  s3 = <span class="built_in">append</span>(s3, <span class="number">1</span>)</span><br><span class="line">  fmt.Printf(<span class="string">"cap of s3:%d\n"</span>, <span class="built_in">cap</span>(s3))</span><br><span class="line"></span><br><span class="line">  s4 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">512</span>, <span class="number">512</span>)</span><br><span class="line">  s4 = <span class="built_in">append</span>(s4, <span class="number">1</span>)</span><br><span class="line">  fmt.Printf(<span class="string">"cap of s4:%d\n"</span>, <span class="built_in">cap</span>(s4))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>答案三</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cap</span> of s1:<span class="number">6</span></span><br><span class="line"><span class="built_in">cap</span> of s2:<span class="number">512</span></span><br><span class="line"><span class="built_in">cap</span> of s3:<span class="number">608</span></span><br><span class="line"><span class="built_in">cap</span> of s4:<span class="number">848</span></span><br></pre></td></tr></table></figure>

<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><ul>
<li>Slice 使用<ul>
<li>建立 Slice 可以根據實際需求預先劃分好 <code>需要的容量</code> 以及 <code>初始值</code>。</li>
<li>Slice 在進行 <code>copy</code> 時，要判斷是否目的 Slice 是否為需求所要。</li>
<li>Slice 指向同一個 Array，請避免多次操作同一個 Slice。</li>
<li>使用 <code>len()</code>、<code>cap()</code> 可以獲取 Slice 的長度和容量。</li>
<li>Slice 在賦值時不會複製整個 Slice，而是獲取其 <code>Array 位址</code>、<code>長度</code> 和 <code>容量</code>。</li>
<li>使用 <code>append</code> 可能會觸發擴容，若是想要避免，可以提前宣告足夠的容量。</li>
</ul>
</li>
<li>growslice<ul>
<li>1.18 前後版本的擴容閥值不同，原本由 <code>1024</code> 降至 <code>256</code>。</li>
<li>如果 <code>新增元素後長度 &gt; 原本容量 2 倍</code>，就會 <code>使用該長度</code>。</li>
<li>如果要 <code>原本容量 &lt; 閥值</code>，就會以 <code>2 倍</code> 進行擴容。</li>
<li>如果 <code>原本容量 &gt;= 閥值</code>，則是根據 <code>原本容量的 25%</code> 進行擴容，新版本還會 <code>增加 192</code>。</li>
<li>計算好預期容量後，還要讓 <code>記憶體對齊</code>，才能夠申請新的 Slice。</li>
</ul>
</li>
</ul>
<p>本篇文章的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9nby1wcmFjdGljZS90cmVlL21haW4vaW50cm9kdWN0aW9uLXRvLXNsaWNl">程式碼範例<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTk3MjEyNTUyMjQxMzQ4NjE2">https://juejin.cn/post/6997212552241348616<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9wamNoZW5kZXIuZGV2L2dvbGFuZy9zbGljZS1hbmQtYXJyYXkv">https://pjchender.dev/golang/slice-and-array/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuam94cmF5cy5jb20vZ28tc2xpY2Uv">https://www.joxrays.com/go-slice/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9nb2xhbmcuZGVzaWduL2dvLXF1ZXN0aW9ucy9zbGljZS9ncm93Lw==">https://golang.design/go-questions/slice/grow/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nbw==">https://github.com/golang/go<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>slice</tag>
        <tag>golang</tag>
        <tag>go</tag>
        <tag>Backend</tag>
        <tag>interview</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>如何實作 Goroutine Pool?</title>
    <url>/2023-09-15/Build-A-Goroutine-Pool/</url>
    <content><![CDATA[<h1 id="Goroutine-Pool"><a href="#Goroutine-Pool" class="headerlink" title="Goroutine Pool"></a>Goroutine Pool</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>近期對於 golang 的 goroutine 非常感興趣，因為只要在 func 面前下一個關鍵字 <code>go dosomething()</code>，就能過用同步的方式來達到異步的效果。</p>
<p>然而，goroutine 是額外開啟一個輕量化的執行緒去執行我們的任務，如果需要在一個大量開啟 goroutines 情境下使用的話，系統很容易因為無節制的使用 goroutines 而大規模進行擴充與銷毀，這樣會造成 GC (Garbage Collection) 產生大量的壓力，從而影響我們的系統整體的效能。</p>
<p>並且 <code>runtime</code> 和 <code>GC</code> 都是 goroutine，如果 goroutine 的規模太過於龐大，記憶體無法有效進行調度， <code>Go Scheduler</code> 就會阻塞 goroutine，導致 <code>Processor</code> Local Queue 累積，造成記憶體溢出，最後有可能整個行程直接崩潰。</p>
</blockquote>
<a id="more"></a> 

<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>一般來說，如果我們要避免我們的 goroutine <code>無限制的持續增長</code> 導致 <code>process</code> 崩潰，那麼就必需在使用前 <code>提前限制使用的數量</code>，如此一來，就能解決無限制增長的問題。</p>
<p>可是若是這樣單單的限制數量還不夠，因為 goroutine 是會被 <code>擴充</code> 和 <code>銷毀</code>，是不是一旦建立後，先 <code>保存起來重複使用</code>，<code>等待一定時間再進行銷毀</code>，就可以縮小 runtime 和 GC 運作的壓力。</p>
<p>假設現在有 <code>100萬</code> 個請求要併發執行，我們其實可以不用同等的規模建立100萬個 goroutine (<code>硬體可能不允許</code>)，但我們可以建立 <code>5萬個</code> 再低一點甚至是 <code>1萬個</code> 也可以，只要平均把請求分配至這 <code>1萬個</code> goroutine 同樣可以在 <code>系統穩定的前提下</code> 慢慢完成。</p>
<h2 id="設計思路"><a href="#設計思路" class="headerlink" title="設計思路"></a>設計思路</h2><ol>
<li>初始化一個 <code>Goroutine Pool</code>，設定 <code>最大</code> 的 Worker 數量。</li>
<li>該 Pool 是一個以 <code>Circular Queue</code> 實現 <code>FIFO</code> 的資料結構，主要負責存放要處理 task 的 Worker。</li>
<li>檢查 Pool 中是否有可用的 Worker。<ol>
<li>有，取出 Worker 執行 task。</li>
<li>沒有，判斷 Worker 數量是否超出 Pool 的最大限制。<ol>
<li>是，判斷 Pool 是否為 Non-Blocking。<ol>
<li>是，直接返回 <code>nil</code>。 </li>
<li>否，Blocking 等待 Worker 被放回 Pool。</li>
</ol>
</li>
<li>否，<code>創建</code> 一個新的 goroutine 作為 Worker 來執行 task。<ol>
<li>當 Worker 執行完任務，把它放回 Pool 中。</li>
<li>定時將 <code>閒置的 Worker</code> 清理。</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>流程圖如下所示：</p>
<p><img src="/images/Build-A-Goroutine-Pool/goroutine_pool.drawio.png" alt=""></p>
<h2 id="Goroutine-Pool-實作"><a href="#Goroutine-Pool-實作" class="headerlink" title="Goroutine Pool 實作"></a>Goroutine Pool 實作</h2><h3 id="定義-Pool-struct"><a href="#定義-Pool-struct" class="headerlink" title="定義 Pool struct"></a>定義 <code>Pool struct</code></h3><ul>
<li><code>capacity</code> 是我們 Pool 容量 <code>worker 的最大數量</code></li>
<li><code>running</code> 是 <code>正在執行 worker 數量</code></li>
<li><code>waiting</code>是 <code>任務阻塞等待的數量</code></li>
<li><code>workers</code> 是使用陣列實作 <code>circular queue</code> 的資料結構</li>
<li><code>state</code> 是當 Pool 的狀態，<code>Release()</code> 後會是關閉的，<code>Reboot()</code> 則是會重啟</li>
<li><code>lock</code> 是為了避免操作 worker 時候產生 data race</li>
<li><code>cond</code> 是要讓多出來的任務無法被 worker 馬上消化時，可以 <code>阻塞</code> 等待的一個類似 <code>waitGroup</code> 的功能</li>
<li><code>workerCache</code> 是要讓 worker <code>初始化</code> 或 <code>不執行時</code>，可以重複使用的一個 cache</li>
<li><code>clearDone</code>、<code>stopClear</code> 是用來表示 <code>定時清理</code> 的狀態和 <code>cancel function</code></li>
<li><code>options</code> 是 Pool 裡的設定</li>
</ul>
<p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Pool <span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="comment">// pool 容量</span></span><br><span class="line">	capacity <span class="keyword">int32</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 正在執行的goroutine</span></span><br><span class="line">	running <span class="keyword">int32</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Blocking 的 task 數</span></span><br><span class="line">	waiting <span class="keyword">int32</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 閒置的Workers</span></span><br><span class="line">	workers workerQueue</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 警告Pool要自己close</span></span><br><span class="line">	state <span class="keyword">int32</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 鎖</span></span><br><span class="line">	lock sync.Mutex</span><br><span class="line"></span><br><span class="line">	<span class="comment">// worker 等待的鎖</span></span><br><span class="line">	cond *sync.Cond</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 回收使用過的Worker</span></span><br><span class="line">	workerCache sync.Pool</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Clear 是否完成</span></span><br><span class="line">	clearDone <span class="keyword">int32</span></span><br><span class="line">	stopClear context.CancelFunc</span><br><span class="line"></span><br><span class="line">	options *Options</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="定義-Options，客製化額外需求"><a href="#定義-Options，客製化額外需求" class="headerlink" title="定義 Options，客製化額外需求"></a>定義 <code>Options</code>，客製化額外需求</h3><p>此功能主要是能夠讓使用者<code>自主設定需要的功能</code>，若使用者不設定 Pool 也會有自己的預設模式。</p>
<p><code>option.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> grpool</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"time"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 參數設定</span></span><br><span class="line"><span class="keyword">type</span> Option <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加載設定</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadOptions</span><span class="params">(options ...Option)</span> *<span class="title">Options</span></span> &#123;</span><br><span class="line">	opts := <span class="built_in">new</span>(Options)</span><br><span class="line">	<span class="keyword">for</span> _, option := <span class="keyword">range</span> options &#123;</span><br><span class="line">		option(opts)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> opts</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 該設定會被用來引入至 Pool 中</span></span><br><span class="line"><span class="keyword">type</span> Options <span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="comment">// 過期時間: 用於定時清理過期的 Worker (只要太久沒被使用的 Worker 就會被清理)，預設為 1 秒</span></span><br><span class="line">	ExpiryDuration time.Duration</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 是否提前申請空間，大量執行需求中使用</span></span><br><span class="line">	PreAlloc <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Nonblocking 用來阻塞任務</span></span><br><span class="line">	<span class="comment">// 若設定為 true，就會返回 ErrPoolOverload 錯誤</span></span><br><span class="line">	Nonblocking <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用來處理 worker panic 發生的事件</span></span><br><span class="line">	PanicHandler <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 若設定為 true，Worker 就不會被自動清除</span></span><br><span class="line">	DisableClear <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接傳入 Options</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithOptions</span><span class="params">(options Options)</span> <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		*opts = options</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定過期時間</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithExpiryDuration</span><span class="params">(expiryDuration time.Duration)</span> <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		opts.ExpiryDuration = expiryDuration</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定是否要提前創建空間</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithPreAlloc</span><span class="params">(preAlloc <span class="keyword">bool</span>)</span> <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		opts.PreAlloc = preAlloc</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 若為 true，代表沒有有用的 Worker 時，會直接 ErrPoolOverload</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithNonblocking</span><span class="params">(nonblocking <span class="keyword">bool</span>)</span> <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		opts.Nonblocking = nonblocking</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Panic 事件處理</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithPanicHandler</span><span class="params">(panicHandler <span class="keyword">func</span>(<span class="keyword">interface</span>&#123;&#125;)</span>) <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		opts.PanicHandler = panicHandler</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否要關閉 Clear</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithDisableClear</span><span class="params">(disable <span class="keyword">bool</span>)</span> <span class="title">Option</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(opts *Options)</span></span> &#123;</span><br><span class="line">		opts.DisableClear = disable</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="初始化-Pool，加載-Options-並開啟自動清理"><a href="#初始化-Pool，加載-Options-並開啟自動清理" class="headerlink" title="初始化 Pool，加載 Options 並開啟自動清理"></a>初始化 Pool，加載 <code>Options</code> 並開啟自動清理</h3><p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewPool</span><span class="params">(size <span class="keyword">int</span>, options ...Option)</span> <span class="params">(*Pool, error)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 加載設定</span></span><br><span class="line">	opts := loadOptions(options...)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> !opts.DisableClear &#123;</span><br><span class="line">		<span class="keyword">if</span> expiry := opts.ExpiryDuration; expiry &lt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span>, ErrInvalidPoolExpiry</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> expiry == <span class="number">0</span> &#123;</span><br><span class="line">			opts.ExpiryDuration = DefaultCleanIntervalTime</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 如果 size 不是一個有效的 Size 就使用 DefaultPoolSize</span></span><br><span class="line">	<span class="keyword">if</span> size &lt;= <span class="number">0</span> &#123;</span><br><span class="line">		size = DefaultPoolSize</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// init</span></span><br><span class="line">	p := &amp;Pool&#123;</span><br><span class="line">		capacity: <span class="keyword">int32</span>(size),</span><br><span class="line">		options:  opts,</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提前申請 worker</span></span><br><span class="line">	p.workerCache.New = <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">		<span class="keyword">return</span> &amp;Worker&#123;</span><br><span class="line">			pool: p,</span><br><span class="line">			task: <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="function"><span class="keyword">func</span><span class="params">()</span>, <span class="title">workerChanCap</span>),</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p.cond = sync.NewCond(&amp;p.lock)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 circular queue</span></span><br><span class="line">	p.workers = newWorkerCircularQueue(size, p.options.PreAlloc)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 定期清理過期的worker，節省系統資源</span></span><br><span class="line">	p.goClear()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> p, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="定時清理過期的-Worker"><a href="#定時清理過期的-Worker" class="headerlink" title="定時清理過期的 Worker"></a>定時清理過期的 Worker</h3><p><code>ctx, p.stopClear = context.WithCancel(context.Background())</code></p>
<p>這是一個可以讓 goroutine 優雅取消的方式，只要呼叫 <code>p.stopClear()</code>，<code>ctx.Done()</code> 就會被傳入通知取消工作。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 開啟一個 goroutine 定時清理過期的 workers</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">goClear</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 若設定不開啟就返回</span></span><br><span class="line">	<span class="keyword">if</span> p.options.DisableClear &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> ctx context.Context</span><br><span class="line">       <span class="comment">// p.stopClear() 呼叫的時候，會觸發 ctx.Done() 讓 goroutine 停止</span></span><br><span class="line">	ctx, p.stopClear = context.WithCancel(context.Background())</span><br><span class="line">	<span class="keyword">go</span> p.ClearStaleWorkers(ctx)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定時清理過期的 workers</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">ClearStaleWorkers</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">	ticker := time.NewTicker(p.options.ExpiryDuration)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		ticker.Stop()</span><br><span class="line">		atomic.StoreInt32(&amp;p.clearDone, <span class="number">1</span>)</span><br><span class="line">	&#125;()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		<span class="keyword">select</span> &#123;</span><br><span class="line">		<span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		<span class="keyword">case</span> &lt;-ticker.C:</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> p.IsClosed() &#123;</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		p.lock.Lock()</span><br><span class="line">		staleWorkers := p.workers.refresh(p.options.ExpiryDuration)</span><br><span class="line">		p.lock.Unlock()</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> i := <span class="keyword">range</span> staleWorkers &#123;</span><br><span class="line">			staleWorkers[i].finish()</span><br><span class="line">			staleWorkers[i] = <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Pool-的基本操作，Pool-的狀態操作"><a href="#Pool-的基本操作，Pool-的狀態操作" class="headerlink" title="Pool 的基本操作，Pool 的狀態操作"></a>Pool 的基本操作，Pool 的狀態操作</h3><p>這邊使用 <code>&quot;sync/atomic&quot;</code> 這個函式庫是為了方便以原子性的方式執行狀態操作，避免 data race 和一直開關鎖。</p>
<p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 獲取 Pool 容量</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Cap</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">int</span>(atomic.LoadInt32(&amp;p.capacity))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Free returns the number of available goroutines to work, -1 indicates this pool is unlimited.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Free</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	c := p.Cap()</span><br><span class="line">	<span class="keyword">if</span> c &lt; <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> c - p.Running()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Waiting returns the number of tasks which are waiting be executed.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Waiting</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">int</span>(atomic.LoadInt32(&amp;p.waiting))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 獲取正在執行的 Worker 數量</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Running</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">int</span>(atomic.LoadInt32(&amp;p.running))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">addWaiting</span><span class="params">(delta <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">	atomic.AddInt32(&amp;p.waiting, <span class="keyword">int32</span>(delta))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">addRunning</span><span class="params">(delta <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">	atomic.AddInt32(&amp;p.running, <span class="keyword">int32</span>(delta))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判斷是否被關閉</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">IsClosed</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> atomic.LoadInt32(&amp;p.state) == CLOSED</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Pool-執行任務"><a href="#Pool-執行任務" class="headerlink" title="Pool 執行任務"></a>Pool 執行任務</h3><p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 獲取 worker 執行任務</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Schedule</span><span class="params">(task <span class="keyword">func</span>()</span>) <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// 判斷Pool是否被關閉</span></span><br><span class="line">	<span class="keyword">if</span> p.IsClosed() &#123;</span><br><span class="line">		<span class="keyword">return</span> ErrPoolClosed</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> w := p.getWorker(); w != <span class="literal">nil</span> &#123;</span><br><span class="line">		w.inputFunc(task)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ErrPoolOverload</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Pool-獲取-放回-Worker"><a href="#Pool-獲取-放回-Worker" class="headerlink" title="Pool 獲取/放回 Worker"></a>Pool 獲取/放回 Worker</h3><p>一開始，可以查看看 <code>workerCache</code> 中有沒有 worker，可以節省 <code>重複初始化 worker 的操作</code>，再來就是向 worker 取用一個實例。</p>
<p>如果 worker 有 <code>正常取到</code>，那就直接返回使用。</p>
<p>如果沒有 worker，那就判斷目前 Pool 大小是否允許再創建一個 worker，可以的話就 <code>直接創建</code>。</p>
<p>若都不行，就要 <code>阻塞等待</code> 其他 worker 處理完任務後，返回 Pool 時取用。</p>
<p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 獲取 worker 執行任務</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">getWorker</span><span class="params">()</span> <span class="params">(w worker)</span></span> &#123;</span><br><span class="line">	genWorker := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> w = p.workerCache.Get().(*Worker); w == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="comment">// 新開一個worker</span></span><br><span class="line">			w = &amp;Worker&#123;</span><br><span class="line">				pool: p,</span><br><span class="line">				task: <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="function"><span class="keyword">func</span><span class="params">()</span>, <span class="title">workerChanCap</span>),</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		w.run()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 加鎖</span></span><br><span class="line">	p.lock.Lock()</span><br><span class="line">	<span class="keyword">if</span> w = p.workers.detach(); w != <span class="literal">nil</span> &#123;</span><br><span class="line">		p.lock.Unlock()</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">cap</span> := p.Cap(); <span class="built_in">cap</span> &gt; p.Running() &#123;</span><br><span class="line">		<span class="comment">// if the worker queue is empty and we don't run out of the pool capacity,</span></span><br><span class="line">		<span class="comment">// then just spawn a new worker goroutine.</span></span><br><span class="line">		p.lock.Unlock()</span><br><span class="line">		<span class="comment">// 當前無可用worker，但是Pool沒有滿</span></span><br><span class="line">		genWorker()</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123; <span class="comment">// otherwise, we'll have to keep them blocked and wait for at least one worker to be put back into pool.</span></span><br><span class="line">		<span class="keyword">if</span> p.options.Nonblocking &#123;</span><br><span class="line">			p.lock.Unlock()</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			p.addWaiting(<span class="number">1</span>)</span><br><span class="line">			<span class="comment">// 阻塞等待</span></span><br><span class="line">			p.cond.Wait()</span><br><span class="line">			p.addWaiting(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> p.IsClosed() &#123;</span><br><span class="line">				p.lock.Unlock()</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> w = p.workers.detach(); w != <span class="literal">nil</span> &#123;</span><br><span class="line">				p.lock.Unlock()</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> w == <span class="literal">nil</span> &amp;&amp; p.Free() &gt; <span class="number">0</span> &#123;</span><br><span class="line">				p.lock.Unlock()</span><br><span class="line">				genWorker()</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將 Worker 放回 Pool</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">putWorker</span><span class="params">(worker *Worker)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	<span class="comment">// 避免 Worker 超出 Pool 容量，或是 Pool 已關閉</span></span><br><span class="line">	<span class="built_in">cap</span> := p.Cap()</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">cap</span> &gt; <span class="number">0</span> &amp;&amp; p.Running() &gt; <span class="built_in">cap</span>) || p.IsClosed() &#123;</span><br><span class="line">		p.cond.Broadcast()</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 紀錄Woker最後一次運行時間</span></span><br><span class="line">	worker.lastUpdatedTime = time.Now()</span><br><span class="line"></span><br><span class="line">	p.lock.Lock()</span><br><span class="line">	<span class="keyword">defer</span> p.lock.Unlock()</span><br><span class="line">	<span class="comment">// 避免記憶體溢出</span></span><br><span class="line">	<span class="keyword">if</span> p.IsClosed() &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err := p.workers.insert(worker); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 把 Blocking 等待 worker 的 task 喚醒</span></span><br><span class="line">	p.cond.Signal()</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Pool-關閉與開啟"><a href="#Pool-關閉與開啟" class="headerlink" title="Pool 關閉與開啟"></a>Pool 關閉與開啟</h3><p><code>pool.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清除 Pool 裡面的 Worker</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Release</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> !atomic.CompareAndSwapInt32(&amp;p.state, OPENED, CLOSED) &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> p.stopClear != <span class="literal">nil</span> &#123;</span><br><span class="line">		p.stopClear()</span><br><span class="line">		p.stopClear = <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p.lock.Lock()</span><br><span class="line">	p.workers.reset()</span><br><span class="line">	p.lock.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通知阻塞的 goroutine 繼續執行</span></span><br><span class="line">	p.cond.Broadcast()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重啟一個可以使用的 Pool</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Pool)</span> <span class="title">Reboot</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> atomic.CompareAndSwapInt32(&amp;p.state, CLOSED, OPENED) &#123;</span><br><span class="line">		<span class="comment">// 重新啟用 Worker Queue</span></span><br><span class="line">		p.workers = newWorkerCircularQueue(<span class="keyword">int</span>(p.capacity), p.options.PreAlloc)</span><br><span class="line"></span><br><span class="line">		atomic.StoreInt32(&amp;p.clearDone, <span class="number">0</span>)</span><br><span class="line">		p.goClear()</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Worker-的定義"><a href="#Worker-的定義" class="headerlink" title="Worker 的定義"></a><code>Worker</code> 的定義</h3><ul>
<li><code>run()</code>：執行並等待任務派發</li>
<li><code>finish()</code>：通知 worker 休息，並不用回收</li>
<li><code>getLastUpdatedTime()</code>：獲取 worker 最近執行時間</li>
<li><code>inputFunc()</code>：添加任務至正在執行的 worker</li>
</ul>
<p><code>worker.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> grpool</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"runtime/debug"</span></span><br><span class="line">	<span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> worker <span class="keyword">interface</span> &#123;</span><br><span class="line">	run()</span><br><span class="line">	finish()</span><br><span class="line">	getLastUpdatedTime() time.Time</span><br><span class="line">	inputFunc(<span class="function"><span class="keyword">func</span><span class="params">()</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Worker <span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="comment">// 任務池</span></span><br><span class="line">	pool *Pool</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 任務 func() error</span></span><br><span class="line">	task <span class="keyword">chan</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 回收時間</span></span><br><span class="line">	lastUpdatedTime time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Worker)</span> <span class="title">run</span><span class="params">()</span></span> &#123;</span><br><span class="line">	w.pool.addRunning(<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="comment">// 回收 Pool 失敗或 worker 發生錯誤</span></span><br><span class="line">		<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">			w.pool.addRunning(<span class="number">-1</span>)</span><br><span class="line">			<span class="comment">// worker 放 cache 可以不用重新初始化</span></span><br><span class="line">			w.pool.workerCache.Put(w)</span><br><span class="line">			<span class="keyword">if</span> p := <span class="built_in">recover</span>(); p != <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> ph := w.pool.options.PanicHandler; ph != <span class="literal">nil</span> &#123;</span><br><span class="line">					ph(p)</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					fmt.Printf(<span class="string">"worker exited from panic: %v\n%s\n"</span>, p, debug.Stack())</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 喚醒 Blocking 的 task</span></span><br><span class="line">			w.pool.cond.Signal()</span><br><span class="line">		&#125;()</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 監聽任務列表，有任務就拿出來執行</span></span><br><span class="line">		<span class="keyword">for</span> f := <span class="keyword">range</span> w.task &#123;</span><br><span class="line">			<span class="comment">// 被 finish()</span></span><br><span class="line">			<span class="keyword">if</span> f == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 執行任務</span></span><br><span class="line">			f()</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 回收worker</span></span><br><span class="line">			<span class="keyword">if</span> ok := w.pool.putWorker(w); !ok &#123;</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Worker)</span> <span class="title">finish</span><span class="params">()</span></span> &#123;</span><br><span class="line">	w.task &lt;- <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Worker)</span> <span class="title">getLastUpdatedTime</span><span class="params">()</span> <span class="title">time</span>.<span class="title">Time</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> w.lastUpdatedTime</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Worker)</span> <span class="title">inputFunc</span><span class="params">(fn <span class="keyword">func</span>()</span>)</span> &#123;</span><br><span class="line">	w.task &lt;- fn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Worker-Queue-的實現"><a href="#Worker-Queue-的實現" class="headerlink" title="Worker Queue 的實現"></a><code>Worker Queue</code> 的實現</h3><ul>
<li><code>len()</code>：獲取目前 worker 在 Queue 中的數量</li>
<li><code>isEmpty()</code>：判斷目前 Queue 中是否為空</li>
<li><code>insert()</code>：插入一個 worker 至 Queue 裡</li>
<li><code>detach()</code>：從 Queue 獲取一個 worker</li>
<li><code>refresh()</code>：清理 Queue 中 過期的 worker</li>
<li><code>reset()</code>：重置整個 Queue</li>
</ul>
<p><code>worker_circular_queue.go</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> grpool</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"errors"</span></span><br><span class="line">	<span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	<span class="comment">// Queue 滿了</span></span><br><span class="line">	errQueueIsFull = errors.New(<span class="string">"the circular queue is full"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Queue 已經關閉了</span></span><br><span class="line">	errQueueIsReleased = errors.New(<span class="string">"the circular queue length is zero"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> workerQueue <span class="keyword">interface</span> &#123;</span><br><span class="line">	<span class="built_in">len</span>() <span class="keyword">int</span></span><br><span class="line">	isEmpty() <span class="keyword">bool</span></span><br><span class="line">	insert(worker) error</span><br><span class="line">	detach() worker</span><br><span class="line">	refresh(duration time.Duration) []worker</span><br><span class="line">	reset()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// workerQueue 的實現</span></span><br><span class="line"><span class="keyword">type</span> circularQueue <span class="keyword">struct</span> &#123;</span><br><span class="line">	items      []worker</span><br><span class="line">	expiry     []worker</span><br><span class="line">	head       <span class="keyword">int</span></span><br><span class="line">	tail       <span class="keyword">int</span></span><br><span class="line">	size       <span class="keyword">int</span></span><br><span class="line">	isFull     <span class="keyword">bool</span></span><br><span class="line">	isPreAlloc <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 WorkerCircularQueue</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newWorkerCircularQueue</span><span class="params">(size <span class="keyword">int</span>, preAlloc <span class="keyword">bool</span>)</span> *<span class="title">circularQueue</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> preAlloc &#123;</span><br><span class="line">		<span class="keyword">return</span> &amp;circularQueue&#123;</span><br><span class="line">			items:      <span class="built_in">make</span>([]worker, size),</span><br><span class="line">			size:       size,</span><br><span class="line">			isPreAlloc: preAlloc,</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;circularQueue&#123;</span><br><span class="line">		items:      <span class="built_in">make</span>([]worker, <span class="number">0</span>, size),</span><br><span class="line">		size:       size,</span><br><span class="line">		isPreAlloc: preAlloc,</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 獲取 Queue 長度，因為是 Loop Queue，所以會有 head 指標 &gt; tail 指標的情況很正常</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">len</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="comment">// size == 0 || 頭尾一樣卻沒滿</span></span><br><span class="line">	<span class="keyword">if</span> wq.size == <span class="number">0</span> || wq.isEmpty() &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 頭尾一樣滿了</span></span><br><span class="line">	<span class="keyword">if</span> wq.head == wq.tail &amp;&amp; wq.isFull &#123;</span><br><span class="line">		<span class="keyword">return</span> wq.size</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> wq.tail &gt; wq.head &#123;</span><br><span class="line">		<span class="keyword">return</span> wq.tail - wq.head</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> wq.size - wq.head + wq.tail</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判斷 Queue 是否為空</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">isEmpty</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> wq.head == wq.tail &amp;&amp; !wq.isFull</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入一個 worker 進入 Queue</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">insert</span><span class="params">(w worker)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// Pool 已經被關閉</span></span><br><span class="line">	<span class="keyword">if</span> wq.size == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> errQueueIsReleased</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Pool 已經滿了</span></span><br><span class="line">	<span class="keyword">if</span> wq.isFull &#123;</span><br><span class="line">		<span class="keyword">return</span> errQueueIsFull</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 增加 Worker</span></span><br><span class="line">	<span class="comment">// 如果</span></span><br><span class="line">	<span class="keyword">if</span> !wq.isPreAlloc &amp;&amp; <span class="built_in">cap</span>(wq.items) &lt; wq.size &#123;</span><br><span class="line">		wq.items = <span class="built_in">append</span>(wq.items, w)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		wq.items[wq.tail] = w</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 如果 tail == size，讓 tail 變 0</span></span><br><span class="line">	wq.tail = (wq.tail + <span class="number">1</span>) % wq.size</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 如果 tail == head 代表滿了</span></span><br><span class="line">	<span class="keyword">if</span> wq.tail == wq.head &#123;</span><br><span class="line">		wq.isFull = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 從 Queue 獲取一個 worker</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">detach</span><span class="params">()</span> <span class="title">worker</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> wq.isEmpty() &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 獲取一個 Worker</span></span><br><span class="line">	w := wq.items[wq.head]</span><br><span class="line">	wq.items[wq.head] = <span class="literal">nil</span> <span class="comment">// 避免記憶體溢出</span></span><br><span class="line">	<span class="comment">// 如果 head == size，讓 head 變 0</span></span><br><span class="line">	wq.head = (wq.head + <span class="number">1</span>) % wq.size</span><br><span class="line"></span><br><span class="line">	wq.isFull = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> w</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新整理 Queue，用於清理過期的 worker</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">refresh</span><span class="params">(duration time.Duration)</span> []<span class="title">worker</span></span> &#123;</span><br><span class="line">	expiryTime := time.Now().Add(-duration)</span><br><span class="line">	<span class="comment">// 獲取過期 worker 的 index</span></span><br><span class="line">	index := wq.binarySearch(expiryTime)</span><br><span class="line">	<span class="keyword">if</span> index == <span class="number">-1</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	wq.expiry = wq.expiry[:<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> wq.head &lt;= index &#123;</span><br><span class="line">		<span class="comment">// 找出從"頭"到 "index" 的 worker，因為 FIFO 的關係，越前面的沒有被使用代表有一端時間未使用了</span></span><br><span class="line">		wq.expiry = <span class="built_in">append</span>(wq.expiry, wq.items[wq.head:index+<span class="number">1</span>]...)</span><br><span class="line">		<span class="keyword">for</span> i := wq.head; i &lt; index+<span class="number">1</span>; i++ &#123;</span><br><span class="line">			wq.items[i] = <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// E.g. size = 10, tail = 5, head = 8 的狀態</span></span><br><span class="line">		<span class="comment">// 假設 index 是 3，那麼 8~9 和 0~3 的 worker 都要被清理，剩下 index 為 4, 5 的 worker</span></span><br><span class="line">		wq.expiry = <span class="built_in">append</span>(wq.expiry, wq.items[<span class="number">0</span>:index+<span class="number">1</span>]...)</span><br><span class="line">		wq.expiry = <span class="built_in">append</span>(wq.expiry, wq.items[wq.head:]...)</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; index+<span class="number">1</span>; i++ &#123;</span><br><span class="line">			wq.items[i] = <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> i := wq.head; i &lt; wq.size; i++ &#123;</span><br><span class="line">			wq.items[i] = <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 清理過後，重新分配 head</span></span><br><span class="line">	head := (index + <span class="number">1</span>) % wq.size</span><br><span class="line">	wq.head = head</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(wq.expiry) &gt; <span class="number">0</span> &#123;</span><br><span class="line">		wq.isFull = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 返回這些過期 worker 要讓 pool 去手動 finish 它</span></span><br><span class="line">	<span class="keyword">return</span> wq.expiry</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二元搜尋，找出過期的 worker</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">binarySearch</span><span class="params">(expiryTime time.Time)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> mid, nlen, basel, tmid <span class="keyword">int</span></span><br><span class="line">	nlen = <span class="built_in">len</span>(wq.items)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// if no need to remove work, return -1</span></span><br><span class="line">	<span class="keyword">if</span> wq.isEmpty() || expiryTime.Before(wq.items[wq.head].getLastUpdatedTime()) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// example</span></span><br><span class="line">	<span class="comment">// size = 8, head = 7, tail = 4</span></span><br><span class="line">	<span class="comment">// [ 2, 3, 4, 5, nil, nil, nil,  1]  true position</span></span><br><span class="line">	<span class="comment">//   0  1  2  3    4   5     6   7</span></span><br><span class="line">	<span class="comment">//              tail          head</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">//   1  2  3  4  nil nil   nil   0   mapped position</span></span><br><span class="line">	<span class="comment">//            r                  l</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// base algorithm is a copy from worker_stack</span></span><br><span class="line">	<span class="comment">// map head and tail to effective left and right</span></span><br><span class="line">	r := (wq.tail - <span class="number">1</span> - wq.head + nlen) % nlen</span><br><span class="line">	basel = wq.head</span><br><span class="line">	l := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> l &lt;= r &#123;</span><br><span class="line">		mid = l + ((r - l) &gt;&gt; <span class="number">1</span>)</span><br><span class="line">		<span class="comment">// calculate true mid position from mapped mid position</span></span><br><span class="line">		tmid = (mid + basel + nlen) % nlen</span><br><span class="line">		<span class="keyword">if</span> expiryTime.Before(wq.items[tmid].getLastUpdatedTime()) &#123;</span><br><span class="line">			r = mid - <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			l = mid + <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// return true position from mapped position</span></span><br><span class="line">	<span class="keyword">return</span> (r + basel + nlen) % nlen</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 當 Pool 被 Release 後，就會觸發此方法，將所有 Worker queue 清理</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wq *circularQueue)</span> <span class="title">reset</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> wq.isEmpty() &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 逐一把 goroutin 解決</span></span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> w := wq.detach(); w != <span class="literal">nil</span> &#123;</span><br><span class="line">			w.finish()</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	wq.items = wq.items[:<span class="number">0</span>]</span><br><span class="line">	wq.expiry = wq.expiry[:<span class="number">0</span>]</span><br><span class="line">	wq.size = <span class="number">0</span></span><br><span class="line">	wq.head = <span class="number">0</span></span><br><span class="line">	wq.tail = <span class="number">0</span></span><br><span class="line">	wq.isFull = <span class="literal">false</span></span><br><span class="line">	wq.isPreAlloc = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Benchmark"><a href="#Benchmark" class="headerlink" title="Benchmark"></a>Benchmark</h2><h3 id="10萬個任務，10萬個-worker"><a href="#10萬個任務，10萬個-worker" class="headerlink" title="10萬個任務，10萬個 worker"></a>10萬個任務，10萬個 worker</h3><p><img src="/images/Build-A-Goroutine-Pool/100000_100000.png" alt=""></p>
<h3 id="100萬個任務，10萬個-worker"><a href="#100萬個任務，10萬個-worker" class="headerlink" title="100萬個任務，10萬個 worker"></a>100萬個任務，10萬個 worker</h3><p><img src="/images/Build-A-Goroutine-Pool/1000000_100000.png" alt=""></p>
<h3 id="1000萬個任務，10萬個-worker"><a href="#1000萬個任務，10萬個-worker" class="headerlink" title="1000萬個任務，10萬個 worker"></a>1000萬個任務，10萬個 worker</h3><p><img src="/images/Build-A-Goroutine-Pool/10000000_100000.png" alt=""></p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>本篇文章是參考<span class="exturl" data-url="aHR0cHM6Ly9zdHJpa2VmcmVlZG9tLnRvcC9hcmNoaXZlcy9oaWdoLXBlcmZvcm1hbmNlLWltcGxlbWVudGF0aW9uLW9mLWdvcm91dGluZS1wb29sI3RvYy1oZWFkLTMx">潘少 - GMP 并发调度器深度解析之手撸一个高性能 goroutine pool<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tLzE3bGl2ZS10ZWNoLyVFOSU4MiVBMyVFNCVCQSU5QiVFNSVCOSVCNCVFNiU4OCU5MSVFNSU4MCU5MSVFOCVCRiVCRCVFNyU5QSU4NC1nb3JvdXRpbmUtcG9vbC1lOGQyMTE3NTdlZQ==">Viney Tai-Li Shih - 那些年我們追的 Goroutine Pool<i class="fa fa-external-link-alt"></i></span> 進而實現的 goroutine pool，通過 <code>限制 goroutines 數量</code>、 <code>重複使用 goroutines</code> 來達到效能的提升。</p>
<p>其中，我將一般的 <code>stack</code> 方式改成使用 <code>circular queue</code> 進而避免陣列中不斷對記憶體申請產生損耗，在大量任務要執行的時候有產生一定的作用。</p>
<p>在 benchmark 中，同等 worker 處理同等任務時可以獲得更快處理時間(<code>20%</code>)、更少的記憶體使用空間(<code>1000%</code>)，但是當任務數量大於 worker 數量時，處理時間就會開始變慢(<code>-30%</code>)，記憶體人仍然保持著一定的優勢。或許，變慢可能是我在設計的時候處理鎖處理的不適很恰當的原因。</p>
<blockquote>
<p>本文範例程式碼在 GitHub 上的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9ncnBvb2w=">POABOB/grpool<i class="fa fa-external-link-alt"></i></span>。</p>
</blockquote>
<h2 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻"></a>參考文獻</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9zdHJpa2VmcmVlZG9tLnRvcC9hcmNoaXZlcy9oaWdoLXBlcmZvcm1hbmNlLWltcGxlbWVudGF0aW9uLW9mLWdvcm91dGluZS1wb29sI3RvYy1oZWFkLTE4">https://strikefreedom.top/archives/high-performance-implementation-of-goroutine-pool#toc-head-18<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BhbmpmMjAwMC9hbnRz">https://github.com/panjf2000/ants<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xOTE4MjM2">https://cloud.tencent.com/developer/article/1918236<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhZGZvZy5jb20vYS8xNjMxMjg3MTg2NDk4MzU5Mjk2">https://www.readfog.com/a/1631287186498359296<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tLzE3bGl2ZS10ZWNoLyVFOSU4MiVBMyVFNCVCQSU5QiVFNSVCOSVCNCVFNiU4OCU5MSVFNSU4MCU5MSVFOCVCRiVCRCVFNyU5QSU4NC1nb3JvdXRpbmUtcG9vbC1lOGQyMTE3NTdlZQ==">https://medium.com/17live-tech/%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E5%80%91%E8%BF%BD%E7%9A%84-goroutine-pool-e8d211757ee<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>go</tag>
        <tag>Backend</tag>
        <tag>goroutine</tag>
        <tag>goroutine-pool</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 PHP Slim 4 建立一個 RESTful 框架 (進階篇)</title>
    <url>/2022-09-02/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>藉由 <a href="https://poabob.github.io/2022-07-28/Build-a-PHP-RESTful-Framework-using-Slim-4-Part1/">基礎篇</a> 所提供的簡單範例，我們可以發現如果我們把每個路由都寫成一個<code>閉包(Closure)</code>的形式，很容易導致程式碼<code>不易閱讀</code>，並且把所有資料都寫在一個檔案非常難以去釐清 RESTful API <code>服務的類型</code>和<code>相關的依賴類</code>。</p>
<p>所以本篇將要介紹如何將 SLIM 4 構建成一個屬於 <code>ADR 模式</code>的一個框架，構建之前也會介紹傳統 <code>MVC 框架</code>的架構，之後再來講解如何使用 <code>JWT</code> 如何用作<code>登入後產生 Token</code> 並且<code>驗證其身份資訊</code>。</p>
</blockquote>
<a id="more"></a> 

<ul>
<li>以下我構想這個框架要符合什麼條件:<ol>
<li>基於 ADR 模式</li>
<li>要有一個基礎的 ORM(可以不用 Migration)</li>
<li>要有 Jwt 功能</li>
<li>能夠輕鬆寫單元測試、E2E 測試</li>
<li>要使用 Docker 一鍵啟動</li>
<li>使用 Github Actions CI / CD</li>
</ol>
</li>
</ul>
<ul>
<li>本篇主要是參考 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbQ==">Fogless<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltNC1idWlsZC1yZXN0ZnVsLWFwaS8jY3JlYXRlLXNsaW0tYXBwbGljYXRpb24=">Slim 4 搭建 RESTful API<i class="fa fa-external-link-alt"></i></span> 以及 <span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9kb3BpdHo=">Daniel Opitz<i class="fa fa-external-link-alt"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly9vZGFuLmdpdGh1Yi5pby8yMDE5LzExLzA1L3NsaW00LXR1dG9yaWFsLmh0bWw=">Slim 4 - Tutorial<i class="fa fa-external-link-alt"></i></span>，並且結合自身所學，再根據個人習慣建構。進階篇的建構方向是藉由基礎篇的基礎，將 Slim 4 的 <code>ADR 框架</code>建立完成，並且實現 <code>表單驗證</code>、<code>統一回應格式</code>、<code>Jwt</code>、<code>登入登出</code>功能。</li>
</ul>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="本機最低需求"><a href="#本機最低需求" class="headerlink" title="本機最低需求"></a>本機最低需求</h3><ul>
<li>PHP 8.0 (目前沒有使用 php-7.4 實測過，所以希望至少可以 8.0 以上)</li>
<li>Composer</li>
<li>Docker、Docker-Compose<ul>
<li>Nginx </li>
<li>PHP 8.1</li>
<li>MariaDB</li>
</ul>
</li>
</ul>
<h3 id="安裝相關依賴"><a href="#安裝相關依賴" class="headerlink" title="安裝相關依賴"></a>安裝相關依賴</h3><ul>
<li>我們先將基礎篇的範例程式碼 <code>clone</code> 下來命名成新專案 <code>Slim-ADR</code>，然後將相關依賴先安裝。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone 基礎篇專案</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/POABOB/Slim-Simple.git</span><br><span class="line"><span class="comment"># 重新命名</span></span><br><span class="line">mv Slim-Simple Slim-ADR</span><br><span class="line"><span class="comment"># 安裝相關依賴</span></span><br><span class="line">composer install</span><br><span class="line"><span class="comment"># 將 .env.example 改名 .env</span></span><br><span class="line">mv .env.example .env</span><br></pre></td></tr></table></figure>

<h2 id="建構-RESTful-API"><a href="#建構-RESTful-API" class="headerlink" title="建構 RESTful API"></a>建構 RESTful API</h2><h3 id="PSR-4"><a href="#PSR-4" class="headerlink" title="PSR-4"></a>PSR-4</h3><ul>
<li><code>PSR-4 Autoloader</code> 是用來告訴開發者如何架構專案的<code>目錄結構</code>及<code>命名空間</code>，遵循這個規範並搭配 Composer 提供的 <code>autoload</code> 的功能，就可以<code>將 PHP 檔案進行自動加載</code>，而不用一直使用 <code>require</code>。</li>
<li>我們要自動加載的目錄為 <code>src</code>、<code>tests</code> (請順便建立)，<code>src</code> 目錄是用來存放我們 RESRful API的程式碼，<code>tests</code> 則是我們用來撰寫軟體測試時所用的目錄。</li>
<li>當我們把 <code>autoload</code> 的<code>位置</code>和<code>命名變數</code>設定好之後，完整檔案應該如下呈現：</li>
</ul>
<p><code>composer.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"poabob/slim-adr"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"project"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"A Simple Restful PHP Microservice Framework!"</span>,</span><br><span class="line">    <span class="attr">"homepage"</span>: <span class="string">"https://github.com/POABOB/Slim-ADR"</span>,</span><br><span class="line">    <span class="attr">"authors"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"POABOB"</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"zxc752166@gmail.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"keywords"</span>: [</span><br><span class="line">        <span class="string">"slim-simple"</span>,</span><br><span class="line">        <span class="string">"slim"</span>,</span><br><span class="line">        <span class="string">"slim4"</span>,</span><br><span class="line">        <span class="string">"slim-4"</span>,</span><br><span class="line">        <span class="string">"nginx"</span>,</span><br><span class="line">        <span class="string">"microservice"</span>,</span><br><span class="line">        <span class="string">"restful"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">    <span class="attr">"require"</span>: &#123;</span><br><span class="line">        <span class="attr">"php"</span>: <span class="string">"&gt;=8.0"</span>,</span><br><span class="line">        <span class="attr">"catfan/medoo"</span>: <span class="string">"^2.1"</span>,</span><br><span class="line">        <span class="attr">"php-di/php-di"</span>: <span class="string">"^6.4"</span>,</span><br><span class="line">        <span class="attr">"selective/basepath"</span>: <span class="string">"^2.1"</span>,</span><br><span class="line">        <span class="attr">"slim/http"</span>: <span class="string">"^1.0"</span>,</span><br><span class="line">        <span class="attr">"slim/psr7"</span>: <span class="string">"^1.0"</span>,</span><br><span class="line">        <span class="attr">"slim/slim"</span>: <span class="string">"^4.10"</span>,</span><br><span class="line">        <span class="attr">"symfony/dotenv"</span>: <span class="string">"^6.0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"config"</span>: &#123;</span><br><span class="line">        <span class="attr">"process-timeout"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"sort-packages"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"App\\"</span>: <span class="string">"src"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload-dev"</span>: &#123;</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"App\\Test\\"</span>: <span class="string">"tests"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="MVC-模式"><a href="#MVC-模式" class="headerlink" title="MVC 模式"></a>MVC 模式</h3><ul>
<li>什麼是 <code>MVC</code> 呢?我們可以先由以下流程圖來了解 <code>MVC</code> 的運作模式。</li>
</ul>
<p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/mvc.png" alt="mvc"></p>
<ol>
<li>每當我們 <code>Client</code> 向 <code>Server</code> 傳遞請求的時候，首先會被先由<code>路由(Route)</code>來去攔截，攔截這份請求解析他的 <code>HTTP Method</code> 和 <code>URI</code>。</li>
<li>路由找到對應的<code>控制器(Controller)</code>，一個控制器通常會有多個類型相同的 <code>Action</code> 操作。</li>
<li>去執行該控制器的 <code>Action</code> 處理我們想要做的事情，這裡通常會做一些<code>業務邏輯</code>、<code>表單驗證</code>的事情。</li>
<li>如果該 <code>Action</code> 會使用到資料庫的話，控制器不能執行資料庫操作，而是要讓 <code>Model</code> 來去做 DB 的 <code>CRUD</code>。</li>
<li><code>Model</code> 將會與資料庫建立連線，並且把 SQL 語法當作溝通工具與資料庫溝通。</li>
<li>從資料庫操作完我們要做的事情後，返回結果給 <code>Model</code>。</li>
<li><code>Model</code> 將結果返回給<code>控制器</code>，這邊可以做<code>資料相關的處理</code>。</li>
<li><code>控制器</code>將我們所拿到的資料或結果渲染在 <code>View</code> 當中。</li>
<li>最後把 <code>View</code> 的渲染結果返回給 <code>Client</code>。</li>
</ol>
<ul>
<li>MVC 結論</li>
</ul>
<table>
<thead>
<tr>
<th>名稱</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>Controller</td>
<td>檢查請求的資料<code>是否符合規範</code>、<code>業務處理</code>、資料庫返回<code>資料的格式處理</code>、連接 <code>Model</code> 和 <code>View</code> 的主幹</td>
</tr>
<tr>
<td>Model</td>
<td><code>資料庫溝通</code></td>
</tr>
<tr>
<td>View</td>
<td>將結果<code>渲染</code>到我們的視圖給 Client</td>
</tr>
</tbody></table>
<h3 id="ADR-模式"><a href="#ADR-模式" class="headerlink" title="ADR 模式"></a>ADR 模式</h3><ul>
<li>我們可以看到 <code>MVC</code> 雖然是一個非常完整且成熟的架構，但依然看得到幾樣缺點。<ol>
<li><code>Controller</code> 負載的工作量太大，寫久了容易導致 <code>Controller</code> 裡面的 <code>Action</code> 複雜且難以閱讀。</li>
<li>現行比較流行前後端分離的架構(SPA)，導致 <code>View</code> 在 <code>RESTful API</code> 中沒有什麼存在的必要性。</li>
</ol>
</li>
<li>因此，進而產生了 <code>ADR</code>(Action - Domain - Responder)這個模式，<code>Action</code> 主要是將 <code>Controller</code> 中的 <code>Action</code> 獨立出來成一個單獨的檔案，一個 <code>Action</code> 就<code>只負責一件事情</code>，並且他只處理<code>請求</code>和<code>回應</code>兩項操作。<code>Domain</code> 則包含了兩種操作，一個是 <code>Service</code>，另外一個則是 <code>Repository</code>。基本上一個 <code>Action</code> 會對應一個獨立的 <code>Service</code>，而 <code>Service</code> 就是用來切割原本在 <code>Controller</code> 大量的工作。<code>Repository</code> 則是與原先 <code>Model</code> 非常類似並且裡面會有多種資料庫操作。</li>
</ul>
<p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/adr.png" alt="adr"></p>
<ul>
<li>ADR 結論</li>
</ul>
<table>
<thead>
<tr>
<th>名稱</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>Action</td>
<td>負責處理<code>請求</code>和<code>回應</code></td>
</tr>
<tr>
<td>Service</td>
<td>檢查請求的資料<code>是否符合規範</code>、<code>業務處理</code>、資料庫返回<code>資料的格式處理</code></td>
</tr>
<tr>
<td>Repository</td>
<td><code>資料庫溝通</code></td>
</tr>
</tbody></table>
<h3 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h3><ul>
<li>我們先 <code>src</code> 目錄之中建立一個 <code>Action</code>目錄。</li>
<li>並且在 <code>src/Action</code> 建立一個專門給 <code>Users</code> 的資料夾 <code>src/Action/Users</code>。</li>
<li>然後建立四個檔案，分別是 <code>src/Action/Users/GetAction.php</code>、<code>src/Action/Users/InsertAction.php</code>、<code>src/Action/Users/UpdateAction.php</code>、<code>src/Action/Users/DeleteAction.php</code>。</li>
<li>目錄大概會如下圖：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── src/ </span><br><span class="line">|   ├── Actions/</span><br><span class="line">|   |   └── Users/</span><br><span class="line">|   |       ├── GetAction.php</span><br><span class="line">|   |       ├── InsertAction.php</span><br><span class="line">|   |       ├── UpdateAction.php</span><br><span class="line">|   |       └── DeleteAction.php</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><code>src/Action/Users/GetAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Users</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>\<span class="title">GetService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GetAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> GetService $service;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(GetService $service)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $request, Response $response)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 請求 Service</span></span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;service-&gt;getUsers();</span><br><span class="line">    <span class="keyword">return</span> $response-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Action/Users/InsertAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Users</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>\<span class="title">InsertService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> InsertService $service;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(InsertService $service)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $request, Response $response)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 獲取請求的Body</span></span><br><span class="line">    $data = (<span class="keyword">array</span>)$request-&gt;getParsedBody();</span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;service-&gt;insertUser($data);</span><br><span class="line">    <span class="keyword">return</span> $response-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Action/Users/UpdateAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Users</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>\<span class="title">UpdateService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UpdateService $service;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UpdateService $service)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $request, Response $response)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 獲取請求的Body</span></span><br><span class="line">    $data = (<span class="keyword">array</span>)$request-&gt;getParsedBody();</span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;service-&gt;updateUser($data);</span><br><span class="line">    <span class="keyword">return</span> $response-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Action/Users/DeleteAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Users</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>\<span class="title">DeleteService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> DeleteService $service;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(DeleteService $service)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $request, Response $response)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 獲取請求的Body</span></span><br><span class="line">    $data = (<span class="keyword">array</span>)$request-&gt;getParsedBody();</span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;service-&gt;deleteUser($data);</span><br><span class="line">    <span class="keyword">return</span> $response-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><ul>
<li>在我們上方的四個 <code>Action</code> 可以看到，每個 <code>Action</code> 都向一個獨立的 <code>Service</code> 請求結果，並且將結果返回。</li>
<li>那我們可以建立 <code>src/Domain/Users/Service</code> 和 <code>src/Domain/Users/Repository</code> 兩種路徑目錄當作我們 <code>Users</code> 的 <code>Domain</code>。</li>
<li>然後在目錄中建立四個檔案，分別是 <code>src/Domain/Users/Service/GetService.php</code>、<code>src/Domain/Users/Service/InsertService.php</code>、<code>src/Domain/Users/Service/UpdateService.php</code>、<code>src/Domain/Users/Service/DeleteService.php</code>。</li>
<li>目錄大概會如下圖：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── src/ </span><br><span class="line">|   ├── Domain/     </span><br><span class="line">|   |   └── Users/</span><br><span class="line">|   |       ├── Repository/</span><br><span class="line">|   |       └── Service/</span><br><span class="line">|   |           ├── GetService.php</span><br><span class="line">|   |           ├── InsertService.php</span><br><span class="line">|   |           ├── UpdateService.php</span><br><span class="line">|   |           └── DeleteService.php</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><code>src/Domain/Users/Service/GetService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GetService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UsersRepository $db;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $db)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUsers</span><span class="params">()</span>: <span class="title">array</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 請求 Repository</span></span><br><span class="line">    $param = <span class="string">"*"</span>;</span><br><span class="line">    $where = <span class="number">1</span>;</span><br><span class="line">    $data = <span class="keyword">$this</span>-&gt;db-&gt;getUsers($param, $where);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Users/Service/InsertService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UsersRepository $db;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $db)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertUser</span><span class="params">(array $data)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 請求 Repository</span></span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;db-&gt;insertUser($data);</span><br><span class="line">    <span class="keyword">return</span> $return;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Users/Service/UpdateService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UsersRepository $db;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $db)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateUser</span><span class="params">(array $data)</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 請求 Repository</span></span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;db-&gt;updateUser(</span><br><span class="line">      [<span class="string">"name"</span> =&gt; $data[<span class="string">"name"</span>]],</span><br><span class="line">      [<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> $return;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Users/Service/DeleteService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> UsersRepository $db;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $db)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteUser</span><span class="params">(array $data)</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 請求 Repository</span></span><br><span class="line">    $return = <span class="keyword">$this</span>-&gt;db-&gt;deleteUser([<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]);</span><br><span class="line">    <span class="keyword">return</span> $return;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><ul>
<li>每個 <code>Service</code> 都會統一向 <code>Repository</code> 請求資料庫操作。</li>
<li>我們在目錄中建立 <code>src/Domain/Users/Repository/UsersRepository.php</code> 讓我們操作資料庫。</li>
<li>目錄大概會如下圖：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── src/ </span><br><span class="line">|   ├── Domain/     </span><br><span class="line">|   |   └── Users/</span><br><span class="line">|   |       └── Repository/</span><br><span class="line">|   |           └── UsersRepository.php</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><code>src/Domain/Users/Repository/UsersRepository.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">UnexpectedValueException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Medoo</span>\<span class="title">Medoo</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersRepository</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Medoo $DB 連線 */</span></span><br><span class="line">  <span class="keyword">private</span> Medoo $db;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Medoo $DB 連線</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Medoo $db)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 獲取Users</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array|string 欄位</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array|int WHERE條件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> string 表名</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUsers</span><span class="params">(array | string $params = <span class="string">"*"</span>, array | int $where = <span class="number">1</span>, string $table = <span class="string">"Users"</span>)</span>: <span class="title">array</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;db-&gt;select($table, $params, $where);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedValueException($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 插入User</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array 欄位</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> string 表名</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertUser</span><span class="params">(array $params = [], string $table = <span class="string">"Users"</span>)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;db-&gt;insert($table, $params);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;db-&gt;id();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedValueException($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 更新User</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array 欄位</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array WHERE條件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> string 表名</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateUser</span><span class="params">(array $params = [], array $where = [], string $table = <span class="string">"Users"</span>)</span>: <span class="title">void</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;db-&gt;update($table, $params, $where);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedValueException($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 刪除User</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array WHERE條件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> string 表名</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteUser</span><span class="params">(array $where = [], string $table = <span class="string">"Users"</span>)</span>: <span class="title">void</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;db-&gt;delete($table, $where);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedValueException($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><ul>
<li>請修改我們 <code>Slim-ADR</code> 中的 <code>config/routes.php</code> 和 <code>config/bootstrap.php</code>。</li>
</ul>
<p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="comment">// 發現使用Slim\Http\Request常常會報錯，所以使用官方的Request當作請求</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Routing</span>\<span class="title">RouteCollectorProxy</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span> </span>&#123;</span><br><span class="line">  $app-&gt;options(<span class="string">"[&#123;routes.*&#125;]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; <span class="keyword">return</span> $res; &#125;);</span><br><span class="line"></span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $app-&gt;get(<span class="string">"/home[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson(<span class="string">"GET HOME"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $app-&gt;get(<span class="string">"/home/&#123;name&#125;[/]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; </span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson(<span class="string">"GET Hello &#123;$args['name']&#125;!"</span>, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 相對原本基礎篇的寫法，更加精簡且可以清楚知道他是負責處理 Users 的 API </span></span><br><span class="line">    $app-&gt;group(<span class="string">"/user"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line">      $app-&gt;get(<span class="string">"[/]"</span>, \App\Action\Users\GetAction::class);</span><br><span class="line">      $app-&gt;post(<span class="string">"[/]"</span>, \App\Action\Users\InsertAction::class);</span><br><span class="line">      $app-&gt;patch(<span class="string">"[/]"</span>, \App\Action\Users\UpdateAction::class);</span><br><span class="line">      $app-&gt;delete(<span class="string">"[/]"</span>, \App\Action\Users\DeleteAction::class);</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><code>config/bootstrap.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">DI</span>\<span class="title">ContainerBuilder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Dotenv</span>\<span class="title">Dotenv</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">App</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 註冊我們設定好的CLASS</span></span><br><span class="line">$containerBuilder = <span class="keyword">new</span> ContainerBuilder();</span><br><span class="line">$containerBuilder-&gt;addDefinitions(<span class="keyword">__DIR__</span> . <span class="string">'/container.php'</span>);</span><br><span class="line">$container = $containerBuilder-&gt;build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// LOAD .ENV</span></span><br><span class="line">$dotenv = $container-&gt;get(Dotenv::class);</span><br><span class="line">$dotenv-&gt;load(<span class="keyword">__DIR__</span>.<span class="string">'/../.env'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立App INSTANCE</span></span><br><span class="line">$app = $container-&gt;get(App::class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中間件</span></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/middleware.php'</span>)($app);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將原本 $db instance 刪除，資料庫操作統一給 Reopsitory 管理</span></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">(<span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/routes.php'</span>)($app);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $app;</span><br></pre></td></tr></table></figure>


<h2 id="表單驗證和統一回應格式"><a href="#表單驗證和統一回應格式" class="headerlink" title="表單驗證和統一回應格式"></a>表單驗證和統一回應格式</h2><p>當我們設計好一個 ADR 模式的架構之後，肯定會有一些小問題，比如說：要怎麼<code>檢驗 Client 傳遞過來的資料</code>，或是<code>回應</code>的時候要怎麼<code>統一格式</code>，讓前端可以判斷該項<code>請求</code>是否為<code>正確操作</code>。</p>
<h3 id="表單驗證"><a href="#表單驗證" class="headerlink" title="表單驗證"></a>表單驗證</h3><p>那麼<code>表單驗證</code>就誕生了，表單驗證顧名思義就是檢驗傳遞的資料型別是否符合後端需求，如果可以就放行操作，不行則返回哪些傳遞的資料是有問題的。以下是我自己封裝的表單驗證，此依賴存放在 <code>src/Utils</code> 之中。</p>
<p><code>src/Utils/Validation.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Utils</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Validation</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="comment">// 存放錯誤的陣列</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">array</span> $_errors = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 驗證</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validate</span><span class="params">(array $src = [], array $rules = [])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($src <span class="keyword">as</span> $item =&gt; $item_value) &#123;</span><br><span class="line">      <span class="keyword">if</span>(key_exists($item, $rules)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($rules[$item] <span class="keyword">as</span> $rule =&gt; $rule_value)&#123;</span><br><span class="line">          <span class="keyword">if</span>(is_int($rule)) &#123;</span><br><span class="line">            $rule = $rule_value;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">switch</span> ($rule)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 無法為空</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'required'</span>:</span><br><span class="line">              <span class="keyword">if</span>(<span class="keyword">empty</span>($item_value) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="comment">//empty缺點 0 false會返回true</span></span><br><span class="line">                <span class="keyword">if</span>($item_value === <span class="number">0</span> || $item_value === <span class="keyword">false</span> || $item_value === <span class="string">'0'</span> || $item_value === <span class="number">0.00</span>) &#123;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item,ucwords($item). <span class="string">' 無法為空'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 最小長度</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'minLen'</span>:</span><br><span class="line">              <span class="keyword">if</span>(mb_strlen((string)$item_value) &lt; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 最小長度應為 '</span>.$rule_value. <span class="string">' 個字元'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 最大長度</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'maxLen'</span>:</span><br><span class="line">              <span class="keyword">if</span>(mb_strlen((string)$item_value) &gt; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 最大長度應為 '</span>.$rule_value. <span class="string">' 個字元'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 是否為數字</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'numeric'</span>:</span><br><span class="line">              <span class="keyword">if</span>(!is_numeric($item_value) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 應為數字'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 是否為浮點數</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'float'</span>:</span><br><span class="line">              <span class="keyword">if</span>(!is_float($item_value) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 應為浮點數'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 是否為字母</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'alpha'</span>:</span><br><span class="line">              <span class="keyword">if</span>(!ctype_alpha($item_value) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 應為字母'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 是否有空格</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'space'</span>:</span><br><span class="line">              <span class="keyword">if</span>(!ctype_space($item_value) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 不應有空格'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 是否為email格式</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'email'</span>:</span><br><span class="line">              <span class="keyword">if</span>(!filter_var($item_value, FILTER_VALIDATE_EMAIL) &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 不為Email格式'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 是否輸入一致</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'same'</span>:</span><br><span class="line">              <span class="keyword">if</span>($item_value != $rule_value &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 輸入要一致'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 是否為身分證格式</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'id_number'</span>:</span><br><span class="line">              $map = [</span><br><span class="line">                <span class="string">'A'</span>=&gt;<span class="number">10</span>,<span class="string">'B'</span>=&gt;<span class="number">11</span>,<span class="string">'C'</span>=&gt;<span class="number">12</span>,<span class="string">'D'</span>=&gt;<span class="number">13</span>,<span class="string">'E'</span>=&gt;<span class="number">14</span>,<span class="string">'F'</span>=&gt;<span class="number">15</span>,</span><br><span class="line">                <span class="string">'G'</span>=&gt;<span class="number">16</span>,<span class="string">'H'</span>=&gt;<span class="number">17</span>,<span class="string">'I'</span>=&gt;<span class="number">34</span>,<span class="string">'J'</span>=&gt;<span class="number">18</span>,<span class="string">'K'</span>=&gt;<span class="number">19</span>,<span class="string">'L'</span>=&gt;<span class="number">20</span>,</span><br><span class="line">                <span class="string">'M'</span>=&gt;<span class="number">21</span>,<span class="string">'N'</span>=&gt;<span class="number">22</span>,<span class="string">'O'</span>=&gt;<span class="number">35</span>,<span class="string">'P'</span>=&gt;<span class="number">23</span>,<span class="string">'Q'</span>=&gt;<span class="number">24</span>,<span class="string">'R'</span>=&gt;<span class="number">25</span>,</span><br><span class="line">                <span class="string">'S'</span>=&gt;<span class="number">26</span>,<span class="string">'T'</span>=&gt;<span class="number">27</span>,<span class="string">'U'</span>=&gt;<span class="number">28</span>,<span class="string">'V'</span>=&gt;<span class="number">29</span>,<span class="string">'W'</span>=&gt;<span class="number">32</span>,<span class="string">'X'</span>=&gt;<span class="number">30</span>,</span><br><span class="line">                <span class="string">'Y'</span>=&gt;<span class="number">31</span>,<span class="string">'Z'</span>=&gt;<span class="number">33</span></span><br><span class="line">              ];</span><br><span class="line">              <span class="comment">// ^: 必須以英文開頭</span></span><br><span class="line">              <span class="comment">// $: 必須以數字結尾</span></span><br><span class="line">              <span class="comment">// 先檢查字數可以節省時間</span></span><br><span class="line">              $strLen = strlen($item_value);</span><br><span class="line">              $item_value = strtoupper($item_value);</span><br><span class="line">              <span class="keyword">if</span> (($strLen != <span class="number">10</span> || preg_match(<span class="string">"/^[A-Z][1-2][0-9]+$/"</span>, $item_value) == <span class="number">0</span>) &amp;&amp; $rule_value) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 不為身份證格式'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              $code = <span class="number">0</span>;</span><br><span class="line">              <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $strLen; $i++)&#123;</span><br><span class="line">                $symbol = substr($item_value,$i,<span class="number">1</span>);</span><br><span class="line">                <span class="comment">// 英文字母</span></span><br><span class="line">                <span class="keyword">if</span>($i == <span class="number">0</span>)&#123;</span><br><span class="line">                  $tmp = $map[$symbol];</span><br><span class="line">                  $code += intval($tmp/<span class="number">10</span>) + ($tmp%<span class="number">10</span>)*<span class="number">9</span>;</span><br><span class="line">                <span class="comment">// 最後一碼</span></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>($i == $strLen - <span class="number">1</span>)&#123;</span><br><span class="line">                  $code += intval($symbol);</span><br><span class="line">                <span class="comment">// 其他: 乘上 8,7,6,5,4,3,2,1</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                  $code += intval($symbol) * (<span class="number">9</span> - $i);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span>($code % <span class="number">10</span> != <span class="number">0</span> &amp;&amp; $rule_value)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;addError($item, ucwords($item). <span class="string">' 不為身份證格式'</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果不符合，就新增錯誤</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addError</span><span class="params">($item, $error)</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_errors[$item][] = $error;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷$this-&gt;_errors中有沒有值，沒有代表驗證成功</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">error</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_errors)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_errors;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="統一回應格式"><a href="#統一回應格式" class="headerlink" title="統一回應格式"></a>統一回應格式</h3><p>我們通常設計 RESTful API 會給前端<code>狀態碼</code>、<code>資料</code>、<code>訊息</code>當作他們請求是否成功的依據，並且可以透過<code>狀態碼</code>去得知這是甚麼問題。通常我習慣將狀態碼寫在回應格式之中，而非改變http status code(單純只是習慣而已)，如果有疑慮也會偏向與大家整合他們開發的習慣。以下是我封裝的 <code>ResponseFormat.php</code> 也是放在 <code>src/Utils</code> 目錄下。</p>
<p><code>src/Utils/ResponseFormat.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Utils</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> int $code;</span><br><span class="line">  <span class="keyword">public</span> mixed $data;</span><br><span class="line">  <span class="keyword">public</span> mixed $message;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">format</span><span class="params">(int $status = <span class="number">200</span>, mixed $data = null, mixed $message = null)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// RESET</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;reset();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(gettype($data) === <span class="string">'string'</span>) &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;message = $data;</span><br><span class="line">      $data = <span class="keyword">null</span>;</span><br><span class="line">      $message = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($data) &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;data = $data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($message) &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;message = $message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;code = $status;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">reset</span><span class="params">()</span>: <span class="title">void</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;code = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;data = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;message = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>一開始我們通常會先在建構子上先傳遞這兩個依賴讓 <code>php-di</code> 幫助我們使用自動配裝。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** <span class="doctag">@var</span> UsersRepository */</span></span><br><span class="line"><span class="keyword">private</span> UsersRepository $repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line"><span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> Validation */</span></span><br><span class="line"><span class="keyword">private</span> Validation $v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $repository, ResponseFormat $res, Validation $v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;v = $v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然後在 <code>Service</code> 的處理中，使用 <code>$this-&gt;v-&gt;validate()</code> 開啟驗證，並且查看 <code>$this-&gt;v-&gt;error()</code> 是否為 true，是的話就返回錯誤的資訊。<br><code>$this-&gt;res-&gt;format()</code>就是我們封裝好的格式，第一個參數是<code>狀態碼</code>、第二個是<code>資料</code>、第三個是<code>訊息</code>。當我們第二個參數是<code>字串</code>的時候，格式會自動改成<code>訊息</code>。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteUser</span><span class="params">(array $data)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Validation</span></span><br><span class="line">  <span class="keyword">$this</span>-&gt;v-&gt;validate(</span><br><span class="line">    [<span class="string">"ID"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"id"</span>]) ? $data[<span class="string">"id"</span>] : <span class="string">""</span>)],</span><br><span class="line">    [<span class="string">"ID"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">11</span>]]</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Invalid</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;v-&gt;error()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">401</span>, <span class="keyword">$this</span>-&gt;v-&gt;error(),<span class="string">"提交格式有誤!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">$this</span>-&gt;repository-&gt;deleteUser([<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, <span class="string">"Success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>介紹完之後，我們可以將之前的四個 <code>Service</code> 套用上我們寫的依賴之中。</li>
</ul>
<p><code>src/Domain/Users/Service/GetService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GetService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> UsersRepository */</span></span><br><span class="line">  <span class="keyword">private</span> UsersRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> UsersRepository $repository DB操作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $repository, ResponseFormat $res)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 獲取Users</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array $user 資料型別</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> ResponseFormat </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUsers</span><span class="params">()</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// 獲取Users</span></span><br><span class="line">    $data = <span class="keyword">$this</span>-&gt;repository-&gt;getUsers();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, $data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Users/Service/InsertService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Validation</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> UsersRepository */</span></span><br><span class="line">  <span class="keyword">private</span> UsersRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Validation */</span></span><br><span class="line">  <span class="keyword">private</span> Validation $v;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> UsersRepository $repository DB操作</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ResponseFormat $res 回傳固定格式</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Validation $v 表單驗證</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $repository, ResponseFormat $res, Validation $v)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;v = $v;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 插入User</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array $user 資料型別</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array Users array</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertUser</span><span class="params">(array $data)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Validation</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;v-&gt;validate(</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"姓名"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"name"</span>]) ? $data[<span class="string">"name"</span>] : <span class="string">""</span>),</span><br><span class="line">        <span class="string">"密碼"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"password"</span>]) ? $data[<span class="string">"password"</span>] : <span class="string">""</span>),</span><br><span class="line">      ],</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"姓名"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">64</span>],</span><br><span class="line">        <span class="string">"密碼"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">64</span>],</span><br><span class="line">      ]</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invalid</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;v-&gt;error()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">401</span>, <span class="keyword">$this</span>-&gt;v-&gt;error(),<span class="string">"提交格式有誤!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $data[<span class="string">"password"</span>] = md5($data[<span class="string">"password"</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository-&gt;insertUser($data);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, <span class="string">"Success"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Users/Service/UpdateService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Validation</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> UsersRepository */</span></span><br><span class="line">  <span class="keyword">private</span> UsersRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Validation */</span></span><br><span class="line">  <span class="keyword">private</span> Validation $v;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> UsersRepository $repository DB操作</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ResponseFormat $res 回傳固定格式</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Validation $v 表單驗證</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $repository, ResponseFormat $res, Validation $v)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;v = $v;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 更新Users</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array $user 資料型別</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array Users array</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updateUser</span><span class="params">(array $data)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Validation</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;v-&gt;validate(</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"ID"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"id"</span>]) ? $data[<span class="string">"id"</span>] : <span class="string">""</span>),</span><br><span class="line">        <span class="string">"姓名"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"name"</span>]) ? $data[<span class="string">"name"</span>] : <span class="string">""</span>)</span><br><span class="line">      ],</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"ID"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">11</span>],</span><br><span class="line">        <span class="string">"姓名"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">64</span>]</span><br><span class="line">      ]</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invalid</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;v-&gt;error()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">401</span>, <span class="keyword">$this</span>-&gt;v-&gt;error(),<span class="string">"提交格式有誤!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository-&gt;updateUser(</span><br><span class="line">      [<span class="string">"name"</span> =&gt; $data[<span class="string">"name"</span>]],</span><br><span class="line">      [<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, <span class="string">"Success"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><code>src/Domain/Users/Service/DeleteService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Users</span>\<span class="title">Repository</span>\<span class="title">UsersRepository</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Validation</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> UsersRepository */</span></span><br><span class="line">  <span class="keyword">private</span> UsersRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Validation */</span></span><br><span class="line">  <span class="keyword">private</span> Validation $v;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> UsersRepository $repository DB操作</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ResponseFormat $res 回傳固定格式</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Validation $v 表單驗證</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(UsersRepository $repository, ResponseFormat $res, Validation $v)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;v = $v;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 刪除Users</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array $user 資料型別</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array Users array</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteUser</span><span class="params">(array $data)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Validation</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;v-&gt;validate(</span><br><span class="line">      [<span class="string">"ID"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"id"</span>]) ? $data[<span class="string">"id"</span>] : <span class="string">""</span>)],</span><br><span class="line">      [<span class="string">"ID"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">11</span>]]</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invalid</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;v-&gt;error()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">401</span>, <span class="keyword">$this</span>-&gt;v-&gt;error(),<span class="string">"提交格式有誤!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository-&gt;deleteUser([<span class="string">"id"</span> =&gt; $data[<span class="string">"id"</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, <span class="string">"Success"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h3><ul>
<li>使用 docker 開啟服務</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<ul>
<li>用 postman 依序操作 插入(沒資料) -&gt; 插入(有資料) -&gt; 獲取<br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/1.jpg" alt=""><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/2.jpg" alt=""><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/3.jpg" alt=""></li>
</ul>
<h2 id="登入和Jwt"><a href="#登入和Jwt" class="headerlink" title="登入和Jwt"></a>登入和Jwt</h2><p>一般我們在使用 Http 這種 Stateless 的協議的時候，通常無法辨識我們的使用者的真實身分，除非藉由以下兩種方式。</p>
<ol>
<li><code>使用 Cookie Session</code>，通常我們在登入的時候 Sever 會將使用者資料存放在 Session 的記憶體之中，並且分發 Cookie(夾帶SessionId) 給 Client，讓 Client 每次請求的時候將 Cookie 當作身分證連同傳送到 Server。</li>
<li><code>使用 Jwt</code>，我們在登入的時候 Server 會將使用者資料加密，並且存成特定格式返回給 Client(Server 不做儲存)，並且每次我們在請求的時候都會從 Header 的 Authorization 欄位去查找有沒有這種 Token 的加密身分證。</li>
</ol>
<blockquote>
<p>由於 SPA、手機 APP 這種前後端分離的方式逐漸流行，Cookie Session 漸漸也開始被棄用了，其中不方便是一個原因，再來如果是分散式系統的話要儲存在記憶體只能依賴 <code>Redis</code> 這種<code>記憶體型的資料庫</code>才能夠達成。</p>
</blockquote>
<p><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/jwt.png" alt=""></p>
<h3 id="Jwt"><a href="#Jwt" class="headerlink" title="Jwt"></a>Jwt</h3><h4 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h4><p>Jwt的組成分成三部分。</p>
<ol>
<li><code>Header</code>：通常存放<code>加密的類型</code>和<code>該Token的類型</code>。<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"SHA256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><code>Payload</code>：一般裡面會有我們<code>使用者的訊息</code>、<code>簽發者</code>、<code>使用期限</code>…等資訊。<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Registered claims，一般JWT會用到的資訊</span></span><br><span class="line">  <span class="attr">"iss"</span>: <span class="string">"http://example.com"</span>, <span class="comment">// Issuer 簽發者，可以使用域名來當作驗證該TOKEN是誰製造的</span></span><br><span class="line">  <span class="attr">"iat"</span>: <span class="string">"120000000"</span>, <span class="comment">// Issued At JWT簽發時間</span></span><br><span class="line">  <span class="attr">"exp"</span>: <span class="string">"155555555"</span>, <span class="comment">// Expiration Time JWT的過期時間，過期時間必須大於簽發JWT時間</span></span><br><span class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>, <span class="comment">// Subject JWT的主題是甚麼</span></span><br><span class="line">  <span class="attr">"aud"</span>: <span class="string">"all"</span>, <span class="comment">// Audience 接收JWT的一方，預期這個TOKEN是給誰用的</span></span><br><span class="line">  <span class="attr">"nbf"</span>: <span class="string">"130000000"</span>, <span class="comment">// Not Before 定義發放JWT之後多久才生效</span></span><br><span class="line">  <span class="attr">"jti"</span> : <span class="string">"asd123"</span> <span class="comment">// JWT 的 Id JWT的身分標示，每個JWT的Id都應該是不重複的，避免重複發放</span></span><br><span class="line">  <span class="comment">// Private claims，Server 可以依照自己的方式設置擺放什麼info，盡量避免密碼相關的敏感訊息</span></span><br><span class="line">  <span class="string">"user_info"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Bob"</span>,</span><br><span class="line">    <span class="attr">"user_id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"roles"</span>: <span class="string">"admin"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Public claims，一般來說不太會用到</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><code>Signature</code>：<code>base64UrlEncode(header)</code>、<code>base64UrlEncode(payload)</code>、<code>secret</code>三個部分加密而成。</li>
</ol>
<h4 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h4><p>安裝 <code>lcobucci/jwt: ^4.0</code> 的一個 Jwt 的依賴庫，本次實作使用 <code>4.0</code> 版本，因為不同版本所用的函數不同，所以安裝前請先確認版本是否正確。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require <span class="string">"lcobucci/jwt"</span>: <span class="string">"^4.0"</span></span><br></pre></td></tr></table></figure>

<h4 id="產生公鑰和私鑰"><a href="#產生公鑰和私鑰" class="headerlink" title="產生公鑰和私鑰"></a>產生公鑰和私鑰</h4><p>我們使用 RSA 的加密方式來進行簽名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 產生私鑰</span></span><br><span class="line">openssl genrsa -out private.pem 2048</span><br><span class="line"><span class="comment"># 產生公鑰</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> private.pem -outform PEM -pubout -out public.pem</span><br></pre></td></tr></table></figure>

<h4 id="env配置"><a href="#env配置" class="headerlink" title=".env配置"></a>.env配置</h4><p>原本的 <code>.env.example</code> 已經有配置好了，不過生產環境還是建議獨立生成一個公鑰私鑰以防萬一。</p>
<p><code>.env</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># JWT SETTINGS</span><br><span class="line">JWT_ISSUER&#x3D;SLIM_4</span><br><span class="line">JWT_LIFETIME&#x3D;86400</span><br><span class="line">JWT_PRIVATE_KEY&#x3D;&quot;-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIBPQIBAAJBALSlDUfngNVzILQh0UDzg22Wd3NCvHrl1PMK+IxRoTQovLN3TQ8E</span><br><span class="line">oBgL7GqHTYSrnnADrV0JSgf8onbDzkvZoYcCAwEAAQJBALEY5w5JPZsFRViTlsww</span><br><span class="line">b&#x2F;bt&#x2F;qk3EgUCcWTcqpMWLA4vBBH7&#x2F;guLZvyWG1U4Q63vgO1SSA7g+bwMvmDMCj6l</span><br><span class="line">fhECIQDc6&#x2F;A9mYXirCwHL0iKb5o1R&#x2F;ri4NqZYrcoGUrYhpntZQIhANFT7k4SffT0</span><br><span class="line">3PSK1Pa2OcsnfuBMmqZcld3DP8+lCip7AiEAhRaZ9vIaxxBDwdxJTiSneLuxN6aP</span><br><span class="line">6mGex0hdX43PA0UCIQDNZjD41LZZjYfeQPg1WZueF5QsnZ5GTaUUpIjRxF0UTwIh</span><br><span class="line">AMa&#x2F;1Gkl&#x2F;FUaiZaFm6KMysKHAeWg3YZudouHoDLDcDbl</span><br><span class="line">-----END RSA PRIVATE KEY-----&quot;</span><br><span class="line">JWT_PUBLIC_KEY&#x3D;&quot;-----BEGIN PUBLIC KEY-----</span><br><span class="line">MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALSlDUfngNVzILQh0UDzg22Wd3NCvHrl</span><br><span class="line">1PMK+IxRoTQovLN3TQ8EoBgL7GqHTYSrnnADrV0JSgf8onbDzkvZoYcCAwEAAQ&#x3D;&#x3D;</span><br><span class="line">-----END PUBLIC KEY-----&quot;</span><br></pre></td></tr></table></figure>

<h4 id="建立-Jwt-的函式庫"><a href="#建立-Jwt-的函式庫" class="headerlink" title="建立 Jwt 的函式庫"></a>建立 Jwt 的函式庫</h4><p>基本上就是實現我們的<code>建立 Jwt</code>、<code>驗證 Jwt</code>、<code>解析 Jwt</code>的方法。</p>
<p><code>src/Utils/Jwt.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Utils</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">UnexpectedValueException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">InvalidArgumentException</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Configuration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Signer</span>\<span class="title">Hmac</span>\<span class="title">Sha256</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Signer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Signer</span>\<span class="title">Key</span>\<span class="title">InMemory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Token</span>\<span class="title">Plain</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Validation</span>\<span class="title">Constraint</span>\<span class="title">SignedWith</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Validation</span>\<span class="title">Constraint</span>\<span class="title">IssuedBy</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Validation</span>\<span class="title">Constraint</span>\<span class="title">IdentifiedBy</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Validation</span>\<span class="title">Constraint</span>\<span class="title">ValidAt</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">Clock</span>\<span class="title">SystemClock</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">DateTimeImmutable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">DateTimeZone</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Jwt</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> string The issuer name */</span></span><br><span class="line">    <span class="keyword">private</span> string $issuer;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> int Max lifetime in seconds */</span></span><br><span class="line">    <span class="keyword">private</span> int $lifetime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> Configuration config */</span></span><br><span class="line">    <span class="keyword">private</span> Configuration $config;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The constructor.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $issuer The issuer name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $lifetime The max lifetime</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $privateKey The private key as string</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $publicKey The public key as string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        string $issuer,</span></span></span><br><span class="line"><span class="function"><span class="params">        int $lifetime,</span></span></span><br><span class="line"><span class="function"><span class="params">        string $privateKey,</span></span></span><br><span class="line"><span class="function"><span class="params">        string $publicKey</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;issuer = $issuer;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lifetime = $lifetime;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;signer = <span class="keyword">new</span> Signer\Rsa\Sha256();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;publicKey = $publicKey;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config = Configuration::forAsymmetricSigner(</span><br><span class="line">          <span class="comment">// You may use RSA or ECDSA and all their variations (256, 384, and 512) and EdDSA over Curve25519</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;signer,</span><br><span class="line">          InMemory::plainText($privateKey), </span><br><span class="line">          InMemory::plainText($publicKey)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get JWT max lifetime.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int The lifetime in seconds</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getLifetime</span><span class="params">()</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lifetime;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create JSON web token.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $uid The user id</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> UnexpectedValueException</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string The JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createJwt</span><span class="params">(array $info)</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      $issuedAt = <span class="keyword">new</span> DateTimeImmutable();</span><br><span class="line">      <span class="comment">// print_r($this-&gt;v5_UUID("", 'JWT_TOKEN'));exit;</span></span><br><span class="line">      <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;config-&gt;builder()</span><br><span class="line">          -&gt;issuedBy(<span class="keyword">$this</span>-&gt;issuer)</span><br><span class="line">          -&gt;permittedFor(<span class="keyword">$this</span>-&gt;issuer)</span><br><span class="line">          -&gt;identifiedBy(<span class="keyword">$this</span>-&gt;v5_UUID(<span class="string">"0x752222"</span>, <span class="string">"JWT_TOKEN"</span>), <span class="keyword">true</span>)</span><br><span class="line">          <span class="comment">// Configures the time that the token was issue (iat claim)</span></span><br><span class="line">          -&gt;issuedAt($issuedAt)</span><br><span class="line">          <span class="comment">// Configures the time that the token can be used (nbf claim)</span></span><br><span class="line">          -&gt;canOnlyBeUsedAfter($issuedAt)</span><br><span class="line">          <span class="comment">// Configures the expiration time of the token (exp claim)</span></span><br><span class="line">          -&gt;expiresAt($issuedAt-&gt;modify(<span class="string">"+&#123;$this-&gt;lifetime&#125; seconds"</span>))</span><br><span class="line">          <span class="comment">// Configures a new claim, called "uid"</span></span><br><span class="line">          -&gt;withClaim(<span class="string">"info"</span>, $info)</span><br><span class="line">          <span class="comment">// // Configures a new header, called "foo"</span></span><br><span class="line">          <span class="comment">// -&gt;withHeader("foo", "bar")</span></span><br><span class="line">          <span class="comment">// Builds a new token</span></span><br><span class="line">          -&gt;getToken(<span class="keyword">$this</span>-&gt;config-&gt;signer(), <span class="keyword">$this</span>-&gt;config-&gt;signingKey())</span><br><span class="line">        )-&gt;toString();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Parse token.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $token The JWT</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InvalidArgumentException</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Token The parsed token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createParsedToken</span><span class="params">(string $token)</span>: <span class="title">Plain</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;config-&gt;parser()-&gt;parse($token);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Validate the access token.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $accessToken The JWT</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool The status</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validateToken</span><span class="params">(string $accessToken)</span>: <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      $token = <span class="keyword">$this</span>-&gt;createParsedToken($accessToken);</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">$this</span>-&gt;config-&gt;setValidationConstraints(<span class="keyword">new</span> SignedWith(<span class="keyword">$this</span>-&gt;config-&gt;signer(), <span class="keyword">$this</span>-&gt;config-&gt;verificationKey()));</span><br><span class="line">      <span class="keyword">$this</span>-&gt;config-&gt;setValidationConstraints(<span class="keyword">new</span> IssuedBy($token-&gt;claims()-&gt;get(<span class="string">"iss"</span>)));</span><br><span class="line">      <span class="keyword">$this</span>-&gt;config-&gt;setValidationConstraints(<span class="keyword">new</span> IdentifiedBy($token-&gt;claims()-&gt;get(<span class="string">"jti"</span>)));</span><br><span class="line">      <span class="keyword">$this</span>-&gt;config-&gt;setValidationConstraints(<span class="keyword">new</span> ValidAt(<span class="keyword">new</span> SystemClock(<span class="keyword">new</span> DateTimeZone(<span class="string">"Asia/Taipei"</span>))));</span><br><span class="line"></span><br><span class="line">      $constraints = <span class="keyword">$this</span>-&gt;config-&gt;validationConstraints();</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;config-&gt;validator()-&gt;validate($token, ...$constraints)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">v5_UUID</span><span class="params">(string $name_space, string $string)</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">      $n_hex = preg_replace(<span class="string">'/[^0-9A-Fa-f\-\(\)]/'</span>, <span class="string">''</span>, $name_space); <span class="comment">// Getting hexadecimal components of namespace</span></span><br><span class="line">      $binray_str = <span class="string">''</span>; <span class="comment">// Binary value string</span></span><br><span class="line">      <span class="comment">//Namespace UUID to bits conversion</span></span><br><span class="line">      <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($n_hex); $i+=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($n_hex[$i+<span class="number">1</span>])) &#123;</span><br><span class="line">          $binray_str .= chr(hexdec($n_hex[$i]));</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $binray_str .= chr(hexdec($n_hex[$i].$n_hex[$i+<span class="number">1</span>]));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//hash value</span></span><br><span class="line">      $hashing = sha1($binray_str . $string);</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> sprintf(<span class="string">'%08s-%04s-%04x-%04x-%12s'</span>,</span><br><span class="line">        <span class="comment">// 32 bits for the time_low</span></span><br><span class="line">        substr($hashing, <span class="number">0</span>, <span class="number">8</span>),</span><br><span class="line">        <span class="comment">// 16 bits for the time_mid</span></span><br><span class="line">        substr($hashing, <span class="number">8</span>, <span class="number">4</span>),</span><br><span class="line">        <span class="comment">// 16 bits for the time_hi,</span></span><br><span class="line">        (hexdec(substr($hashing, <span class="number">12</span>, <span class="number">4</span>)) &amp; <span class="number">0x0fff</span>) | <span class="number">0x5000</span>,</span><br><span class="line">        <span class="comment">// 8 bits and 16 bits for the clk_seq_hi_res,</span></span><br><span class="line">        <span class="comment">// 8 bits for the clk_seq_low,</span></span><br><span class="line">        (hexdec(substr($hashing, <span class="number">16</span>, <span class="number">4</span>)) &amp; <span class="number">0x3fff</span>) | <span class="number">0x8000</span>,</span><br><span class="line">        <span class="comment">// 48 bits for the node</span></span><br><span class="line">        substr($hashing, <span class="number">20</span>, <span class="number">12</span>)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="容器-Jwt-配置"><a href="#容器-Jwt-配置" class="headerlink" title="容器 Jwt 配置"></a>容器 Jwt 配置</h4><p><code>config/container.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Jwt</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Factory</span>\<span class="title">DecoratedResponseFactory</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// JWT</span></span><br><span class="line">  Jwt::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Jwt($_ENV[<span class="string">"JWT_ISSUER"</span>], (int)$_ENV[<span class="string">"JWT_LIFETIME"</span>], $_ENV[<span class="string">"JWT_PRIVATE_KEY"</span>], $_ENV[<span class="string">"JWT_PUBLIC_KEY"</span>]);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Middleware擴充用</span></span><br><span class="line">  DecoratedResponseFactory::class =&gt; <span class="function"><span class="keyword">function</span> <span class="params">(ContainerInterface $container)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> $container-&gt;get(App::class)-&gt;getResponseFactory();</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h3 id="登入和登出"><a href="#登入和登出" class="headerlink" title="登入和登出"></a>登入和登出</h3><p>當我們完成了 Jwt 的函式庫之後，我們就可以來實現登入登出的功能。</p>
<h4 id="Action-1"><a href="#Action-1" class="headerlink" title="Action"></a>Action</h4><p>請建立 <code>src/Action/Auth</code> 目錄，並且新增 <code>src/Action/Auth/LoginAction.php</code> 和 <code>src/Action/Auth/LogoutAction.php</code>。</p>
<p><code>src/Action/Auth/LoginAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="comment">// 發現使用Slim\Http\Request常常會報錯，所以使用官方的Request當作請求</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Service</span>\<span class="title">LoginService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> LoginService The login service </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> LoginService $service;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(LoginService $service)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $req, Response $res)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $data = (<span class="keyword">array</span>)$req-&gt;getParsedBody();</span><br><span class="line">        $return = <span class="keyword">$this</span>-&gt;service-&gt;login($data);</span><br><span class="line">        <span class="keyword">return</span> $res-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Action/Auth/LogoutAction.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Action</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="comment">// 發現使用Slim\Http\Request常常會報錯，所以使用官方的Request當作請求</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span> <span class="title">as</span> <span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Service</span>\<span class="title">LogoutService</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutAction</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> LogoutService The Logout service */</span></span><br><span class="line">    <span class="keyword">private</span> LogoutService $service;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(LogoutService $service)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;service = $service;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">(Request $req, Response $res)</span>: <span class="title">Response</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      $return = <span class="keyword">$this</span>-&gt;service-&gt;logout();</span><br><span class="line">      <span class="keyword">return</span> $res-&gt;withJson($return, <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h4><p>然後在 <code>src/Domain/Auth</code> 的目錄下新增相對應的 Service <code>src/Domain/Auth/Service/LoginService.php</code> 和 <code>src/Domain/Auth/Service/LogoutService.php</code>。<br><code>src/Domain/Auth/Service/LoginService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Repository</span>\<span class="title">AuthRepository</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Validation</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Jwt</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> AuthRepository */</span></span><br><span class="line">  <span class="keyword">private</span> AuthRepository $repository;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Validation */</span></span><br><span class="line">  <span class="keyword">private</span> Validation $v;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Jwt */</span></span><br><span class="line">  <span class="keyword">private</span> Jwt $jwt;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> AuthRepository $repository DB操作</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ResponseFormat response</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Validation 表單驗證</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(AuthRepository $repository, ResponseFormat $res, Validation $v, Jwt $jwt)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;repository = $repository;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;v = $v;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;jwt = $jwt;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Login</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array $name, $password</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> ResponseFormat </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(array $data)</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;v-&gt;validate(</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"帳號"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"name"</span>]) ? $data[<span class="string">"name"</span>] : <span class="string">""</span>),</span><br><span class="line">        <span class="string">"密碼"</span> =&gt; (!<span class="keyword">empty</span>($data[<span class="string">"password"</span>]) ? $data[<span class="string">"password"</span>] : <span class="string">""</span>)</span><br><span class="line">      ],</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"帳號"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">64</span>],</span><br><span class="line">        <span class="string">"密碼"</span> =&gt; [<span class="string">"required"</span>, <span class="string">"maxLen"</span> =&gt; <span class="number">64</span>]</span><br><span class="line">      ]</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invalid</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;v-&gt;error()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">401</span>, <span class="keyword">$this</span>-&gt;v-&gt;error(),<span class="string">"提交格式有誤!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $data[<span class="string">"password"</span>] = md5($data[<span class="string">"password"</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查看登入</span></span><br><span class="line">    $data = <span class="keyword">$this</span>-&gt;repository-&gt;login(<span class="string">"*"</span>, $data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!$data) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">400</span>, <span class="string">"帳號或密碼錯誤"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transform the result into a OAuh 2.0 Access Token Response</span></span><br><span class="line">    <span class="comment">// https://www.oauth.com/oauth2-servers/access-tokens/access-token-response/</span></span><br><span class="line">    $token = <span class="keyword">$this</span>-&gt;jwt-&gt;createJwt([<span class="string">"name"</span> =&gt; $data[<span class="number">0</span>][<span class="string">"name"</span>], <span class="string">"role"</span> =&gt; <span class="string">"admin"</span>]);</span><br><span class="line">    $lifetime = <span class="keyword">$this</span>-&gt;jwt-&gt;getLifetime();</span><br><span class="line">    $result = [</span><br><span class="line">        <span class="string">"access_token"</span> =&gt; $token,</span><br><span class="line">        <span class="string">"token_type"</span> =&gt; <span class="string">"Bearer"</span>,</span><br><span class="line">        <span class="string">"expires_in"</span> =&gt; $lifetime,</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, $result);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>src/Domain/Auth/Service/LogoutService.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> ResponseFormat */</span></span><br><span class="line">  <span class="keyword">private</span> ResponseFormat $res;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ResponseFormat response</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(ResponseFormat $res)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;res = $res;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Logout</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> ResponseFormat </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span><span class="params">()</span>: <span class="title">ResponseFormat</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;res-&gt;format(<span class="number">200</span>, <span class="string">"Success"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Repository-1"><a href="#Repository-1" class="headerlink" title="Repository"></a>Repository</h4><p>最後在 <code>src/Domain/Auth</code> 的目錄下新增相對應的 Repository 的 <code>src/Domain/Auth/Repository/AuthRepository.php</code>。</p>
<p><code>src/Domain/Auth/Repository/AuthRepository.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Domain</span>\<span class="title">Auth</span>\<span class="title">Repository</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">UnexpectedValueException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Medoo</span>\<span class="title">Medoo</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthRepository</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">/** <span class="doctag">@var</span> Medoo $DB 連線 */</span></span><br><span class="line">  <span class="keyword">private</span> Medoo $db;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Medoo $DB 連線</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Medoo $db)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 登入</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array|string 欄位</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> array|int WHERE條件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> string 表名</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(array | string $params = <span class="string">"*"</span>, array | int $where = <span class="number">1</span>, string $table = <span class="string">"Users"</span>)</span>: <span class="title">array</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;db-&gt;select($table, $params, $where);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedValueException($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="新增路由"><a href="#新增路由" class="headerlink" title="新增路由"></a>新增路由</h4><p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span> </span>&#123;</span><br><span class="line">  $app-&gt;options(<span class="string">"[&#123;routes.*&#125;]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; <span class="keyword">return</span> $res; &#125;);</span><br><span class="line">  </span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $app-&gt;post(<span class="string">"/login[/]"</span>, \App\Action\Auth\LoginAction::class);</span><br><span class="line">    $app-&gt;get(<span class="string">"/logout[/]"</span>, \App\Action\Auth\LogoutAction::class);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="Jwt驗證是否登入"><a href="#Jwt驗證是否登入" class="headerlink" title="Jwt驗證是否登入"></a>Jwt驗證是否登入</h3><p>由於我們完成了登入登出路由，但是我們必須在 <code>Action</code> 操作之前<code>提前解析 Jwt Token</code>，於是我們就會使用到 <code>Middleware</code> 來<code>預先處理Token</code>。</p>
<h4 id="Middleware-實現"><a href="#Middleware-實現" class="headerlink" title="Middleware 實現"></a>Middleware 實現</h4><p><code>src/Middleware/JwtAuth.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Middleware</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">Jwt</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Utils</span>\<span class="title">ResponseFormat</span>;</span><br><span class="line"><span class="comment">// use Psr\Http\Message\ResponseFactoryInterface;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Slim</span>\<span class="title">Http</span>\<span class="title">Factory</span>\<span class="title">DecoratedResponseFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ResponseInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Message</span>\<span class="title">ServerRequestInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Server</span>\<span class="title">MiddlewareInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Http</span>\<span class="title">Server</span>\<span class="title">RequestHandlerInterface</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JWT middleware.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtAuth</span> <span class="keyword">implements</span> <span class="title">MiddlewareInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> Jwt JWT authorizer */</span></span><br><span class="line">    <span class="keyword">private</span> Jwt $jwt;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  <span class="doctag">@var</span> DecoratedResponseFactory</span></span><br><span class="line"><span class="comment">     *  The response factory </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> DecoratedResponseFactory $responseFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  <span class="doctag">@var</span> ResponseFormat</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ResponseFormat $response;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Jwt $jwt, DecoratedResponseFactory $responseFactory, ResponseFormat $response)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;jwt = $jwt;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;responseFactory = $responseFactory;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response = $response;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Invoke middleware.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ServerRequestInterface $request The request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> RequestHandlerInterface $handler The handler</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ResponseInterface The response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">(ServerRequestInterface $request, RequestHandlerInterface $handler)</span>: <span class="title">ResponseInterface</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $authorization = explode(<span class="string">" "</span>, (string)$request-&gt;getHeaderLine(<span class="string">"Authorization"</span>));</span><br><span class="line">        $token = $authorization[<span class="number">1</span>] ?? <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判斷有無TOKEN並驗證</span></span><br><span class="line">        <span class="keyword">if</span> (!$token || !<span class="keyword">$this</span>-&gt;jwt-&gt;validateToken($token)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;responseFactory-&gt;createResponse()</span><br><span class="line">                -&gt;withJson(<span class="keyword">$this</span>-&gt;response-&gt;format(<span class="number">403</span>, <span class="string">"請先登入"</span>), <span class="number">200</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// Append valid token</span></span><br><span class="line">        $parsedToken = <span class="keyword">$this</span>-&gt;jwt-&gt;createParsedToken($token);</span><br><span class="line">        $request = $request-&gt;withAttribute(<span class="string">"token"</span>, $parsedToken);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// Append the info as request attribute</span></span><br><span class="line">        $request = $request-&gt;withAttribute(<span class="string">"info"</span>, $parsedToken-&gt;claims()-&gt;get(<span class="string">"info"</span>));</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> $handler-&gt;handle($request);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="新增-Middleware-到路由"><a href="#新增-Middleware-到路由" class="headerlink" title="新增 Middleware 到路由"></a>新增 Middleware 到路由</h4><p><code>config/routes.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(App $app)</span> </span>&#123;</span><br><span class="line">  $app-&gt;options(<span class="string">"[&#123;routes.*&#125;]"</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $req, Response $res, array $args)</span> :<span class="title">Response</span> </span>&#123; <span class="keyword">return</span> $res; &#125;);</span><br><span class="line">  </span><br><span class="line">  $app-&gt;group(<span class="string">"/api"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(RouteCollectorProxy $app)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $app-&gt;get(<span class="string">"/logout[/]"</span>, \App\Action\Auth\LogoutAction::class)-&gt;add(\App\Middleware\JwtAuth::class);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"> &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="成果展示-1"><a href="#成果展示-1" class="headerlink" title="成果展示"></a>成果展示</h3><ul>
<li>使用 postman 進行請求操作，依序是 登出(無 Jwt) -&gt; 登入 -&gt; 登出(有 Jwt)<br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/4.jpg" alt=""><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/5.jpg" alt=""><br><img src="/images/Build-a-PHP-RESTful-Framework-using-Slim-4-Part2/6.jpg" alt=""></li>
</ul>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><h3 id="當前目錄"><a href="#當前目錄" class="headerlink" title="當前目錄"></a>當前目錄</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── config&#x2F;               應用配置目錄</span><br><span class="line">|   ├── bootstrap.php     啟動文件</span><br><span class="line">|   ├── container.php     依賴注入容器文件</span><br><span class="line">|   ├── middleware.php    中間件文件</span><br><span class="line">|   ├── routes.php        路由文件</span><br><span class="line">|   └── settings.php      配置設定文件</span><br><span class="line">├── docker&#x2F;               Docker 相關目錄</span><br><span class="line">|   ├── nginx&#x2F;            Nginx 目錄</span><br><span class="line">│   |   └── default.conf  Nginx 配置文件</span><br><span class="line">|   └── php&#x2F;              PHP 目錄</span><br><span class="line">│       └── Dockerfile    PHP 容器配置文件</span><br><span class="line">├── public&#x2F;               網站根目錄</span><br><span class="line">│   └── index.php         入口文件</span><br><span class="line">├── src&#x2F;                  PHP 原始碼目錄（App Namespace）</span><br><span class="line">│  ├─Action&#x2F;</span><br><span class="line">│  │  ├─Auth&#x2F;</span><br><span class="line">│  │  │ ├─LoginAction.php</span><br><span class="line">│  │  │ └─LogoutAction.php</span><br><span class="line">│  │  └─Users&#x2F;</span><br><span class="line">│  │    ├─GetAction.php</span><br><span class="line">│  │    ├─InsertAction.php</span><br><span class="line">│  │    ├─UpdateAction.php</span><br><span class="line">│  │    └─DeleteAction.php</span><br><span class="line">│  ├─Domain&#x2F;</span><br><span class="line">│  │  ├─Auth&#x2F;</span><br><span class="line">│  │  │  ├─Repository&#x2F;</span><br><span class="line">│  │  │  │ └─AuthRepository.php</span><br><span class="line">│  │  │  └─Service&#x2F;</span><br><span class="line">│  │  │    ├─LoginService.php</span><br><span class="line">│  │  │    └─LogoutService.php</span><br><span class="line">│  │  └─Users&#x2F;</span><br><span class="line">│  │      ├─Repository&#x2F;</span><br><span class="line">│  │      │ └─UsersRepository.php</span><br><span class="line">│  │      └─Service&#x2F;</span><br><span class="line">│  │        ├─GetService.php</span><br><span class="line">│  │        ├─InsertService.php</span><br><span class="line">│  │        ├─UpdateService.php</span><br><span class="line">│  │        └─DeleteService.php</span><br><span class="line">│  ├─Middleware&#x2F;</span><br><span class="line">│  │ └─JwtAuth.php</span><br><span class="line">│  └─Utils&#x2F;</span><br><span class="line">│    ├─Jwt.php</span><br><span class="line">│    ├─Validation.php</span><br><span class="line">│    └─ResponseFormat.php</span><br><span class="line">├── vendor&#x2F;               Composer 目錄</span><br><span class="line">├── .env                  系統變數</span><br><span class="line">├── .gitignore            Git 忽略文件</span><br><span class="line">├── composer.json         Composer 配置文件</span><br><span class="line">├── composer.lock         Composer 鎖定文件</span><br><span class="line">├── docker-compose.yml    Docker 容器配置文件</span><br><span class="line">└── init.sql              DB Schema</span><br></pre></td></tr></table></figure>

<h3 id="未來工作"><a href="#未來工作" class="headerlink" title="未來工作"></a>未來工作</h3><ul>
<li>目前我們已經將 Slim 4 的 ADR 框架建立完成，並且實現 <code>表單驗證</code>、<code>統一回應格式</code>、<code>Jwt</code>、<code>登入登出</code>功能。</li>
<li>下一篇(DevOps篇)，我將會新增 <code>Unit Testing</code>、<code>E2E Testing</code>、<code>Github Actions</code> 等相關功能。</li>
</ul>
<blockquote>
<p>本文範例程式碼在 GitHub 上的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9TbGltLUFEUg==">POABOB/Slim-ADR<i class="fa fa-external-link-alt"></i></span>。</p>
</blockquote>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9yYWlsc2Jvb2sudHcvY2hhcHRlcnMvMTAtbXZj">Model、View、Controller 三分天下<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltNC1idWlsZC1yZXN0ZnVsLWFwaS8jY3JlYXRlLXNsaW0tYXBwbGljYXRpb24=">Slim 4 搭建 RESTful API<i class="fa fa-external-link-alt"></i></span> </li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJzYW53dWppYW5nLmNvbS9zbGltLTQtc2V0dXAtand0Lw==">Slim 4 配置 JSON Web Token<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9vZGFuLmdpdGh1Yi5pby8yMDE5LzExLzA1L3NsaW00LXR1dG9yaWFsLmh0bWw=">Slim 4 - Tutorial<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2J4Y29kZWMvZ28tY2xlYW4tYXJjaA==">bxcodec/go-clean-arch<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Swagger-ui</tag>
        <tag>PHP</tag>
        <tag>Slim 4</tag>
        <tag>RESTful</tag>
        <tag>Jwt</tag>
        <tag>Docker</tag>
        <tag>PSR-7</tag>
        <tag>PSR-11</tag>
        <tag>PSR-15</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang 主協程如何等待子協程</title>
    <url>/2023-12-21/Golang-Wait-Goroutine/</url>
    <content><![CDATA[<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>眾所周知，如果我們使用 <code>go</code> 關鍵字進行協程的操作時，如果 <code>主協程</code> 沒有等待其他協程的話，直接結束會導致 <code>任務無法完全執行</code>。</p>
<p>範例如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">go</span> sayHi()&#123;</span><br><span class="line">    fmt.Println(<span class="string">"say hello......"</span>)</span><br><span class="line">  &#125;()</span><br><span class="line">  fmt.Println(<span class="string">"main groutine...."</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 結果</span></span><br><span class="line"><span class="comment">// main groutine....</span></span><br></pre></td></tr></table></figure>

<p>一般來說，最暴力解的方式就是 <code>讓主協程睡一會</code>，等待子協程完成再來去完成主協程的任務。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">time.Sleep(<span class="number">3</span> * time.Second)</span><br></pre></td></tr></table></figure>

<p>但是這樣做非常沒有效率，且 <code>sleep</code> 的期間子協程可能早就已經結束了。</p>
<a id="more"></a> 

<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><ol>
<li>使用 <code>sync.Group</code></li>
<li>使用 <code>channel</code></li>
</ol>
<h2 id="使用-sync-WaitGroup"><a href="#使用-sync-WaitGroup" class="headerlink" title="使用 sync.WaitGroup"></a>使用 <code>sync.WaitGroup</code></h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Add</span><span class="params">(delta <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Done</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wg *WaitGroup)</span> <span class="title">Wait</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<p><code>sync.WaitGroup</code> 可以提供一個等待子協程完成的功能，主要配合使用 <code>WaitGroup.Add(1)</code>、<code>WaitGroup.Wait()</code>、<code>WaitGroup.Done()</code>。</p>
<ul>
<li><code>WaitGroup.Add(1)</code>：<code>sync.WaitGroup</code> 內有計數器，新增需要等待協成的數量。</li>
<li><code>WaitGroup.Done()</code>：已經完成的程協執行後，可以減少 <code>sync.WaitGroup</code> 當前等待的數量。</li>
<li><code>WaitGroup.Wait()</code>：用來阻塞當前協程，等待子協程，直到計數器歸零才會繼續執行。</li>
</ul>
<h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">waitByWaitGroup</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  <span class="comment">// 宣告 sync.WaitGroup</span></span><br><span class="line">  <span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">    <span class="comment">// 協程計數器++</span></span><br><span class="line">    wg.Add(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">      <span class="comment">// 協程計數器--</span></span><br><span class="line">      <span class="keyword">defer</span> wg.Done()</span><br><span class="line">			time.Sleep(<span class="number">1</span> * time.Nanosecond)</span><br><span class="line">      fmt.Printf(<span class="string">"Goroutine %d finished\n"</span>, i)</span><br><span class="line">    &#125;(i)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"Waiting for all goroutines to finish"</span>)</span><br><span class="line">  <span class="comment">// 阻塞等待計數器為 0</span></span><br><span class="line">  wg.Wait()</span><br><span class="line">  fmt.Println(<span class="string">"All goroutines finished"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h3><ul>
<li><code>WaitGroup.Add(num)</code> 使用時，<code>num</code> 不能新增負數，不然會報錯 <code>panic: sync: negative WaitGroup counter</code>。</li>
<li><code>sync.WaitGroup</code> 在使用時是一個 <code>實例</code> 而不是指標，所以在函數裡需要記得以指標方式傳遞才不會產生 <code>deadlock</code>。</li>
</ul>
<h2 id="使用-channel"><a href="#使用-channel" class="headerlink" title="使用 channel"></a>使用 <code>channel</code></h2><p>使用迴圈的方式同步等待 <code>channel</code> 取出值來，邏輯與 <code>sync.WaitGroup</code> 相似。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">waitByChannelCount</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>)</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(done <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">"working"</span>)</span><br><span class="line">			time.Sleep(<span class="number">1</span> * time.Nanosecond)</span><br><span class="line">      done &lt;- <span class="literal">true</span></span><br><span class="line">    &#125;(done)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fmt.Println(<span class="string">"waiting"</span>)</span><br><span class="line"></span><br><span class="line">  i := <span class="number">0</span></span><br><span class="line">Loop:</span><br><span class="line">  <span class="keyword">for</span> &#123;</span><br><span class="line">    <span class="keyword">select</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> &lt;-done:</span><br><span class="line">      i++</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">if</span> i == n &#123;</span><br><span class="line">        <span class="keyword">break</span> Loop</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(<span class="string">"done"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Benchmark"><a href="#Benchmark" class="headerlink" title="Benchmark"></a>Benchmark</h2><p>可以發現使用 <code>sync.WaitGroup</code> 速度約 <code>channel</code> 的兩倍，簡單又好用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go <span class="built_in">test</span> -v -bench=. -run=none -benchmem .</span><br><span class="line">goos: darwin</span><br><span class="line">goarch: amd64</span><br><span class="line">cpu: VirtualApple @ 2.50GHz</span><br><span class="line">BenchmarkWaitByChannelCount</span><br><span class="line">BenchmarkWaitByChannelCount-8 26499     41924 ns/op      10533 B/op 201 allocs/op</span><br><span class="line">BenchmarkWaitByWaitGroup</span><br><span class="line">BenchmarkWaitByWaitGroup-8    45924     24285 ns/op      12016 B/op 301 allocs/op</span><br><span class="line">BenchmarkSleep</span><br><span class="line">BenchmarkSleep-8              1         1001063750 ns/op 10480 B/op 201 allocs/op</span><br><span class="line">PASS</span><br></pre></td></tr></table></figure>

<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>其實要去等待子協程還是使用 <code>sync.WaitGroup</code> 程式碼看起來才會比較單純且高效，但是如果需要多個不同 <code>channel</code> 同時進行處理，再來考慮要不要使用 <code>channel</code> 配合 <code>for + select</code> 比較好。</p>
<p>本篇文章的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BPQUJPQi9nby1wcmFjdGljZS90cmVlL21haW4vd2FpdC1nb3JvdXRpbmU=">程式碼範例<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9hcnRpY2xlcy8zNTEzMA==">https://learnku.com/articles/35130<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnd1LWJveS5jb20vMjAxOS8wNS9oYW5kbGUtbXVsdGlwbGUtY2hhbm5lbC1pbi0xNS1taW51dGVzLw==">https://blog.wu-boy.com/2019/05/handle-multiple-channel-in-15-minutes/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>go</tag>
        <tag>Backend</tag>
        <tag>interview</tag>
        <tag>goroutine</tag>
        <tag>sync.WaitGroup</tag>
        <tag>channel</tag>
      </tags>
  </entry>
  <entry>
    <title>ARP 協議與排查</title>
    <url>/2024-01-02/Introduction-to-ARP-Protocol/</url>
    <content><![CDATA[<h2 id="ARP-協議"><a href="#ARP-協議" class="headerlink" title="ARP 協議"></a>ARP 協議</h2><h3 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h3><p><strong>位址解析協定</strong>，全名 Address Resolution Protocol，位於 <code>鏈結層</code> (<code>Link Layer</code>，<code>TCP/IP</code> 模型) 中，負責將 <code>32bit</code> <code>IP</code> Address 轉換成 <code>48bit</code> 乙太網地址(<code>MAC</code> Address) 的協議，用來 <code>確定請求的目的網路接口 (Network Interface)</code> 。反之，若是要將 MAC Address 轉換成 IP Address，則是使用 <code>RARP</code> 協議。</p>
<a id="more"></a>

<h3 id="運作原理"><a href="#運作原理" class="headerlink" title="運作原理"></a>運作原理</h3><p>假如當前的 Node A (120.107.152.137) 想要向 IP Address 為 120.107.152.4 的 Node 發送請求，這時候 Node A 其實不知道對應的會是 <code>哪一個 Node</code> 以及 <code>哪一個網路介面</code>，所以就會發 <code>ARP Request</code> (查詢 120.107.152.4) <code>廣播</code> 該網路區段內 的 Nodes。</p>
<p>每個 Node 一旦收到請求就會判斷 <code>目標是否為自己</code>，若不是則直接 <code>丟包</code>，反之，則將自己的 <code>MAC Address</code> 返回。最後，Node D (120.107.152.4) 就會根據 <code>ARP Reply</code> (返回 10-bf-48-1a-2a-c1) 將結果儲存於 <code>ARP Cache</code>，做為後續直接的使用。</p>
<p><img src="/images/Introduction-to-ARP-Protocol/a.png" alt="a"></p>
<h3 id="ARP-Cache"><a href="#ARP-Cache" class="headerlink" title="ARP Cache"></a>ARP Cache</h3><p>APR 為了 <code>避免</code> 每次都要廣播查找 MAC Address，都會將廣播獲取的結果 <code>進行 Cached</code>，一般過期時間為 <code>20 分鐘</code>，如果遇到像是 <code>&lt;incomplete&gt;</code> 這種不完整的資料，則是 <code>3 分鐘</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arp -a</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">? (10.244.0.19) at 1e:da:43:8f:b7:4c [ether] on kube-bridge</span><br><span class="line">? (10.244.0.15) at 56:82:d1:0e:9e:04 [ether] on kube-bridge</span><br><span class="line">? (10.244.0.18) at a2:40:ff:bf:b0:43 [ether] on kube-bridge</span><br><span class="line">? (10.244.0.4) at &lt;incomplete&gt; on kube-bridge</span><br></pre></td></tr></table></figure>

<p>通常可以使用 arp 指令查找相關資訊：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 顯示所有 Cache 的資料</span></span><br><span class="line">$ arp -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增靜態的 ARP 紀錄，若需要 `永久保存`，則要修改 `/etc/ethers` 檔案</span></span><br><span class="line">$ arp -s ip \&lt;ip-address\&gt; mac \&lt;mac-address\&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讓 `/etc/ethers` 中的靜態 ARP 紀錄 `生效`</span></span><br><span class="line">$ arp -f</span><br></pre></td></tr></table></figure>

<h3 id="ARP-格式"><a href="#ARP-格式" class="headerlink" title="ARP 格式"></a>ARP 格式</h3><ul>
<li>Hardware Type：表示 <code>發送主機使用之網路實體介面種類</code>，例如：<code>1</code> 表示 <code>Ethernet 網路介面</code>。</li>
<li>Protocol Type：表示 <code>所使用的通訊協定</code>， <code>0x0800</code> 表示 <code>IP</code> 協定。</li>
<li>Operation Type：表示此 <code>封包的工作模式</code>：<blockquote>
<p>1：ARP Request</p>
<p>2：ARP Reply</p>
<p>3：RARP Request</p>
<p>4：RARP Reply</p>
</blockquote>
</li>
<li>HLEN：<code>網路介面卡硬體位址長度</code>。例如： Ethernet 位址的長度為 6。</li>
<li>PLEN：<code>網路協定位址長度</code>。因為 IP 位址長 4 個位元組，此值為 4。</li>
<li>Sender HW：<code>發送端的硬體位址</code>。如果是 Ethernet 網路的話，此為 6 個位元組長的地址，例如： 04:d9:f5:bc:93:8e。</li>
<li>Target HW：<code>目的地的硬體位址</code>。</li>
<li>Sender IP：<code>發送端的 IP 位址</code>，例如：120.107.152.137。</li>
<li>Target IP：<code>目的地的 IP 位址</code>，例如：120.107.152.4。</li>
</ul>
<p><img src="/images/Introduction-to-ARP-Protocol/b.png" alt="b"></p>
<h3 id="RARP-協議"><a href="#RARP-協議" class="headerlink" title="RARP 協議"></a>RARP 協議</h3><p>RARP 早期是用來替 <code>diskless</code> 或 <code>無法儲存自己 IP</code> 的設備提供 IP Address，透過 RARP 可以 <code>廣播</code> 自身 Node 的 <code>MAC Address</code>，向 <code>RARP Server</code> 請求分配一個 IP Address。雖然早期很常使用 RARP 協議，但它已經被 <code>DHCP</code> (Dynamic Host Configuration Protocol) 給取代，因為 DHCP 提供 <code>更彈性</code> 與 <code>更多功能</code> 來 動態分配 IP Addresses，目前主要出現於 <code>嵌入式系統</code> 和 <code>需要預先分配 IP Address 的網路設備</code> 之中。</p>
<h2 id="ARP-排查"><a href="#ARP-排查" class="headerlink" title="ARP 排查"></a>ARP 排查</h2><h3 id="排查方式"><a href="#排查方式" class="headerlink" title="排查方式"></a>排查方式</h3><p>本篇文章將會使用本機的環境 (120.107.152.137) 向 lab server (120.107.152.4) 使用 ping 指令發送請求，讓其自動產生 ARP 紀錄，並且透過 <span class="exturl" data-url="aHR0cHM6Ly93d3cud2lyZXNoYXJrLm9yZy8=">Wireshark<i class="fa fa-external-link-alt"></i></span> 對其封包進行解析。</p>
<ol>
<li>清除電腦內的 ARP Cache。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arp -d</span><br><span class="line"></span><br><span class="line">$ arp -a</span><br><span class="line">介面: 120.107.152.137 --- 0x5</span><br><span class="line">  網際網路網址           實體位址               類型</span><br><span class="line">  224.0.0.2             01-00-5e-00-00-02     靜態</span><br><span class="line">  224.0.0.22            01-00-5e-00-00-16     靜態</span><br><span class="line"></span><br><span class="line">介面: 172.19.192.1 --- 0x12</span><br><span class="line">  網際網路網址           實體位址               類型</span><br><span class="line">  224.0.0.22            01-00-5e-00-00-16     靜態</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>開啟 Wireshark，分別輸入 <code>eth.type == 0x0806</code> 和 <code>host 120.107.152.137</code>，用作於攔截與 host 120.107.152.137 相關的 ARP Request，並點擊 <code>乙太網路 2</code>。</li>
</ol>
<p><img src="/images/Introduction-to-ARP-Protocol/c.png" alt="c"></p>
<ol start="3">
<li>開啟 cmd，ping 目的地址 120.107.152.4。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ping 120.107.152.4</span><br><span class="line"></span><br><span class="line">Ping 120.107.152.4 (使用 32 位元組的資料):</span><br><span class="line">回覆自 120.107.152.4: 位元組=32 時間&lt;1ms TTL=64</span><br><span class="line">回覆自 120.107.152.4: 位元組=32 時間&lt;1ms TTL=64</span><br><span class="line">回覆自 120.107.152.4: 位元組=32 時間&lt;1ms TTL=64</span><br><span class="line">回覆自 120.107.152.4: 位元組=32 時間&lt;1ms TTL=64</span><br><span class="line"></span><br><span class="line">120.107.152.4 的 Ping 統計資料:</span><br><span class="line">    封包: 已傳送 = 4，已收到 = 4, 已遺失 = 0 (0% 遺失)，大約的來回時間 (毫秒):</span><br><span class="line">    最小值 = 0ms，最大值 = 0ms，平均 = 0ms</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>在 Wireshark 點擊排查這兩條紀錄，其封包的組成會由 <code>Ethernet header</code> (18 bytes) 和 <code>ARP packet</code> (24 bytes) 組成。</li>
</ol>
<p><img src="/images/Introduction-to-ARP-Protocol/d.png" alt="d"></p>
<p><img src="/images/Introduction-to-ARP-Protocol/e.png" alt="e"></p>
<ol start="5">
<li>ARP Request 排查。</li>
</ol>
<p><strong>Ethernet header</strong>：</p>
<ul>
<li>Destination：<code>目的</code> 位址。Broadcast ff:ff:ff:ff:ff:ff</li>
<li>Source：<code>來源</code> 位址。04:d9:f5:bc:93:8e</li>
<li>Type：封包 <code>類型</code>。ARP (0x0806)</li>
</ul>
<p><strong>ARP packet</strong>：</p>
<ul>
<li>Hardware type：Ethernet (1)</li>
<li>Protocol type：IPv4 (0x0800)</li>
<li>Hardware size：6</li>
<li>Protocol type：4</li>
<li>Opcode：request (1)</li>
<li>Sender MAC address：04:d9:f5:bc:93:8e</li>
<li>Sender IP address：120.107.152.137</li>
<li>Target MAC address：00:00:00:00:00:00</li>
<li>Target IP address：120.107.152.4</li>
</ul>
<p><img src="/images/Introduction-to-ARP-Protocol/f.png" alt="f"></p>
<ol start="6">
<li>ARP Reply 排查。</li>
</ol>
<p><strong>Ethernet header</strong>：</p>
<ul>
<li>Destination：04:d9:f5:bc:93:8e</li>
<li>Source：10:bf:48:1a:2a:c1</li>
<li>Type：ARP (0x0806)</li>
<li>Padding：確保 Header 格式 <code>以 32 bits 長度</code> 呈現的補0</li>
</ul>
<p><strong>ARP packet</strong>：</p>
<ul>
<li>Hardware type：Ethernet (1)</li>
<li>Protocol type：IPv4 (0x0800)</li>
<li>Hardware size：6</li>
<li>Protocol type：4</li>
<li>Opcode：reply(2)</li>
<li>Sender MAC address：10:bf:48:1a:2a:c1</li>
<li>Sender IP address：120.107.152.4</li>
<li>Target MAC address：04:d9:f5:bc:93:8e</li>
<li>Target IP address：120.107.152.137</li>
</ul>
<p><img src="/images/Introduction-to-ARP-Protocol/g.png" alt="g"></p>
<ol start="7">
<li>查看 ARP Cache，這邊就會記錄剛剛所獲取到的 MAC Address。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arp -a</span><br><span class="line"></span><br><span class="line">介面: 120.107.152.137 --- 0x5</span><br><span class="line">  網際網路網址           實體位址               類型</span><br><span class="line">  120.107.152.4         10-bf-48-1a-2a-c1     動態</span><br><span class="line">  224.0.0.2             01-00-5e-00-00-02     靜態</span><br><span class="line">  224.0.0.22            01-00-5e-00-00-16     靜態</span><br><span class="line"></span><br><span class="line">介面: 172.19.192.1 --- 0x12</span><br><span class="line">  網際網路網址           實體位址               類型</span><br><span class="line">  224.0.0.2             01-00-5e-00-00-02     靜態</span><br><span class="line">  224.0.0.22            01-00-5e-00-00-16     靜態</span><br></pre></td></tr></table></figure>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2Vla3Nmb3JnZWVrcy5vcmcvd2hhdC1pcy1yYXJwLw==">https://www.geeksforgeeks.org/what-is-rarp/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudHNuaWVuLmlkdi50dy9NYW5hZ2VyX1dlYkJvb2svY2hhcDQvNC0yJTIwQVJQJTIwJUU1JThEJTk0JUU1JUFFJTlBJUU4JTg4JTg3JUU1JTg4JTg2JUU2JTlFJTkwLmh0bWw=">https://www.tsnien.idv.tw/Manager_WebBook/chap4/4-2 ARP 協定與分析.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9zZG4uZmVpc2t5Lnh5ei93YW5nLWx1by1qaS1jaHUvaW5kZXgvYXJw">https://sdn.feisky.xyz/wang-luo-ji-chu/index/arp<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9pbmZvLnN1cHBvcnQuaHVhd2VpLmNvbS9pbmZvLWZpbmRlci9lbmN5Y2xvcGVkaWEvZW4vQVJQLmh0bWw=">https://info.support.huawei.com/info-finder/encyclopedia/en/ARP.html<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>電腦網路</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>interview</tag>
        <tag>internet</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>URL Shortener - 自增id亂數產生ShortId</title>
    <url>/2022-03-26/Implementation-of-ShortId-with-id-in-order/</url>
    <content><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><blockquote>
<p>由於上一篇實作URL Shortener雖然在效能上有不錯的效果，可是當我們使用自增id順序的方式導致ShortId容易被眼尖的資安人員(or駭客)發現是有跡可循的，一來觀感不太好，二來容易預測導致被惡意使用。<br>那麼我們要如何在不改變現有的架構下，完美的解決這個問題呢?<br>於是我想到，如果在資料表中，id已經被生成好，但是欄位值是空的狀態下，是不是就可以搜尋特定範圍的空值，以更新的方式來代替插入?</p>
</blockquote>
<a id="more"></a>

<h2 id="二、改善方法"><a href="#二、改善方法" class="headerlink" title="二、改善方法"></a>二、改善方法</h2><ol>
<li><p>新增 <code>url_random</code> 表預先插滿1,074,000,000筆空值資料，並且準備額外計數表(<code>url_random_nums</code>)來COUNT()非空值數量</p>
<ul>
<li><p>因為我們使用64進位的方式產生5位數字串，所以1,074,000,000筆剛好滿足我們這五位數的需求</p>
</li>
<li><p>準備額外表是因為Innodb不會把表的列數額外儲存，所以如果要COUNT()表會導致花費很多時間，所以才額外建立一個表</p>
</li>
</ul>
</li>
<li><p>在<strong>開啟服務前</strong>和<strong>固定時間</strong>，判斷 <code>url_random_nums</code> 的值為多少，並且以固定單位來迴圈計算總共多少筆</p>
<ul>
<li><p>在開啟服務後，如果Client端第一筆新增資料發現沒有計算總共多少列，那麼他就要額外等待一段時間的操作，所以建議先在開啟服務前先操作</p>
</li>
<li><p>固定時間使用Cronjob的方式，每天一次以迴圈的方式來去COUNT <code>url_random</code> 中url是空的值，計算完成後跳出迴圈，更新Mysql <code>url_random_nums</code>，更新Redis</p>
</li>
</ul>
</li>
<li><p>使用Math.random()亂數隨機抽取一筆資料並更新(手法類似步驟2)</p>
<ul>
<li><p>我預設以10000為單位，如果url空值總筆數介於1 ~ 10000之間，就使用Math.random() * 10000 = randomId，再以’WHERE id &gt;= randomId LIMIT 1’的方式，來隨機搜尋一筆在url為空值的id，並且更新它</p>
</li>
<li><p>如果更新成功，Redis中筆數 + 1，並更新時間戳</p>
</li>
<li><p>如果更新失敗，那就代表id &gt;= randomId的值都滿了，改成使用id &lt; randomId，最後Redis中筆數 + 1，並更新時間戳</p>
</li>
</ul>
</li>
</ol>
<h2 id="三、實作"><a href="#三、實作" class="headerlink" title="三、實作"></a>三、實作</h2><h3 id="1-新增-url-random-表預先插滿1-074-000-000筆空值資料，並且準備額外計數表-url-random-nums-來COUNT非空值數量"><a href="#1-新增-url-random-表預先插滿1-074-000-000筆空值資料，並且準備額外計數表-url-random-nums-來COUNT非空值數量" class="headerlink" title="1. 新增 url_random 表預先插滿1,074,000,000筆空值資料，並且準備額外計數表(url_random_nums)來COUNT非空值數量"></a>1. 新增 <code>url_random</code> 表預先插滿1,074,000,000筆空值資料，並且準備額外計數表(<code>url_random_nums</code>)來COUNT非空值數量</h3><ol>
<li>建立一個Table叫做 <code>url_random</code> 來實現我們亂數ShortId的提案</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MariaDB [shortURL]&gt; CREATE TABLE `shortURL`.`url_random` (`id` int(11) NOT NULL AUTO_INCREMENT,`url` text NOT NULL DEFAULT <span class="string">'0'</span>, `expireAt` int(11) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), KEY `url` (`url`(1024))) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">Query OK, 0 rows affected (0.120 sec)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>建立一個 <code>url_random_nums</code> 紀錄 <code>url_random</code> 中url不為’0’的欄位數</p>
<ul>
<li>使用’0’是因為用NULL在搜尋的時候會對Mysql造成額位的負擔</li>
</ul>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MariaDB [shortURL]&gt; CREATE TABLE `shortURL`.`url_random_nums` (`id` int(11) NOT NULL AUTO_INCREMENT,`urlNums` int(11) UNSIGNED NOT NULL,  PRIMARY KEY (`id`)) ENGINE=Inno</span><br><span class="line">DB DEFAULT CHARSET=utf8;</span><br><span class="line">Query OK, 0 rows affected (0.165 sec)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>插入一筆總數為0的值至 <code>url_random_nums</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MariaDB [shortURL]&gt; INSERT INTO `url_random_nums`(urlNums) VALUES (0);</span><br><span class="line">Query OK, 1 row affected (0.057 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [shortURL]&gt; select * from url_random_nums;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | urlNums |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 |       0 |</span><br><span class="line">+----+---------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>將 <code>url_random</code> 資料表插滿1,074,000,000筆資料，剛好把64 ^ 5次方的額度用滿(大概花費 4.4hrs)</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">'../db/mysql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//每次插入3000筆</span></span><br><span class="line"><span class="keyword">const</span> insert = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> values = [</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],[<span class="string">'0'</span>, <span class="number">0</span>],</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">"INSERT INTO url_random (url, expireAt) VALUES ?"</span>;    </span><br><span class="line">    <span class="keyword">const</span> Start = <span class="built_in">Date</span>.now()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">358000</span>; i++ ) &#123;</span><br><span class="line">        <span class="keyword">await</span> mysql.exec(sql, [values])</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;(i+<span class="number">1</span>) * <span class="number">3000</span>&#125;</span> rows inserted...`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> End = <span class="built_in">Date</span>.now()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Start at <span class="subst">$&#123;Start&#125;</span>, End at <span class="subst">$&#123;End&#125;</span>/, Total time: <span class="subst">$&#123;(End - Start) <span class="regexp">/ 1000&#125; seconds...`)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">&#125;</span></span></span></span><br></pre></td></tr></table></figure>

<p><code>src/model/index.js</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\Users\poabob\Desktop\Dcard\src\model&gt; node .\index.js</span><br><span class="line">3000 rows inserted...</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">1073994000 rows inserted...</span><br><span class="line">1073997000 rows inserted...</span><br><span class="line">1074000000 rows inserted...</span><br><span class="line">Start at 1648244701597, End at 1648260709265, Total time: 16007.668 seconds...</span><br></pre></td></tr></table></figure>

<h3 id="2-在開啟服務前和固定時間，判斷-url-random-nums-的值為多少，並且以固定單位來迴圈計算總共多少筆"><a href="#2-在開啟服務前和固定時間，判斷-url-random-nums-的值為多少，並且以固定單位來迴圈計算總共多少筆" class="headerlink" title="2. 在開啟服務前和固定時間，判斷 url_random_nums 的值為多少，並且以固定單位來迴圈計算總共多少筆"></a>2. 在<strong>開啟服務前</strong>和<strong>固定時間</strong>，判斷 <code>url_random_nums</code> 的值為多少，並且以固定單位來迴圈計算總共多少筆</h3><ol>
<li><p>直接先找找看Redis中有無值</p>
</li>
<li><p>有且未過期，那就直接關閉</p>
</li>
<li><p>沒有或過期</p>
<ol>
<li><p>先判斷Mysql中 <code>url_random_nums</code> 總共記錄多少筆總數</p>
</li>
<li><p>設定大小區間，我使用100萬當作一個固定範圍</p>
<ul>
<li><p>Ex. 假設目前總數有5000筆，那麼COUNT的範圍就是1~100萬</p>
</li>
<li><p>Ex. 假設目前總數為100萬又5000筆，那麼COUNT的範圍就是1000001~200萬</p>
</li>
</ul>
</li>
<li><p>利用迴圈搜尋Mysql中 <code>url_random</code> 來累計</p>
<ul>
<li>如果剛好該範圍內的總數剛好等於100萬，那就區間上下限各自加100萬，往下一個區間去COUNT()，直到結果&lt;100萬才會break</li>
</ul>
</li>
<li><p>迴圈停止後，更新Mysql中 <code>url_random_nums</code> 的總數</p>
</li>
<li><p>更新Redis中的key <code>url_random_nums</code>，資料構造為 { urlNums: count, expireAt: Math.floor(Date.now() / 1000) + 12 * 60 * 60 }</p>
<ul>
<li><p>urlNums：是總數</p>
</li>
<li><p>expireAt：為了避免程式短時間開關一直計算總數，所以設定12小時候再度執行才會更新到Mysql中(cronjob也是)</p>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<p><code>src/model/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="keyword">get</span>, <span class="keyword">set</span> &#125; = require('../db/redis');</span><br><span class="line">const &#123; ErrorModel, BaseModel &#125; = <span class="built_in">require</span>(<span class="string">'../utils/response'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; HOST_CONF &#125; = <span class="built_in">require</span>(<span class="string">'../config/url'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; getURL, insertURL, getRandomURL, insertRandomURL&#125; = <span class="built_in">require</span>(<span class="string">'../model/index'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; validateUrl, validateExpire, convertIdToShortId, convertShortIdToId &#125; = <span class="built_in">require</span>(<span class="string">"../utils/url"</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; datetimeRegex &#125; = <span class="built_in">require</span>(<span class="string">"../utils/const"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//開啟服務或cronjob時，COUNT資料</span></span><br><span class="line"><span class="keyword">const</span> selectCountForeach = <span class="keyword">async</span> () =&gt; &#123; </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> Start = <span class="built_in">Date</span>.now()</span><br><span class="line">        <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> TotalTime;</span><br><span class="line">        <span class="comment">//先判斷Redis有多少rows和是不是最近幾分鐘更新的</span></span><br><span class="line">        <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="keyword">get</span>('url_random_nums');</span><br><span class="line"></span><br><span class="line">        //如果<span class="keyword">get</span>沒有或超過12小時沒更新</span><br><span class="line">        if(result === null || !validateExpire(result['expireAt'])) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`result is null or reslut is expired!!!`</span>);</span><br><span class="line">            <span class="comment">// redis沒有，往mysql找</span></span><br><span class="line">            <span class="keyword">let</span> sql = <span class="string">`SELECT urlNums FROM url_random_nums WHERE id=1 LIMIT 1;`</span>;   </span><br><span class="line">            result = <span class="keyword">await</span> mysql.exec(sql);</span><br><span class="line">            result = result[<span class="number">0</span>][<span class="string">'urlNums'</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> idCountMin = <span class="built_in">parseInt</span>(result / <span class="number">1000000</span>)  * <span class="number">1000000</span> + <span class="number">1</span></span><br><span class="line">            <span class="keyword">let</span> idCountMax = (<span class="built_in">parseInt</span>(result / <span class="number">1000000</span>) + <span class="number">1</span>) * <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="comment">//找尋範圍內</span></span><br><span class="line">                sql = <span class="string">`SELECT COUNT(id) as id FROM url_random WHERE id &gt;= <span class="subst">$&#123;idCountMin&#125;</span> AND id &lt;= <span class="subst">$&#123;idCountMax&#125;</span> AND url != '0';`</span>;   </span><br><span class="line">                <span class="keyword">const</span> nums = <span class="keyword">await</span> mysql.exec(sql);</span><br><span class="line">                nums[<span class="string">'id'</span>] = nums[<span class="number">0</span>][<span class="string">'id'</span>];</span><br><span class="line">                </span><br><span class="line">                count += nums[<span class="string">'id'</span>];</span><br><span class="line">                <span class="comment">// 如果滿了 繼續往下100萬筆計算</span></span><br><span class="line">                <span class="keyword">if</span>(nums[<span class="string">'id'</span>] &lt; <span class="number">1000000</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'loop'</span>, count, nums);</span><br><span class="line">                idCountMin += <span class="number">1000000</span>;</span><br><span class="line">                idCountMax += <span class="number">1000000</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">///更新url_random_nums</span></span><br><span class="line">            sql = <span class="string">`UPDATE url_random_nums SET urlNums=<span class="subst">$&#123;count&#125;</span> WHERE id = 1;`</span>;   </span><br><span class="line">            mysql.exec(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//更新Redis urlNums，設定12小時候過期</span></span><br><span class="line">            result = &#123; <span class="attr">urlNums</span>: count, <span class="attr">expireAt</span>: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>) + <span class="number">12</span> * <span class="number">60</span> * <span class="number">60</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>('url_random_nums', result)</span><br><span class="line">            </span><br><span class="line">            //關閉連線</span><br><span class="line">            mysql.end();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            <span class="keyword">const</span> End = <span class="built_in">Date</span>.now()</span><br><span class="line">            <span class="built_in">console</span>.log(result)</span><br><span class="line">            TotalTime = ((End - Start) / <span class="number">1000</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`Start at <span class="subst">$&#123;Start&#125;</span>, End at <span class="subst">$&#123;End&#125;</span>/, Normal Total time: <span class="subst">$&#123;TotalTime&#125;</span> seconds`</span>)</span><br><span class="line">            <span class="comment">//關閉連線</span></span><br><span class="line">            quit();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;e.stack&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>我把執行檔 <code>count.js</code> 寫在根目錄，並配置npm指令，開啟服務的時候就會執行</li>
</ul>
<p><code>package.json</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "dev": "node ./count.js &amp;&amp; cross-env NODE_ENV=dev nodemon ./bin/www.js",</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><code>count.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//url_random</span></span><br><span class="line"><span class="keyword">const</span> &#123; selectCountForeach &#125; = <span class="built_in">require</span>(<span class="string">'./src/model/index'</span>);</span><br><span class="line">selectCountForeach();</span><br></pre></td></tr></table></figure>


<h3 id="3-使用Math-random-亂數隨機抽取一筆資料並更新-手法類似步驟2"><a href="#3-使用Math-random-亂數隨機抽取一筆資料並更新-手法類似步驟2" class="headerlink" title="3. 使用Math.random()亂數隨機抽取一筆資料並更新(手法類似步驟2)"></a>3. 使用Math.random()亂數隨機抽取一筆資料並更新(手法類似步驟2)</h3><p><code>src/model/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Random增</span></span><br><span class="line"><span class="keyword">const</span> insertRandomURL = <span class="keyword">async</span> (url, expireAt) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> Start = <span class="built_in">Date</span>.now()</span><br><span class="line">        <span class="keyword">let</span> idInsertMin, idInsertMax, id, TotalTime, sqlReturn;</span><br><span class="line">        <span class="comment">//先判斷Redis有多少rows和是不是最近幾分鐘更新的</span></span><br><span class="line">        <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="keyword">get</span>('url_random_nums');</span><br><span class="line">    </span><br><span class="line">        //如果Redis沒有</span><br><span class="line">        if(result === null) &#123;</span><br><span class="line">            <span class="comment">//查詢Mysql，返回時並插入Redis</span></span><br><span class="line">            <span class="keyword">let</span> sql = <span class="string">`SELECT urlNums FROM url_random_nums WHERE id=1 LIMIT 1;`</span>;   </span><br><span class="line">            result = <span class="keyword">await</span> mysql.exec(sql);</span><br><span class="line">            result = result[<span class="number">0</span>][<span class="string">'urlNums'</span>];</span><br><span class="line">            <span class="comment">//插入總數到Redis</span></span><br><span class="line">            result = &#123; <span class="attr">urlNums</span>: result, <span class="attr">expireAt</span>: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>) + <span class="number">12</span> * <span class="number">60</span> * <span class="number">60</span> &#125;;</span><br><span class="line">            <span class="keyword">set</span>('url_random_nums', result);</span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            <span class="comment">//利用result['urlNums']，以1萬為範圍找url為'0'的id</span></span><br><span class="line">            idInsertMin = <span class="built_in">parseInt</span>(result[<span class="string">'urlNums'</span>] / <span class="number">10000</span>)  * <span class="number">10000</span> + <span class="number">1</span>;</span><br><span class="line">            idInsertMax = (<span class="built_in">parseInt</span>(result[<span class="string">'urlNums'</span>] / <span class="number">10000</span>) + <span class="number">1</span>) * <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//亂數產生搜尋的值</span></span><br><span class="line">            id = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * idInsertMax);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">const</span> sql1 = <span class="string">`SELECT id FROM url_random WHERE id &gt;=<span class="subst">$&#123;id&#125;</span> AND id &lt;=<span class="subst">$&#123;idInsertMax&#125;</span> AND url='0' LIMIT 1;`</span>;</span><br><span class="line">            <span class="keyword">const</span> sql2 = <span class="string">`SELECT id FROM url_random WHERE id &gt;=<span class="subst">$&#123;idInsertMin&#125;</span> AND id &lt;=<span class="subst">$&#123;id&#125;</span> AND url='0' LIMIT 1;`</span>;</span><br><span class="line">            </span><br><span class="line">            sqlReturn = <span class="keyword">await</span> mysql.exec(sql1);</span><br><span class="line">            <span class="comment">//如果sql1語句執行失敗，代表介於id~idInsertMax已經沒有空值</span></span><br><span class="line">            <span class="keyword">if</span>(sqlReturn.length === <span class="number">0</span>) &#123;</span><br><span class="line">                sqlReturn = <span class="keyword">await</span> mysql.exec(sql2);</span><br><span class="line">                <span class="comment">//如果sql2語句執行失敗，代表介於idInsertMin~id已經沒有空值，不正常</span></span><br><span class="line">                <span class="keyword">if</span>(sqlReturn.length === <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">`ERROR CAN\'T GET id`</span>)</span><br><span class="line">                    <span class="keyword">return</span> [];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">            <span class="comment">//獲取id後，更新url和expireAt</span></span><br><span class="line">            <span class="keyword">const</span> returnId = sqlReturn[<span class="number">0</span>][<span class="string">'id'</span>]</span><br><span class="line">            sql = <span class="string">`UPDATE url_random SET url='<span class="subst">$&#123;url&#125;</span>', expireAt=<span class="subst">$&#123;expireAt&#125;</span> WHERE id = <span class="subst">$&#123;returnId&#125;</span>;`</span></span><br><span class="line">            sqlReturn = <span class="keyword">await</span> mysql.exec(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(sqlReturn[<span class="string">'affectedRows'</span>] === <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`ERROR CAN\'T UPDATE`</span>);</span><br><span class="line">                <span class="keyword">return</span> [];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//Redis總數+1</span></span><br><span class="line">            <span class="keyword">set</span>('url_random_nums', &#123; urlNums: result[<span class="string">'urlNums'</span>] + <span class="number">1</span>, <span class="attr">expireAt</span>: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>) + <span class="number">12</span> * <span class="number">60</span> * <span class="number">60</span> &#125;)</span><br><span class="line">            <span class="keyword">const</span> End = <span class="built_in">Date</span>.now()</span><br><span class="line">            TotalTime = ((End - Start) / <span class="number">1000</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`Start at <span class="subst">$&#123;Start&#125;</span>, End at <span class="subst">$&#123;End&#125;</span>/, Random Total time: <span class="subst">$&#123;TotalTime&#125;</span> seconds`</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">id</span>: returnId&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;e.stack&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="四、比較"><a href="#四、比較" class="headerlink" title="四、比較"></a>四、比較</h2><ol>
<li><p>亂數生成</p>
<ul>
<li>平均回應時間：54/ms</li>
</ul>
</li>
</ol>
<p><img src="/images/Implementation-of-ShortId-with-id-in-order/a.gif" alt="URL"></p>
<ol start="2">
<li>順序生成<ul>
<li>平均回應時間：17/ms</li>
</ul>
</li>
</ol>
<p><img src="/images/Implementation-of-ShortId-with-id-in-order/b.gif" alt="URL_RANDOM"></p>
<ol start="3">
<li>結論</li>
</ol>
<ul>
<li><p>雖然順序新增在性能上比亂數還要<strong>快3倍</strong>，但是也要考慮到順序新增它的欄位數沒有亂數那麼多(<strong>100 v.s. 1,074,000,000</strong>)，所以當表越來越大之後，可能性能表現還會在慢一點點。</p>
</li>
<li><p>還有亂數新增方式不能刪除資料(頂多只能UPDATE url=’0’, expireAt=0)，因為如果錯刪了一筆資料，當我們在累計總數的時候就會產生問題，導致可能找不到插入的id。</p>
</li>
</ul>
<blockquote>
<p>不過搞了這麼久，其實還有很多方式可以解決，只不過我想在原本這個架構上作延伸，優化我想解決的問題，之後還會有一篇關於nginx限流的部分，做完大致上這個作業應該就完整了。</p>
</blockquote>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Dcard實習面試</tag>
        <tag>URL短網址</tag>
        <tag>Nodejs</tag>
        <tag>Mysql</tag>
        <tag>Redis</tag>
        <tag>自增id亂數產生ShortId</tag>
        <tag>crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP 狀態碼簡介</title>
    <url>/2023-12-23/Introduction-to-HTTP-Status-Code/</url>
    <content><![CDATA[<h2 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h2><p>HTTP Status Code 是用來 <code>表示 Server 處理請求的狀態</code>，從 1xx、2xx、3xx、4xx、5xx 開頭分別有其不一樣的意思。</p>
<a id="more"></a> 

<h2 id="1xx-參考資訊（Informational）"><a href="#1xx-參考資訊（Informational）" class="headerlink" title="1xx 參考資訊（Informational）"></a>1xx 參考資訊（Informational）</h2><h3 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h3><p>代表請求已經被接收了，正在處理中，用來提醒 Client 等待 Server 的回應，再採取下個步驟。</p>
<h2 id="2xx-成功（Successful）"><a href="#2xx-成功（Successful）" class="headerlink" title="2xx 成功（Successful）"></a>2xx 成功（Successful）</h2><h3 id="解釋-1"><a href="#解釋-1" class="headerlink" title="解釋"></a>解釋</h3><p>請求不但被接收了，也被執行成功。</p>
<h3 id="常用狀態碼"><a href="#常用狀態碼" class="headerlink" title="常用狀態碼"></a><strong>常用狀態碼</strong></h3><p><code>200</code>：<code>OK</code>，代表 API 正常運作的狀態，並返回資料。</p>
<p><code>201</code>：<code>Created</code>，代表請求的資源已經被 <code>建立成功</code>，通常用作於 <code>POST</code> 請求，並且 <code>可以返回資料</code>。</p>
<p><code>204</code>：<code>No Content</code>，代表請求執行成功，但是 <code>不用返回資料</code>，通常用作於 <code>DELETE</code> 請求所使用。</p>
<h2 id="3xx-重新導向（Redirection）"><a href="#3xx-重新導向（Redirection）" class="headerlink" title="3xx 重新導向（Redirection）"></a>3xx <strong>重新導向</strong>（<strong>Redirection</strong>）</h2><h3 id="解釋-2"><a href="#解釋-2" class="headerlink" title="解釋"></a>解釋</h3><p>請求被接收後，發現需要 <code>重新導向指定位置</code>，要 Client 採取下個步驟，才能夠獲取請求。</p>
<h3 id="常用狀態碼-1"><a href="#常用狀態碼-1" class="headerlink" title="常用狀態碼"></a><strong>常用狀態碼</strong></h3><p><code>301</code>：<code>Moved Permanently</code>，代表請求的資源已經被 <code>永久性的轉址</code>，其中不只是網址轉換這麼簡單，還包刮了 <code>網站排名</code>、<code>頁面權重</code>、<code>流量</code> 都會一併轉移，如果網站遷移了，沒有作永久性轉址的動作，搜尋引擎就會把新舊網站當作是兩個獨立不同的資源，舊網站所累積的權重也要重新來過。</p>
<p><code>302</code>：<code>Found</code>，代表請求的資源被 <code>暫時性轉址</code>，這才是單純只有地址的轉換，通常會用作於 <code>簡易功能型的短網址</code> 功能所使用 (有的功能很全的短網址還是有做到 SEO)。</p>
<h2 id="4xx-客戶端錯誤（Client-Error）"><a href="#4xx-客戶端錯誤（Client-Error）" class="headerlink" title="4xx 客戶端錯誤（Client Error）"></a>4xx 客戶端錯誤（<strong>Client Error</strong>）</h2><h3 id="解釋-3"><a href="#解釋-3" class="headerlink" title="解釋"></a>解釋</h3><p>代表 Client 端執行時出現錯誤，使得 Server 無法如期的處理請求。</p>
<h3 id="常用狀態碼-2"><a href="#常用狀態碼-2" class="headerlink" title="常用狀態碼"></a><strong>常用狀態碼</strong></h3><p><code>400</code>，<code>Bad Request</code>，代表 Client 發出的請求是有問題的，像是 <code>格式有誤</code>、<code>表單驗證沒過</code>、<code>無效的請求</code> 等，Server 不會對其進行處理。</p>
<p><code>401</code>，<code>Unauthorized</code>，通常發生於需要 <code>認證身分</code> 的請求而無法判斷其身分，因為 HTTP 是一個 Stateless 的協定，無法記錄每一個人的身分，需要透過類似 <code>Cookie</code>、<code>JWT</code> 相關的驗證憑據來判斷使用者的身分。</p>
<p><code>403</code>，<code>Forbidden</code>，主要發生於 <code>權限可能不足的情況</code>，拒絕其訪問，與 <code>401</code> 不同的是要先有身分憑證，才可以進一步去判斷該使用者是否符合權限範圍內的操作。</p>
<p><code>404</code>，<code>Not Found</code>，通常就是 <code>找不到請求的資源</code>，只要是一個可用的網域隨便輸入 <code>URI</code> 都有可能發生，例如：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS93YXRjaA==">https://www.google.com/watch<i class="fa fa-external-link-alt"></i></span>。</p>
<p><code>405</code>，<code>Method Not Allowed</code>，這種錯誤發生於請求的 <code>URI</code> 正確但 <code>方法</code> 錯誤，通常遇到這種問題，需要先確認 Restful API 定義的 <code>方法</code> 以及 <code>Content-Type</code> 傳遞的格式。</p>
<h2 id="5xx-客戶端錯誤（Server-Error）"><a href="#5xx-客戶端錯誤（Server-Error）" class="headerlink" title="5xx 客戶端錯誤（Server Error）"></a>5xx 客戶端錯誤（Server <strong>Error</strong>）</h2><h3 id="解釋-4"><a href="#解釋-4" class="headerlink" title="解釋"></a>解釋</h3><p>代表 Server 端執行時出現錯誤或是 Bug，無法完成請求。</p>
<h3 id="常用狀態碼-3"><a href="#常用狀態碼-3" class="headerlink" title="常用狀態碼"></a><strong>常用狀態碼</strong></h3><p><code>500</code>，<code>Internal Server Error</code>，如果當 Server 遇到無法預料的錯誤時，就會發出此狀態碼。</p>
<p><code>502</code>，<code>Bad Gateway</code>，發生於 <code>Gateway 在請求 upstream 的服務時</code> 無法得到回應，通常 Server 端有自己做 <code>反向代理</code>的話可能就會發生此種情況。</p>
<p><code>503</code>，<code>Service Unavailable</code>，發生於 Server 處於 <code>維護</code>、<code>過載</code> 暫時無法處理請求的狀態，通常會在 HTTP Header 中夾帶 <code>Retry-After</code> 的資訊，讓 Client 等待 Server 恢復後重新請求。</p>
<p><code>504</code>，<code>Gateway Timeout</code>，當我們的 <code>Gateway 請求 upstream 超時</code> 的時候，就會產生此錯誤，通常是 <code>等待時間太久</code> 才會發生。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2FkaWlzLmNvbS50dy9ibG9nL2h0dHAtc3RhdHVzLWNvZGU=">https://www.cadiis.com.tw/blog/http-status-code<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tZWxrb3JuZW1lc2lzLm1lZGl1bS5jb20vaHR0cC1zdGF0dXMtY29kZS1kZWNvZGVkLWEtZ3VpZGUtdG8tdW5kZXJzdGFuZGluZy0yMDAtMjAxLTIwMi1hbmQtMjA0LWMwODkwNGU3ZjBmZQ==">https://melkornemesis.medium.com/http-status-code-decoded-a-guide-to-understanding-200-201-202-and-204-c08904e7f0fe<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>電腦網路</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>interview</tag>
        <tag>internet</tag>
      </tags>
  </entry>
  <entry>
    <title>Program、Process、Thread 介紹</title>
    <url>/2023-12-25/Introduction-to-Program-Process-Thread/</url>
    <content><![CDATA[<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><h3 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h3><p>放在<strong>二級儲存裝置 (硬碟)</strong> 中，<strong>沒有被加載到記憶體</strong>的一堆 Code ，中文又稱「程式」，可以想像成它是<strong>死的</strong>。 </p>
<a id="more"></a> 

<h2 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h2><h3 id="定義-1"><a href="#定義-1" class="headerlink" title="定義"></a>定義</h3><p><strong>已經被加載到記憶體</strong>，並且<strong>程式碼隨時都會被 CPU 所執行</strong>，且其宣告的在記憶體的變數的值會隨著需求而不斷變動，包含<strong>程式計數器(process counter)</strong>、<strong>堆疊(stack)</strong>、<strong>資料區段(data section)</strong>、<strong>堆積(heap)</strong>。中文稱之為<strong>「行程」</strong>，可以想像成它是<strong>活的</strong>。 </p>
<blockquote>
<p>現代執行緒設計導向的系統中，行程本身不是基本執行單位，而是<strong>執行緒的容器</strong></p>
</blockquote>
<h3 id="五大狀態"><a href="#五大狀態" class="headerlink" title="五大狀態"></a>五大狀態</h3><ul>
<li><code>new</code>：行程新產生中，已分得 PCB 空間，尚未被載入記憶體。</li>
<li><code>running</code>：獲取 CPU，正在執行。</li>
<li><code>waiting</code>：在 Waiting Queue 等待 I/O Completed 或 Event Occurs，例如等待使用者輸入完成，亦稱「阻塞」（blocked）。</li>
<li><code>ready</code>：已在記憶體內，且在 Ready Queue 排班中，等待 CPU。</li>
<li><code>terminated</code>：完成執行，其 PCB 可能尚未回收，要等其 Parent Process 收集該子 Process 成果才會。</li>
</ul>
<p><img src="/images/Introduction-to-Program-Process-Thread/a.png" alt="a"></p>
<h3 id="記憶體配置"><a href="#記憶體配置" class="headerlink" title="記憶體配置"></a>記憶體配置</h3><ul>
<li><code>Stack</code>：存放 <code>函數的參數</code>、<code>區域</code> 變數等。(會稱作 stack 是由於其配置 <code>遵守 LIFO</code>)</li>
<li><code>Heap</code>：一般由程式設計師分配釋放，執行時才會知道配置大小，如 <code>malloc/new</code> 和 <code>free/delete</code>。(注意其資料結構不是 DS 中的 heap 而是 <code>link-list</code>)</li>
<li><code>BSS</code>：<code>未初始化</code>的靜態變數</li>
<li><code>Data</code>：<code>全域</code>變數、<code>靜態</code>變數</li>
<li><code>text/code</code>：<code>常量字元串</code></li>
</ul>
<p><img src="/images/Introduction-to-Program-Process-Thread/b.png" alt="b"></p>
<h3 id="配置練習"><a href="#配置練習" class="headerlink" title="配置練習"></a>配置練習</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;   <span class="comment">//global 初始化區</span></span><br><span class="line"><span class="keyword">char</span> *p1;  <span class="comment">//global 未初始化區</span></span><br><span class="line">main()&#123;</span><br><span class="line">    <span class="keyword">int</span> b;             <span class="comment">// stack</span></span><br><span class="line">    <span class="keyword">char</span> s[]=<span class="string">"abc"</span>;    <span class="comment">// stack</span></span><br><span class="line">    <span class="keyword">char</span> *p2;          <span class="comment">// stack</span></span><br><span class="line">    <span class="keyword">char</span> *p3=<span class="string">"123456"</span>; <span class="comment">// 123456\0 在常量區，p3在stack。</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> c=<span class="number">0</span>;   <span class="comment">// global (static) 初始化區</span></span><br><span class="line">    p1 = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">10</span>);</span><br><span class="line">    p2 = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">20</span>);  <span class="comment">//分配得來得10和20位元組的區域在heap</span></span><br><span class="line">    <span class="built_in">strcpy</span>(p1,<span class="string">"123456"</span>);  </span><br><span class="line">    <span class="comment">//123456\0 在常量區，編譯器可能會將它與 p3 中的 123456\0 優化成一個地方。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h2><h3 id="定義-2"><a href="#定義-2" class="headerlink" title="定義"></a>定義</h3><p>是 OS 能夠<strong>進行運算排程的最小單位</strong>，它被包含在 process 之中，<strong>是 process 中的實際運作單位</strong>。一個Process的<strong>全域變數</strong>可以讓它的所有 Threads <strong>共享，</strong>而每個 Thread 也有自己的專屬的變數。</p>
<h3 id="記憶體配置-1"><a href="#記憶體配置-1" class="headerlink" title="記憶體配置"></a>記憶體配置</h3><ul>
<li><code>Thread ID</code>：執行緒 ID。</li>
<li><code>Thread State</code>：執行緒狀態。</li>
<li><code>Process Counter</code>：程式計數器，負責記錄下一個要執行程式的地址。</li>
<li><code>CPU Register value</code>：指的是 cpu 的暫存器的內容，專門暫存指令、資料和位址的記憶體空間。</li>
<li><code>Stack</code>：負責存放 process 活動過程需要調用的指令及區域變數。</li>
</ul>
<h3 id="Threads-內會共享"><a href="#Threads-內會共享" class="headerlink" title="Threads 內會共享"></a>Threads 內會共享</h3><ul>
<li><code>Code Section</code>：<code>程式碼區域</code>，每一個行程都是因為 <code>執行某段程式碼</code> 而開啟的。</li>
<li><code>Data Section</code>：<code>資料區域</code>，代表行程會 <code>用到哪些資源</code>。</li>
<li><code>OS Resources</code></li>
</ul>
<blockquote>
<p>Code section + Data section = memory space, Address space, Heap memory</p>
</blockquote>
<h3 id="MultiThread-的好處"><a href="#MultiThread-的好處" class="headerlink" title="MultiThread 的好處"></a>MultiThread 的好處</h3><ul>
<li>允許程式中的某部份 <code>被中斷</code> 或是 <code>執行得非常久</code> 時，該程式仍然可以 <code>繼續執行</code>。</li>
<li>分享 <code>Code/Data Section</code> 和 <code>OS 資源</code>。</li>
<li><code>輕量化</code> 的 process。(context switch 一個 thread 比 process <strong><code>快約 5 倍</code></strong>，建立一個 thread 比 process <strong><code>快約 13 倍</code></strong>。)</li>
<li>可使用 <strong><code>多處理器架構</code></strong> : 使用 <strong><code>多核心</code></strong>。</li>
</ul>
<p><img src="/images/Introduction-to-Program-Process-Thread/c.png" alt="c"></p>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul>
<li>Thread 是<strong>系統處理工作的基本單元</strong>。</li>
<li>Thread 是 OS 分配 <strong>CPU 時間</strong>的對象；Process 是 <strong>OS 分配資源的</strong>對象。</li>
<li>一個 Process 會同時<strong>存在多個 Thread</strong>。</li>
<li>一個 Process 底下的 Thread 共享資源，如<strong>記憶體</strong>、<strong>全域變數 (Global Variable)</strong> 等，不同的 Process 則否。</li>
<li>OS 會根據 Thread 的<strong>優先權</strong>以及<strong>使用過的 CPU 時間</strong>，在不同的 Thread 作切換，讓各個 Thread 都有執行的機會。</li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cubXJvcGVuZ2F0ZS5jb20vMjAxNS8wMS9vcGVyYXRpbmctc3lzdGVtLWNoNC1tdWx0aXRocmVhZC5odG1s">https://www.mropengate.com/2015/01/operating-system-ch4-multithread.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmtlbm55Y29kZXIuaW8vMjAyMC8wNS8xNi8lRTklODAlQjIlRTclQTglOEItUHJvY2Vzcy0lRTMlODAlODElRTclQjclOUElRTclQTglOEItVGhyZWFkLSVFMyU4MCU4MSVFNSU4RCU5NCVFNyVBOCU4Qi1Db3JvdXRpbmUtJUU3JTlBJTg0JUU2JUE2JTgyJUU1JUJGJUI1JUU4JUFDJTlCJUU4JUE3JUEzLw==">https://blog.kennycoder.io/2020/05/16/進程-Process-、線程-Thread-、協程-Coroutine-的概念講解/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL2VyZW5zLXRlY2gtYm9vay8lRTclOTAlODYlRTglQTclQTMtcHJvY2Vzcy10aHJlYWQtOTRhNDA3MjFiNDky">https://medium.com/erens-tech-book/理解-process-thread-94a40721b492<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>作業系統</category>
      </categories>
      <tags>
        <tag>interview</tag>
        <tag>Thread</tag>
        <tag>Process</tag>
        <tag>Program</tag>
        <tag>Kernel</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang 最佳化打包 Docker Image 至上線環境</title>
    <url>/2023-01-31/The-Best-Way-of-Building-A-Smallest-Docker-Image-on-Production-Environment-Using-Golang/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>由於 Docker 讓我們開發者不論是在開發還是上線環境有一個統一的環境可以讓我們執行，導致容器化的部屬方式變得非常熱門。<br>然而，每次當我們在 Docker 打包 golang 的執行檔時，常常發現<code>鏡像(Docker Image)</code>佔用空間非常大，甚至可能有幾GB的大小這麼多。於是，優化其鏡像大小成為了一個重要的議題。<br>本篇文章將會將實際專案，從原本<code>1.51GB</code>大小的鏡像縮減至<code>38MB</code>，如果對於本文有更好的建議也歡迎留言提出來。</p>
</blockquote>
<a id="more"></a> 

<h2 id="初始Dockerfile"><a href="#初始Dockerfile" class="headerlink" title="初始Dockerfile"></a>初始Dockerfile</h2><p><code>Dockerfile.prod</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM golang:1.19-alpine AS builder</span><br><span class="line"></span><br><span class="line"># 建立環境變數</span><br><span class="line">ENV GO111MODULE&#x3D;auto \</span><br><span class="line">    CGO_ENABLED&#x3D;0 \</span><br><span class="line">    GOOS&#x3D;linux \</span><br><span class="line">    GOARCH&#x3D;amd64</span><br><span class="line"></span><br><span class="line"># 指定工作目錄</span><br><span class="line">WORKDIR &#x2F;app&#x2F;go&#x2F;</span><br><span class="line"></span><br><span class="line"># 把當前專案複製到&#x2F;app&#x2F;go裡</span><br><span class="line">COPY . &#x2F;app&#x2F;go</span><br><span class="line"></span><br><span class="line"># 安裝環境依賴函式庫</span><br><span class="line">RUN go mod tidy</span><br><span class="line">RUN go mod download </span><br><span class="line">RUN CGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build -o go-pano.output *.go</span><br><span class="line">RUN go install github.com&#x2F;rubenv&#x2F;sql-migrate&#x2F;...@latest</span><br><span class="line"></span><br><span class="line"># 暴露端口</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"># 執行</span><br><span class="line">CMD [&quot;&#x2F;app&#x2F;go&#x2F;go-pano.output&quot;]</span><br></pre></td></tr></table></figure>

<p>當我一開始執行 <code>docker build</code> 的時候，發現打包後竟然高達<code>1.51GB</code>，這樣線上環境如果要pull的話肯定很花時間和流量。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker build -f ./Dockerfile.prod -t poabob/pano-go:prod . </span><br><span class="line">$ docker image ls poabob/pano-go</span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">poabob/pano-go   prod      4ae56d080e02   34 seconds ago   1.51GB</span><br></pre></td></tr></table></figure>

<h2 id="優化流程"><a href="#優化流程" class="headerlink" title="優化流程"></a>優化流程</h2><h3 id="使用-dockerignore-避免非必要的文件打包進入鏡像"><a href="#使用-dockerignore-避免非必要的文件打包進入鏡像" class="headerlink" title="使用 .dockerignore 避免非必要的文件打包進入鏡像"></a>使用 <code>.dockerignore</code> 避免非必要的文件打包進入鏡像</h3><p>我們可以在原始檔案發現在打包的時候會<code>將本地專案目錄的資料完全複製到容器之中</code>，可是如果專案目錄<code>有些檔案本來就沒有必要被打包</code>進去的話，勢必就要來避免這些檔案的移動。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPY . &#x2F;app&#x2F;go</span><br></pre></td></tr></table></figure>

<p>我們可以使用 <code>.dockerignore</code> 來聲明哪些檔案在打包的時候要避免掉(用法跟<code>.gitignore</code>一樣)。</p>
<p><code>.dockerignore</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&#x2F;.git</span><br><span class="line">**&#x2F;.DS_Store</span><br><span class="line"></span><br><span class="line"># 裡面有存放開發環境留下來的volume</span><br><span class="line">**&#x2F;dist</span><br><span class="line"></span><br><span class="line">*.log</span><br><span class="line">Dockerfile*</span><br><span class="line">docker-compose*</span><br><span class="line">.dockerignore</span><br><span class="line">.git</span><br><span class="line">.gitignore</span><br><span class="line">.vscode</span><br></pre></td></tr></table></figure>

<p>接著我們可以再來重新打包試試看大小有無變化。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker build -f ./Dockerfile.prod -t poabob/pano-go:prod .</span><br><span class="line">$ docker image ls poabob/pano-go                             </span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">poabob/pano-go   prod      a7629caa7217   15 seconds ago   946MB</span><br></pre></td></tr></table></figure>

<ul>
<li>結果將原本的 <code>1.51GB</code> 縮減至 <code>946MB</code>，原因是因為 <code>dist</code> 目錄中有<code>python 的 service</code> 本來就不該被打包進來。</li>
</ul>
<h3 id="減少使用會增加鏡像layer的指令"><a href="#減少使用會增加鏡像layer的指令" class="headerlink" title="減少使用會增加鏡像layer的指令"></a>減少使用會增加鏡像layer的指令</h3><p>鏡像中的 layer 與我們 Git 的 commit 一樣，用來區分版本與版本之間的差異，藉此來我們在重複打包的時候，可以藉由原本 Layer 中儲存的 Cache 來節省我們打包的時間。</p>
<p>但是鏡像的 layer 是會佔空間的，所以每當我們打包環境的層數越多，就會讓該鏡像越肥大。目前有三種指令會增加 layer 的數量。</p>
<ul>
<li><code>RUN</code></li>
<li><code>ADD</code></li>
<li><code>COPY</code></li>
</ul>
<p><code>Dockerfile.prod</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM golang:1.19-alpine AS builder</span><br><span class="line"></span><br><span class="line"># 建立環境變數</span><br><span class="line">ENV GO111MODULE&#x3D;auto \</span><br><span class="line">    CGO_ENABLED&#x3D;0 \</span><br><span class="line">    GOOS&#x3D;linux \</span><br><span class="line">    GOARCH&#x3D;amd64</span><br><span class="line"></span><br><span class="line"># 指定工作目錄</span><br><span class="line">WORKDIR &#x2F;app&#x2F;go&#x2F;</span><br><span class="line"></span><br><span class="line"># 把當前專案複製到&#x2F;app&#x2F;go裡</span><br><span class="line">COPY . &#x2F;app&#x2F;go</span><br><span class="line"></span><br><span class="line"># 安裝環境依賴函式庫</span><br><span class="line">RUN go mod tidy \</span><br><span class="line">    &amp;&amp; go mod download \</span><br><span class="line">    &amp;&amp; CGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build -o go-pano.output *.go \</span><br><span class="line">    &amp;&amp; go install github.com&#x2F;rubenv&#x2F;sql-migrate&#x2F;...@latest</span><br><span class="line"></span><br><span class="line"># 暴露端口</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"># 執行</span><br><span class="line">CMD [&quot;&#x2F;app&#x2F;go&#x2F;go-pano.output&quot;]</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker build -f ./Dockerfile.prod -t poabob/pano-go:prod . </span><br><span class="line">$ docker image ls poabob/pano-go                             </span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">poabob/pano-go   prod      615b8016ccf7   15 seconds ago   946MB</span><br></pre></td></tr></table></figure>

<ul>
<li>結果還是原本的 <code>946MB</code> QQ，理論上應該縮小的。</li>
</ul>
<h3 id="使用更小的鏡像執行環境"><a href="#使用更小的鏡像執行環境" class="headerlink" title="使用更小的鏡像執行環境"></a>使用更小的鏡像執行環境</h3><p>當我們在 golang 官方鏡像的 DockerHub 可以看到，每個鏡像都有不同的<code>標籤來當作後綴</code>，而我一開始就使用 <code>alpine</code> 作為打包環境其實已經算是最小了，其他標籤解釋如下：</p>
<ul>
<li><code>buster</code><ul>
<li><code>Debian LTS 版本 10.7</code>，其代號就是 <code>Buster</code>。所以原始環境是以 Debian 作為底層作業系統，並且<code>擁有完整的相關依賴函式庫</code>，缺點就是<code>肥大</code>。</li>
</ul>
</li>
<li><code>alpine</code><ul>
<li>基於 <code>Alpine Linux</code> 所產生的鏡像，其<code>佔用空間算是最小的</code>，大多數人都會使用它來作為縮小鏡像大小的手段，但是他就是因為什麼都沒有，很容易遇到<code>相關依賴函式庫不支援的狀況</code>。</li>
</ul>
</li>
<li><code>slim</code><ul>
<li>相對來說是<code>上述兩者的折衷選擇</code>，提供較少的資源，達到減少空間的效果，但是專案能不能正常運行還是要實際測試才知道。</li>
</ul>
</li>
</ul>
<p><img src="/images/The-Best-Way-of-Building-A-Smallest-Docker-Image-on-Production-Environment-Using-Golang/QAWsa2V.jpg" alt=""></p>
<h3 id="使用多階段構建-multistage-builds-，不打包執行環境到鏡像中"><a href="#使用多階段構建-multistage-builds-，不打包執行環境到鏡像中" class="headerlink" title="使用多階段構建(multistage builds)，不打包執行環境到鏡像中"></a>使用多階段構建(multistage builds)，不打包執行環境到鏡像中</h3><p>上述操作流程我們很明顯的可以看到有把 <code>golang</code> 的執行環境給整個打包進來，可是我們的應用程式都<code>打包成為二進位制檔案</code>了，根本<code>不需要這個開發環境</code>。<br>於是 <code>Dockerfile</code> 可以讓我們在同一個檔案內，使用不同鏡像進行<code>多階段構建(multistage builds)</code>，我們只需要打包好執行檔，並將執行檔打包進去<code>另外一個乾淨的執行環境</code>即可。</p>
<p><code>Dockerfile.prod</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Build Stage</span><br><span class="line">FROM golang:1.19-alpine AS builder</span><br><span class="line"></span><br><span class="line"># 建立環境變數</span><br><span class="line">ENV GO111MODULE&#x3D;auto \</span><br><span class="line">    CGO_ENABLED&#x3D;0 \</span><br><span class="line">    GOOS&#x3D;linux \</span><br><span class="line">    GOARCH&#x3D;amd64</span><br><span class="line"></span><br><span class="line"># 指定工作目錄</span><br><span class="line">WORKDIR &#x2F;app&#x2F;go&#x2F;</span><br><span class="line"></span><br><span class="line"># 把當前專案複製到&#x2F;app&#x2F;go裡</span><br><span class="line">COPY . &#x2F;app&#x2F;go</span><br><span class="line"></span><br><span class="line"># 安裝環境依賴函式庫</span><br><span class="line">RUN go mod tidy \</span><br><span class="line">    &amp;&amp; go mod download \</span><br><span class="line">    &amp;&amp; CGO_ENABLED&#x3D;0 GOOS&#x3D;linux GOARCH&#x3D;amd64 go build -o go-pano.output *.go</span><br><span class="line"></span><br><span class="line"># Deploy Stage</span><br><span class="line">FROM alpine:3.16.2 AS prod</span><br><span class="line"></span><br><span class="line"># 指定工作目錄</span><br><span class="line">WORKDIR &#x2F;app&#x2F;go&#x2F;</span><br><span class="line"></span><br><span class="line">COPY --from&#x3D;builder &#x2F;app&#x2F;go&#x2F;go-pano.output &#x2F;app&#x2F;go&#x2F;go-pano.output</span><br><span class="line">COPY --from&#x3D;builder &#x2F;app&#x2F;go&#x2F;config-prod.yml &#x2F;app&#x2F;go&#x2F;config.yml</span><br><span class="line"></span><br><span class="line"># 暴露端口</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"># 執行</span><br><span class="line">CMD [&quot;&#x2F;app&#x2F;go&#x2F;go-pano.output&quot;]</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ docker build -f .&#x2F;Dockerfile.prod -t poabob&#x2F;pano-go:prod . </span><br><span class="line">$ docker image ls poabob&#x2F;pano-go                             </span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">poabob&#x2F;pano-go   prod      d1db126af432   25 minutes ago   38MB</span><br></pre></td></tr></table></figure>

<ul>
<li>結果將 <code>946MB</code> 大幅度的縮減至 <code>38MB</code>，並且測試過後基本上沒有任何功能上的缺失。</li>
</ul>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>本篇文章透過以下方式來減少我們在打包鏡像所遇到的鏡像肥大問題。</p>
<ol>
<li>使用 <code>.dockerignore</code></li>
<li>減少使用會增加鏡像layer的指令</li>
<li>使用更小的鏡像執行環境</li>
<li>使用<code>多階段構建(multistage builds)</code></li>
</ol>
<p>其中本篇是基於 <code>golang</code> 作為使用的範例，根據不同的程式語言像是 <code>python</code> 這種直譯式語言可能就不符合<code>使用多階段構建(multistage builds)</code>的方式，所以根據條件以及需求還煩請各位大大審慎評估後使用，畢竟很常聽說 <code>alpine</code> 鏡像的坑大大小小都有，最後還是得讓應用可以正常運行才是主要的任務。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTI2NzU0MDQxNDQyMzM2Nzc1">https://juejin.cn/post/7126754041442336775<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL2Jsb2cuaXRwdWIubmV0LzcwMDAyMjE1L3ZpZXdzcGFjZS0yNzgxNjI5Lw==">http://blog.itpub.net/70002215/viewspace-2781629/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudGltaWd1by5jb20vYXJjaGl2ZXMvMjIzLw==">https://www.timiguo.com/archives/223/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9fL2dvbGFuZw==">https://hub.docker.com/_/golang<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Dolang</tag>
        <tag>Production</tag>
      </tags>
  </entry>
  <entry>
    <title>關聯式資料庫中的 ACID</title>
    <url>/2023-12-24/Introduction-to-RDBMS-ACID/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>在關聯式資料庫中，我們肯定會在資料異動的時候使用 Transaction 來確保資料的正確性，透過 ACID 的特性，才得以讓關聯式資料庫有如此穩定的操作，避免種種的問題發生。</p>
<p>本篇文章將會詳細介紹 ACID 的特性，並且分析每個特性的原理和解決方式。</p>
</blockquote>
<a id="more"></a> 

<h2 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h2><p>ACID 是由 <code>Atomicity</code>、<code>Consistency</code>、<code>Isolation</code>、<code>Durability</code> 四個特性所構成的，其中主要應用於 RDBMS 執行 Transaction 的過程。</p>
<h2 id="Atomicity-原子性"><a href="#Atomicity-原子性" class="headerlink" title="Atomicity 原子性"></a>Atomicity 原子性</h2><p>每筆 Transaction 內都會包含 <code>至少一筆操作</code>，該特性會確保 Transaction 內這些操作不是 <code>全部成功</code>，就是 <code>全部失敗</code>。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/a.png" alt="a"></p>
<p><strong>舉例來說</strong></p>
<p>假設 Alice 要透過網路銀行轉帳 100 元給 Bob，執行時必須確保 <code>Alice 有確實扣款</code>，而 <code>Bob 有實際收款</code>，那麼 <code>Atomicity</code> 就可以完美的確保執行操作的時候不會漏掉任何一方。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/b.png" alt="b"></p>
<p>以 <code>MySQL</code> 為例，在執行的時候，把需要執行的語句放在 <code>START TRANSACTION</code> 和 <code>COMMIT</code> 中，就可以確保這些操作有原子性。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 開啟 TRANSACTION</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @A := money <span class="keyword">FROM</span> <span class="keyword">account</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">"Alice"</span> <span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">IF (@A - 100) &gt; 0 THEN</span><br><span class="line">    <span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = (@A - <span class="number">100</span>) <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">"Alice"</span>;</span><br><span class="line">    <span class="keyword">SELECT</span> @B:=money <span class="keyword">FROM</span> <span class="keyword">account</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">"Bob"</span> <span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = (@B + <span class="number">100</span>) <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">"Bob"</span>;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">log</span>(<span class="keyword">from</span>, <span class="keyword">to</span>, <span class="keyword">type</span>, amount) <span class="keyword">VALUES</span>(<span class="string">"Alice"</span>, <span class="string">"Bob"</span>, <span class="string">"transfer"</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 結束 TRANSACTION，確認操作成功</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Undo-Log"><a href="#Undo-Log" class="headerlink" title="Undo Log"></a><strong>Undo Log</strong></h3><p>InnoDB engine <code>用來執行 rollback 的一個 log</code>，主要實現了 <code>原子性</code> 的功能，每當 Transaction 中有任何一筆操作 (新增、更新、刪除)，就會將需要 rollback 的資訊記錄到 undo log 內，一旦發生了 rollback，就會讀取 undo log 的資料，並執行與原先相反的操作來還原原本資料。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/c.png" alt="c"></p>
<h2 id="Consistency-一致性"><a href="#Consistency-一致性" class="headerlink" title="Consistency 一致性"></a>Consistency 一致性</h2><p>在 Transaction 的改動中，資料的異動必須 <code>滿足 constraint</code> (Primary Key、Foreign Key、Unique Key)，確保資料始終處於一致的狀態，若是沒有遵守這些約束，該 Transaction 就會被認作失敗並 rollback。</p>
<h2 id="Isolation-隔離性"><a href="#Isolation-隔離性" class="headerlink" title="Isolation 隔離性"></a>Isolation 隔離性</h2><p>隔離性主要是為了避免 <code>同時好幾個 Transaction 操作相同的表或資料</code>，所導致產生 <code>Race Condition</code> 的情況發生，可能產生的情況有 <code>髒讀（dirty read）</code>、<code>不可重複讀（non-repeatable read）</code>、<code>幻讀（phantom read）</code>。</p>
<h3 id="髒讀-Dirty-Read"><a href="#髒讀-Dirty-Read" class="headerlink" title="髒讀 Dirty Read"></a>髒讀 Dirty Read</h3><p><strong>例子</strong></p>
<p>如果現在有兩筆 Transaction 正要讀取同筆資料的餘額，一旦 Transaction A 更新完的資料 $200 被 Transaction B 所讀取，但最後 Transaction A Rollback 讓餘額回復到 $100，Transaction B 手上拿到的卻是過期的資料 $200，稱之為 <code>髒讀</code>。</p>
<p><strong>解決方式</strong></p>
<p>將資料庫隔離級別設定為 <code>Read Commited</code>，這樣在 Transaction B 讀取的時候就必須等待 Transaction A 將該筆資料 Commit 才有辦法完成讀取。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/d.png" alt="d"></p>
<h3 id="不可重複讀-Non-repeatable-Read"><a href="#不可重複讀-Non-repeatable-Read" class="headerlink" title="不可重複讀 Non-repeatable Read"></a>不可重複讀 Non-repeatable Read</h3><p><strong>例子</strong></p>
<p>當 Transaction A 第一次讀取資料 $100 被 Transaction B 所更新，最後 Transaction A 再度讀取資料 $200，Transaction A 兩次讀取的資料都不相同，稱之為 <code>不可重複讀</code>。</p>
<p><strong>解決方式</strong></p>
<p>將資料庫隔離級別設定為 <code>Repeatable Read</code> (MySQL 預設隔離機制)，設定後 MySQL 會先去 <code>鎖定要讀取的**該行**</code>，直到 Transaction A 完成後才會讓 Transaction B 進行更新。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/e.png" alt="e"></p>
<h3 id="幻讀-Phantom-Read"><a href="#幻讀-Phantom-Read" class="headerlink" title="幻讀 Phantom Read"></a>幻讀 Phantom Read</h3><p><strong>例子</strong></p>
<p>當 Transaction A 第一次讀取使用者人數 (500 人) 後被 Transaction B 所新增 700 人，最後 Transaction A 再度讀取人數發現變成 1200 人，Transaction A 兩次讀取的資料數量都不相同，稱之為 <code>幻讀</code>。</p>
<blockquote>
<p><code>幻讀</code> 與 <code>不可重複讀</code> 的差別是，幻讀是針對 <code>新增或刪除</code> 的操作所產生的 <code>整體改動</code>，不可重複讀則是針對 <code>更新</code> 某幾行資料所產生的 <code>局部改動</code>。</p>
</blockquote>
<p><strong>解決方式</strong></p>
<p>將資料庫隔離級別設定為 <code>Serializable</code>，設定後 MySQL 會先去 <code>鎖定要讀取的**整張表**</code>，直到 Transaction A 完成後才會讓 Transaction B 進行更新。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/f.png" alt="f"></p>
<p>以下是 <code>資料庫的隔離級別</code> 對應可以 <code>避免 Race Condition</code> 的問題：</p>
<table>
<thead>
<tr>
<th></th>
<th>Dirty Read</th>
<th>Non-repeatable Read</th>
<th>Phantom Read</th>
</tr>
</thead>
<tbody><tr>
<td>Read Uncommitted</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>Read Committed</td>
<td>X</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>Repeatable Read</td>
<td>X</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>Serializable</td>
<td>X</td>
<td>X</td>
<td>X</td>
</tr>
</tbody></table>
<p>一般來說，不會特意去使用 <code>Serializable</code> 鎖定 <code>整張表</code> 來避免 <code>幻讀</code> (效能太差了)，大多數都是使用 <code>Read Committed</code> 和 <code>Repeatable Read</code> 作為其隔離的級別。</p>
<h2 id="Durability-持久性"><a href="#Durability-持久性" class="headerlink" title="Durability 持久性"></a>Durability 持久性</h2><p>當 Transaction 被 <code>Commit</code> 過後，資料可有永久儲存於硬碟之中，除非硬碟損毀。</p>
<h3 id="Redo-log"><a href="#Redo-log" class="headerlink" title="Redo log"></a>Redo log</h3><p>redo log 是一個實體 log，用來記錄那些資料 Page 進行什麼樣的修改，只要每次 Transaction 被 Commit 過後，就會產生一或多筆 log 紀錄，這樣就算是執行完成了，之後後台的 thread 會將 Buffer Pool 的 資料 Page 更新至硬碟中。</p>
<p>這也就是所謂的 <code>WAL (Write-Ahead Logging)</code> 技術，將 <code>操作先寫於 log</code> 中，並且 <code>等待合適的時間再將資料修改至硬碟</code>。</p>
<p>這樣一來，如果我們在完成一筆 Transaction 後系統突然當機，MySQL 還是可以透過 redo log 的紀錄，將更改的資料寫入硬碟。</p>
<p><img src="/images/Introduction-to-RDBMS-ACID/g.png" alt="g"></p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>透過詳細介紹 ACID 的特性後，可以發現 RDBMS 與 NoSQL 所發展的特性不太相同，強調資料的 <code>一致性</code> 與 <code>持久性</code>，根據 <code>適當的業務場景</code> 採用適合的資料庫才是最佳選擇，而不是因為 NoSQL 擁有高效的分散式處理能力，就盲目的去使用它。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9teXNxbC9sb2cvaG93X3VwZGF0ZS5odG1s">https://xiaolincoding.com/mysql/log/how_update.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly94aWFvbGluY29kaW5nLmNvbS9teXNxbC90cmFuc2FjdGlvbi9tdmNjLmh0bWw=">https://xiaolincoding.com/mysql/transaction/mvcc.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNDUwNzcz">https://cloud.tencent.com/developer/article/1450773<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>後端</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>interview</tag>
        <tag>RDBMS</tag>
        <tag>ACID</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>KKCompany面試解題</title>
    <url>/2022-04-04/KKCompany-interview-test/</url>
    <content><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><blockquote>
<p>這幾天連假友人遠距解題的期間，我也順便看了他所解的題目並便用TS拿來解。該解題方式使用Codility產生題目，這次我們是限時2小時，總共4題。</p>
</blockquote>
<a id="more"></a>

<h2 id="二、題目"><a href="#二、題目" class="headerlink" title="二、題目"></a>二、題目</h2><h3 id="第一題-找出字串中重複兩次的字元"><a href="#第一題-找出字串中重複兩次的字元" class="headerlink" title="第一題 - 找出字串中重複兩次的字元"></a>第一題 - 找出字串中重複兩次的字元</h3><blockquote>
<p>該題目表明每筆 <code>字串S</code> 除了答案之外，其他字元都不會重複，字元長度為2~27，只使用小寫。</p>
</blockquote>
<p><strong>範例：</strong></p>
<ol>
<li><p>S = “aba”, 答案要return “a”</p>
</li>
<li><p>S = “zz”, 答案要return “z”</p>
</li>
<li><p>S = “codility”, 答案要return “i”</p>
</li>
</ol>
<p><strong>解題思路：</strong></p>
<ul>
<li><p>其實這題只要用<strong>一個array</strong>，用<strong>loop去逐個塞入字元到陣列裏頭，塞入前可以判斷該字元是否存在</strong>，如果有，可以直接返回答案了。</p>
</li>
<li><p>我使用ES6的Set，分別用add()、has()，去作上述的操作。</p>
</li>
</ul>
<p><strong>解答：</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> solution_1 = (<span class="built_in">string</span>: <span class="built_in">string</span>): <span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 創建set去儲存char值</span></span><br><span class="line">    <span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">0</span>, stringLength: <span class="built_in">number</span> = <span class="built_in">string</span>.length, char: <span class="built_in">string</span> = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">set</span>: Set&lt;<span class="built_in">string</span>&gt; = <span class="keyword">new</span> Set();</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 逐字檢查</span></span><br><span class="line">    <span class="keyword">for</span>(; i &lt; stringLength; i++) &#123;</span><br><span class="line">        char = <span class="built_in">string</span>[i];</span><br><span class="line">        <span class="comment">// 如果有重複就返回</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">set</span>.has(char)) <span class="keyword">return</span> char;</span><br><span class="line">        <span class="comment">// 沒有重複就加入set</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">set</span>.add(char);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> char;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(solution_1(<span class="string">"aba"</span>))  <span class="comment">// a</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_1(<span class="string">"zz"</span>))   <span class="comment">// z</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_1(<span class="string">"codility"</span>)) <span class="comment">//i</span></span><br></pre></td></tr></table></figure>


<h3 id="第二題-重複字元的最小刪除成本"><a href="#第二題-重複字元的最小刪除成本" class="headerlink" title="第二題 - 重複字元的最小刪除成本"></a>第二題 - 重複字元的最小刪除成本</h3><blockquote>
<p>該題目在上有<span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluaW11bS10aW1lLXRvLW1ha2Utcm9wZS1jb2xvcmZ1bC8=">LeetCode 1578<i class="fa fa-external-link-alt"></i></span>，他給定一個 <code>字串S</code> 和一個 <code>陣列cost</code>，其中 <code>cost[i]</code> 是從 <code>字串S</code> 中刪除 <code>字元i的成本</code>。<br>該題目想要<strong>把鄰近兩個相同字元刪除</strong>，並去<strong>計算刪除的最小成本是多少</strong>。</p>
</blockquote>
<p><strong>範例：</strong></p>
<ol>
<li><p>S = “abccbd” &amp;&amp; C = [1, 2, 3, 4, 5], 答案要return 2，處理後的字串是”abcbd”(但沒有要求return)</p>
</li>
<li><p>S = “aabbcc” &amp;&amp; C = [1, 2, 1, 2, 1, 2], 答案要return 3，處理後的字串是”abc”(但沒有要求return)</p>
</li>
<li><p>S = “aaaa” &amp;&amp; C = [3, 4, 5, 6], 答案要return 12，處理後的字串是”a”(但沒有要求return)</p>
</li>
</ol>
<p><strong>解題思路：</strong></p>
<ul>
<li><p>使用loop去判斷 <code>字元string[i]</code> 和 <code>隔壁字元string[(i + 1)]</code> 是否相等，不相等就i++。</p>
</li>
<li><p>如果相等的話，比較大小，並累加到 <code>答案answer</code> 之中。</p>
<ul>
<li><p>比較大小的話，我直接把最小值的cost都往左邊塞，這樣只要取左邊的值就好，後續多個重複字元(aaabbb)的話也不會算錯。</p>
<ul>
<li>Ex. array[i] &gt; array[(i + 1)] =&gt; 4 &gt; 3，將兩個cost值SWAP(array[i], array[(i + 1)])</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>解答：</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> solution_2 = (<span class="built_in">string</span>: <span class="built_in">string</span>, array: <span class="built_in">number</span>[] = []): <span class="function"><span class="params">number</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>, stringLength: <span class="built_in">number</span> = <span class="built_in">string</span>.length, answer:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (; (i + <span class="number">1</span>) &lt;= stringLength; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>[i] != <span class="built_in">string</span>[(i + <span class="number">1</span>)]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (array[i] &gt; array[(i + <span class="number">1</span>)]) &#123;</span><br><span class="line">            <span class="comment">// SWAP(array[i], array[(i + 1)])</span></span><br><span class="line">            array[(i + <span class="number">1</span>)] = [array[i], array[i] = array[(i + <span class="number">1</span>)]][<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        answer += array[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"aabaa"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>]))   <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"aabbcc"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>]))   <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"aabbaacc"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>]))   <span class="comment">// 13</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"bbbaaa"</span>, [<span class="number">4</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>]))   <span class="comment">// 23</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"abc"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_2(<span class="string">"aaabbbabbbb"</span>, [<span class="number">3</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">1</span>]))    <span class="comment">// 26</span></span><br></pre></td></tr></table></figure>

<h3 id="第三題-簡單版踩地雷"><a href="#第三題-簡單版踩地雷" class="headerlink" title="第三題 - 簡單版踩地雷"></a>第三題 - 簡單版踩地雷</h3><blockquote>
<p>這題與<span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluZXN3ZWVwZXIv">Leetcode 529. Minesweeper<i class="fa fa-external-link-alt"></i></span>上的題目不同，相對比較簡單，主要是給定一個 <code>長度N</code> 形成N * N的陣列，並且在給定 <code>行數R陣列</code> 和 <code>列數C陣列</code>，來去分別對應他的炸彈位置，並且用 <code>字元&#39;B&#39;</code> 來表示。<br>然後我們還必須要判斷每個座標點上<strong>鄰近的8個格子</strong>的炸彈數量是多少，並用數字去標記。</p>
</blockquote>
<p><strong>範例：</strong></p>
<ol>
<li><p>N = 3 &amp;&amp; R = [2, 1, 0, 2] &amp;&amp; C = [0, 2, 1, 2]，這是一個3*3的陣列，(2, 0)、(1, 2)、(0, 1)、(2, 2)就是炸彈放置的位置，答案要return<br>1B2<br>24B<br>B3B</p>
</li>
<li><p>N = 5 &amp;&amp; R = [2, 3, 2, 3, 1, 1, 3, 1] &amp;&amp; C = [3, 3, 1, 1, 1, 2, 2, 3]，答案要return<br>12321<br>2BBB2<br>3B8B3<br>2BBB2<br>12321</p>
</li>
<li><p>N = 2 &amp;&amp; R = I &amp;&amp; C = I，答案要return<br>00<br>00</p>
</li>
</ol>
<p><strong>解題思路：</strong></p>
<ul>
<li><p>我先建立一個預設值為0的N*N的陣列，再判斷炸彈位置，並以’B’取代。</p>
</li>
<li><p>然後就用loop在陣列中逐個元素計算鄰近8個位置的炸彈數，並以number標記，如果該元素已經是’B’炸彈了，就不處理。</p>
</li>
<li><p>最後再把陣列轉換成字串。</p>
</li>
</ul>
<p><strong>解答：</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> solution_3 = (N: <span class="built_in">number</span>, Rows: <span class="built_in">number</span>[], Cols: <span class="built_in">number</span>[]): <span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>, j: <span class="built_in">number</span> = <span class="number">0</span>, bombNums: <span class="built_in">number</span> = <span class="number">0</span>, answer: <span class="built_in">string</span> = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">let</span> array2D: <span class="built_in">Array</span>&lt;<span class="built_in">Array</span>&lt;<span class="built_in">number</span> | <span class="built_in">string</span>&gt;&gt; = <span class="keyword">new</span> <span class="built_in">Array</span>(N);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用0來填滿N * N的陣列</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        array2D[i] = <span class="keyword">new</span> <span class="built_in">Array</span>(N)</span><br><span class="line">        array2D[i] = <span class="built_in">Array</span>.apply(<span class="literal">null</span>, array2D[i]).map(<span class="function"><span class="params">()</span> =&gt;</span> <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入Bomb座標</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; Rows.length; i++) array2D[Rows[i]][Cols[i]] = <span class="string">'B'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//開始判斷四面八方有沒有Bomb</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; N; i++) &#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j &lt; N; j++) &#123;</span><br><span class="line">            bombNums = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(array2D[i][j] === <span class="string">'B'</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span>) <span class="keyword">if</span>(array2D[i - <span class="number">1</span>][j] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(j - <span class="number">1</span> &gt;= <span class="number">0</span>) <span class="keyword">if</span>(array2D[i][j - <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(i + <span class="number">1</span> &lt; N) <span class="keyword">if</span>(array2D[i + <span class="number">1</span>][j] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(j + <span class="number">1</span> &lt; N) <span class="keyword">if</span>(array2D[i][j + <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span>) <span class="keyword">if</span>(array2D[i - <span class="number">1</span>][j - <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; j + <span class="number">1</span> &lt; N) <span class="keyword">if</span>(array2D[i - <span class="number">1</span>][j + <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(i + <span class="number">1</span> &lt; N &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span>) <span class="keyword">if</span>(array2D[i + <span class="number">1</span>][j - <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            <span class="keyword">if</span>(i + <span class="number">1</span> &lt; N &amp;&amp; j + <span class="number">1</span> &lt; N) <span class="keyword">if</span>(array2D[i + <span class="number">1</span>][j + <span class="number">1</span>] === <span class="string">'B'</span>) bombNums++;</span><br><span class="line">            array2D[i][j] = bombNums;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 陣列轉換String</span></span><br><span class="line">    array2D.forEach(<span class="function">(<span class="params">item: <span class="built_in">Array</span>&lt;<span class="built_in">number</span> | <span class="built_in">string</span>&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">        answer += item.join(<span class="string">""</span>) + <span class="string">'\n'</span>;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(solution_3(<span class="number">3</span>, [<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>], [<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>]))</span><br><span class="line"><span class="comment">// 1B2</span></span><br><span class="line"><span class="comment">// 24B</span></span><br><span class="line"><span class="comment">// B3B</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_3(<span class="number">5</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]))</span><br><span class="line"><span class="comment">// 12321</span></span><br><span class="line"><span class="comment">// 2BBB2</span></span><br><span class="line"><span class="comment">// 3B8B3</span></span><br><span class="line"><span class="comment">// 2BBB2</span></span><br><span class="line"><span class="comment">// 12321</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_3(<span class="number">2</span>, [], []))</span><br><span class="line"><span class="comment">// 00</span></span><br><span class="line"><span class="comment">// 00</span></span><br></pre></td></tr></table></figure>


<h3 id="第四題-找出矩陣中分數相加的最大值"><a href="#第四題-找出矩陣中分數相加的最大值" class="headerlink" title="第四題 - 找出矩陣中分數相加的最大值"></a>第四題 - 找出矩陣中分數相加的最大值</h3><blockquote>
<p>這題主要會給定一個帶有<strong>分數</strong> <code>二維陣列A</code>，該陣列為 N*M的大小(N和M可以不相等)，我們必須判斷該矩陣中哪兩個值相加為最大值。<br>但有一個規則是相加的兩個座標中，<code>行座標</code> 或 <code>列座標</code> 都不可以相等。</p>
</blockquote>
<p><strong>範例：</strong></p>
<ol>
<li>A = [[1, 4], [2, 3]]，A[0][0] + A[1][1] = 4，A[0][1]+A[1][0] = 6，答案要return 6</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th>0</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>1</td>
<td><code>4</code></td>
</tr>
<tr>
<td>1</td>
<td><code>2</code></td>
<td>3</td>
</tr>
</tbody></table>
<ol start="2">
<li>A = [[15, 1, 5], [16, 3, 8], [2, 6, 4]]，A[0][0] + A[2][1] = 23(max)，答案要return 23</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th>0</th>
<th>1</th>
<th>2</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td><code>15</code></td>
<td>1</td>
<td>5</td>
</tr>
<tr>
<td>1</td>
<td>16</td>
<td>3</td>
<td><code>8</code></td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td>6</td>
<td>4</td>
</tr>
</tbody></table>
<ol start="3">
<li>A = [[12, 12], [12, 12], [0, 7]]，A[1][0] + A[0][1] = 24，答案要return 24</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th>0</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>12</td>
<td><code>12</code></td>
</tr>
<tr>
<td>1</td>
<td><code>12</code></td>
<td>12</td>
</tr>
<tr>
<td>2</td>
<td>0</td>
<td>7</td>
</tr>
</tbody></table>
<p><strong>解題思路：</strong></p>
<ul>
<li><p>二為陣列要用loop去逐個判斷並相加我覺得處理起來有點複雜，所以我先將二維轉成一維陣列，並在轉成一維的同時儲存他的 <code>座標值(i,j)</code>。</p>
</li>
<li><p>因為要取相加最大值，所以一維陣列由大到小排序，再用loop去相加，如果比answer大，那就儲存在answer。</p>
<ul>
<li>如果i或j其中一個座標相同，則不處理相加。</li>
</ul>
</li>
</ul>
<p><strong>解答：</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> solution_4 = (A: <span class="built_in">number</span>[][]): <span class="function"><span class="params">number</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 定義型別</span></span><br><span class="line">    <span class="comment">// iLength行數，jLength列數，answer最大值</span></span><br><span class="line">    <span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>, j: <span class="built_in">number</span> = <span class="number">0</span>, tmp: <span class="built_in">number</span> = <span class="number">0</span>, iLength: <span class="built_in">number</span> = A.length, jLength: <span class="built_in">number</span> = A[<span class="number">0</span>].length, answer: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">interface</span> flatObject &#123;</span><br><span class="line">        value: <span class="built_in">number</span>;</span><br><span class="line">        i: <span class="built_in">number</span>;</span><br><span class="line">        j: <span class="built_in">number</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> flatArray: flatObject[] = [];</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 將二維扁平化成一維，儲存i和j的key</span></span><br><span class="line">    <span class="keyword">for</span>(;i &lt; iLength; i++) &#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j &lt; jLength; j++) &#123;</span><br><span class="line">            flatArray.push(&#123; value: A[i][j], i: i, j: j &#125;)</span><br><span class="line">            <span class="comment">// from: [[12, 12], [12, 12], [0, 7]]</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// to:</span></span><br><span class="line">            <span class="comment">// [</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 1 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 1, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 0, i: 2, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 7, i: 2, j: 1 &#125;,</span></span><br><span class="line">            <span class="comment">// ]</span></span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 將一維做排序，大到小</span></span><br><span class="line">    flatArray = flatArray.sort(<span class="function">(<span class="params">a: flatObject, b: flatObject</span>) =&gt;</span> b.value - a.value)</span><br><span class="line">    </span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;i &lt;= iLength; i++) &#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j &lt;= jLength; j++) &#123;</span><br><span class="line">            <span class="comment">// 這裡面是作相加的操作，因為不能與行或列的key相等的值相加</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// 相加</span></span><br><span class="line">            <span class="comment">// Ex. 這兩個值中，i和j都不相等，所以可以相加</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 1, j: 1 &#125;,</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// 不相加</span></span><br><span class="line">            <span class="comment">// Ex. 這兩個值中，i是相等的，所以不能使用</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 1 &#125;,</span></span><br><span class="line">            <span class="comment">// Ex. 這兩個值中，j是相等的，所以不能使用</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 0, j: 0 &#125;,</span></span><br><span class="line">            <span class="comment">//     &#123; value: 12, i: 1, j: 0 &#125;,</span></span><br><span class="line">            <span class="keyword">if</span>(flatArray[i].i === flatArray[j].i || flatArray[i].j === flatArray[j].j) <span class="keyword">continue</span>;</span><br><span class="line">            tmp = flatArray[i].value + flatArray[j].value</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 相加後儲存最大值，跑迴圈直到結束</span></span><br><span class="line">            <span class="keyword">if</span>(answer &lt; tmp) &#123;</span><br><span class="line">                answer = tmp</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(solution_4([[<span class="number">12</span>, <span class="number">12</span>], [<span class="number">12</span>, <span class="number">12</span>], [<span class="number">0</span>, <span class="number">7</span>]]))   <span class="comment">// 24</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_4([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">14</span>], [<span class="number">8</span>, <span class="number">3</span>, <span class="number">15</span>]]))   <span class="comment">// 22</span></span><br><span class="line"><span class="built_in">console</span>.log(solution_4([[<span class="number">1</span>, <span class="number">4</span>], [<span class="number">2</span>, <span class="number">3</span>]]))   <span class="comment">// 6</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>KKCompany面試解題</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo部屬Nodejs version 14錯誤</title>
    <url>/2022-04-04/hello-workd/</url>
    <content><![CDATA[<h3 id="一、Hexo-deploy報錯"><a href="#一、Hexo-deploy報錯" class="headerlink" title="一、Hexo deploy報錯"></a>一、Hexo deploy報錯</h3><p>最近當我開始把以前使用過的Hexo拿來重新架設Blog，突然發現再deploy的情況產生了Error…</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ C:\Users\poabob\Desktop\my-blog&gt; npm run deploy</span><br><span class="line"></span><br><span class="line">&gt; hexo-site@0.0.0 deploy C:\Users\poabob\Desktop\my-blog</span><br><span class="line">&gt; hexo deploy</span><br><span class="line"></span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show <span class="built_in">where</span> the warning was created)</span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:10324) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (fs.js:2042:10)</span></span><br><span class="line"><span class="string">    at tryCatcher (C:\Users\poabob\Desktop\my-blog\node_modules\bluebird\js\release\util.js:16:23)</span></span><br><span class="line"><span class="string">    at ret (eval at makeNodePromisifiedEval (C:\Users\poabob\Desktop\my-blog\node_modules\bluebird\js\release\promisify.js:184:12), &lt;anonymous&gt;:13:39)</span></span><br><span class="line"><span class="string">    at C:\Users\poabob\Desktop\my-blog\node_modules\hexo-fs\lib\fs.js:144:39</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 

<ul>
<li>機器Nodejs版本是14</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop\my-blog&gt; node -v</span><br><span class="line">v14.19.1</span><br><span class="line">C:\Users\poabob\Desktop\my-blog&gt; npm -v</span><br><span class="line">6.14.16</span><br></pre></td></tr></table></figure>

<p>使用 <code>hexo build</code> 、 <code>hexo clean</code> 、 <code>hexo server</code> 也都沒有相關的錯誤提示，查看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcy80Njk1">Github Issue<i class="fa fa-external-link-alt"></i></span>上後才發現原來node版本太高。</p>
<h3 id="二、解決辦法：安裝NVM-Node-Version-Manager"><a href="#二、解決辦法：安裝NVM-Node-Version-Manager" class="headerlink" title="二、解決辦法：安裝NVM(Node Version Manager)"></a>二、解決辦法：安裝NVM(Node Version Manager)</h3><ul>
<li>方法<ol>
<li><del>使用 Docker</del></li>
<li><del>降版本到12或13</del></li>
<li>安裝NVM管理Nodejs版本</li>
</ol>
</li>
</ul>
<p>後來想想如果要寫個Blog用Docker跑Container要等有點久，降版本也不是一個治本的方式(如果一個專案發現版本過低，那又要升回去)，於是我就想起以前曾經網路上有人提到的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzL3JlbGVhc2Vz">NVM-Windows<i class="fa fa-external-link-alt"></i></span>可以使用(早期<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0=">NVM<i class="fa fa-external-link-alt"></i></span>只有支援Linux、MacOS)，立馬點擊下載。</p>
<p><img src="/images/hello-world/a.jpg" alt="(下載列表)"></p>
<p>如果是Linux則直接照著NVM官方Github上的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0jaW5zdGFsbC0tdXBkYXRlLXNjcmlwdA==">README<i class="fa fa-external-link-alt"></i></span>來安裝、MacOS請參考<span class="exturl" data-url="aHR0cHM6Ly90ZWNhZG1pbi5uZXQvaW5zdGFsbC1udm0tbWFjb3Mtd2l0aC1ob21lYnJldy8=">這篇文章<i class="fa fa-external-link-alt"></i></span>。</p>
<p><img src="/images/hello-world/b.jpg" alt="(下載指令)"></p>
<blockquote>
<p>注意：Winddows環境下安裝的話，請事先確認安裝的路徑<strong>是否有無空格</strong>，如果有的話，在使用的時候會產生<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzL2lzc3Vlcy8xNjg=">exit status 145<i class="fa fa-external-link-alt"></i></span>，導致無法正確使用nvm指令。</p>
</blockquote>
<p><img src="/hello-world/c.jpg" alt="(安裝提醒)"></p>
<p>安裝完後，將terminal全部關掉重開，就可以執行 <code>nvm</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob&gt; nvm</span><br><span class="line"></span><br><span class="line">Running version 1.1.9.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"></span><br><span class="line">  nvm arch                     : Show <span class="keyword">if</span> node is running <span class="keyword">in</span> 32 or 64 bit mode.</span><br><span class="line">  nvm current                  : Display active version.</span><br><span class="line">  nvm install &lt;version&gt; [arch] : The version can be a specific version, <span class="string">"latest"</span> <span class="keyword">for</span> the latest current version, or <span class="string">"lts"</span> <span class="keyword">for</span> the</span><br><span class="line">                                 most recent LTS version. Optionally specify whether to install the 32 or 64 bit version (defaults</span><br><span class="line">                                 to system arch). Set [arch] to <span class="string">"all"</span> to install 32 AND 64 bit versions.</span><br><span class="line">                                 Add --insecure to the end of this <span class="built_in">command</span> to bypass SSL validation of the remote download server.</span><br><span class="line">  nvm list [available]         : List the node.js installations. Type <span class="string">"available"</span> at the end to see what can be installed. Aliased as ls.</span><br><span class="line">  nvm on                       : Enable node.js version management.</span><br><span class="line">  nvm off                      : Disable node.js version management.</span><br><span class="line">  nvm proxy [url]              : Set a proxy to use <span class="keyword">for</span> downloads. Leave [url] blank to see the current proxy.</span><br><span class="line">                                 Set [url] to <span class="string">"none"</span> to remove the proxy.</span><br><span class="line">  nvm node_mirror [url]        : Set the node mirror. Defaults to https://nodejs.org/dist/. Leave [url] blank to use default url.</span><br><span class="line">  nvm npm_mirror [url]         : Set the npm mirror. Defaults to https://github.com/npm/cli/archive/. Leave [url] blank to default url.</span><br><span class="line">  nvm uninstall &lt;version&gt;      : The version must be a specific version.</span><br><span class="line">  nvm use [version] [arch]     : Switch to use the specified version. Optionally use <span class="string">"latest"</span>, <span class="string">"lts"</span>, or <span class="string">"newest"</span>.</span><br><span class="line">                                 <span class="string">"newest"</span> is the latest installed version. Optionally specify 32/64bit architecture.</span><br><span class="line">                                 nvm use &lt;arch&gt; will <span class="built_in">continue</span> using the selected version, but switch to 32/64 bit mode.</span><br><span class="line">  nvm root [path]              : Set the directory <span class="built_in">where</span> nvm should store different versions of node.js.</span><br><span class="line">                                 If &lt;path&gt; is not <span class="built_in">set</span>, the current root will be displayed.</span><br><span class="line">  nvm version                  : Displays the current running version of nvm <span class="keyword">for</span> Windows. Aliased as v.</span><br></pre></td></tr></table></figure>

<h3 id="三、NVM如何使用"><a href="#三、NVM如何使用" class="headerlink" title="三、NVM如何使用"></a>三、NVM如何使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//安裝指定版本的 Nodejs</span><br><span class="line">//nvm install 12</span><br><span class="line">nvm install &lt;version&gt;</span><br><span class="line"></span><br><span class="line">//刪除指定版本</span><br><span class="line">//nvm uninstall 12.22.11 (要確定詳細版本)</span><br><span class="line">nvm uninstall &lt;version&gt;    </span><br><span class="line"></span><br><span class="line">//使用指定版本的 node</span><br><span class="line">//nvm uninstall 12.22.11 (要確定詳細版本)</span><br><span class="line">nvm use [version]           </span><br><span class="line"></span><br><span class="line">//列出本機已安裝的版本</span><br><span class="line">nvm list</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：如果在terminal下執行 <code>nvm use &lt;version&gt;</code> 或 <code>nvm on</code> 產生<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzL2lzc3Vlcy83MTc=">exit status 1<i class="fa fa-external-link-alt"></i></span>，並且是亂碼，請在開啟的terminal的時候，選擇以管理員身分執行，這樣才能夠自由的切換。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob&gt; nvm use 12.22.11</span><br><span class="line"><span class="built_in">exit</span> status 1: �z�S���������v���i���榹�ާ@�C</span><br><span class="line"></span><br><span class="line">C:\Users\poabob&gt; nvm on</span><br><span class="line">nvm enabled</span><br><span class="line"><span class="built_in">exit</span> status 1: �z�S���������v���i���榹�ާ@�C</span><br></pre></td></tr></table></figure>

<h3 id="四、重新deploy-Hexo"><a href="#四、重新deploy-Hexo" class="headerlink" title="四、重新deploy Hexo"></a>四、重新deploy Hexo</h3><ol>
<li>切換版本至12.22.11</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob&gt; nvm list</span><br><span class="line"></span><br><span class="line">  * 14.19.1 (Currently using 64-bit executable)</span><br><span class="line">    13.14.0</span><br><span class="line">    12.22.11</span><br><span class="line">PS C:\Users\poabob&gt; nvm use 12.22.11</span><br><span class="line">Now using node v12.22.11 (64-bit)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>depoly成功</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\poabob\Desktop\my-blog&gt; npm run deploy</span><br><span class="line"></span><br><span class="line">&gt; hexo-site@0.0.0 deploy C:\Users\poabob\Desktop\my-blog</span><br><span class="line">&gt; hexo deploy</span><br><span class="line"></span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">[master da6f936] Site updated: 2022-03-21 21:00:29</span><br><span class="line"> 19 files changed, 434 insertions(+), 1102 deletions(-)</span><br><span class="line"> rename categories/&#123;Hello =&gt; Hexo&#125;/index.html (98%)</span><br><span class="line"> rewrite categories/index.html (100%)</span><br><span class="line"> create mode 100644 category-sitemap.xml</span><br><span class="line"> create mode 100644 images/hello-world_a.jpg</span><br><span class="line"> create mode 100644 images/hello-world_b.jpg</span><br><span class="line"> create mode 100644 images/hello-world_c.jpg</span><br><span class="line"> create mode 100644 page-sitemap.xml</span><br><span class="line"> create mode 100644 post-sitemap.xml</span><br><span class="line"> rewrite search.xml (90%)</span><br><span class="line"> rewrite sitemap.xml (100%)</span><br><span class="line"> create mode 100644 sitemap.xsl</span><br><span class="line"> create mode 100644 tag-sitemap.xml</span><br><span class="line"> rename tags/&#123;Hello =&gt; Hexo&#125;/index.html (97%)</span><br><span class="line"> rewrite tags/index.html (100%)</span><br><span class="line">Enumerating objects: 51, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (51/51), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 6 threads</span><br><span class="line">Compressing objects: 100% (24/24), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (32/32), 322.01 KiB | 16.10 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 32 (delta 13), reused 0 (delta 0), pack-reused 0</span><br><span class="line">remote: Resolving deltas: 100% (13/13), completed with 5 <span class="built_in">local</span> objects.</span><br><span class="line">To https://github.com/POABOB/poabob.github.io.git</span><br><span class="line">   4a0dd24..da6f936  HEAD -&gt; master</span><br><span class="line">Branch <span class="string">'master'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'master'</span> from <span class="string">'https://github.com/POABOB/poabob.github.io.git'</span>.</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Hexo部屬錯誤</tag>
        <tag>Node14</tag>
        <tag>NVM</tag>
      </tags>
  </entry>
</search>
